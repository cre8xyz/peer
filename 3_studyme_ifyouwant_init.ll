; ModuleID = 'init.7rcbfp3g-cgu.0'
source_filename = "init.7rcbfp3g-cgu.0"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.7.0"

%"serde_json::value::Value" = type { [0 x i8], i8, [31 x i8] }
%"core::fmt::Formatter" = type { [0 x i64], { i64, i64 }, [0 x i64], { i64, i64 }, [0 x i64], { {}*, [3 x i64]* }, [0 x i64], { i64*, i64* }, [0 x i64], { [0 x { i8*, i8* }]*, i64 }, [0 x i32], i32, [0 x i32], i32, [0 x i8], i8, [7 x i8] }
%"core::alloc::LayoutErr" = type { [0 x i8], {}, [0 x i8] }
%"alloc::collections::btree::node::NodeHeader<(), (), ()>" = type { [0 x i64], %"alloc::collections::btree::node::InternalNode<(), ()>"*, [0 x i16], i16, [0 x i16], i16, [0 x i8], [0 x {}], [4 x i8] }
%"alloc::collections::btree::node::InternalNode<(), ()>" = type { [0 x i64], %"alloc::collections::btree::node::LeafNode<(), ()>", [0 x i64], [12 x i8*], [0 x i64] }
%"alloc::collections::btree::node::LeafNode<(), ()>" = type { [0 x i64], %"alloc::collections::btree::node::InternalNode<(), ()>"*, [0 x i16], i16, [0 x i16], i16, [0 x i8], [11 x %"core::mem::maybe_uninit::MaybeUninit<()>"], [0 x i8], [11 x %"core::mem::maybe_uninit::MaybeUninit<()>"], [4 x i8] }
%"core::mem::maybe_uninit::MaybeUninit<()>" = type { [0 x i8] }
%"alloc::vec::Vec<u8>" = type { [0 x i64], { i8*, i64 }, [0 x i64], i64, [0 x i64] }
%"core::result::Result<serde_json::value::Value, serde_json::error::Error>" = type { [0 x i64], i64, [4 x i64] }
%"serde_json::read::StrRead" = type { [0 x i64], %"serde_json::read::SliceRead", [0 x i64] }
%"serde_json::read::SliceRead" = type { [0 x i64], { [0 x i8]*, i64 }, [0 x i64], i64, [0 x i64] }
%"serde_json::de::Deserializer<serde_json::read::StrRead>" = type { [0 x i64], %"serde_json::read::StrRead", [0 x i64], %"alloc::vec::Vec<u8>", [0 x i8], i8, [7 x i8] }
%"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok" = type { [1 x i64], %"serde_json::value::Value", [0 x i64] }
%"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"serde_json::de::ParserNumber" = type { [0 x i64], i64, [1 x i64] }
%"serde_json::de::ParserNumber::F64" = type { [1 x i64], double, [0 x i64] }
%"serde_json::de::ParserNumber::U64" = type { [1 x i64], i64, [0 x i64] }
%"serde_json::de::ParserNumber::I64" = type { [1 x i64], i64, [0 x i64] }
%"serde_json::error::ErrorCode" = type { [0 x i64], i64, [2 x i64] }
%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>" = type { [0 x i8], i8, [15 x i8] }
%"core::result::Result<(), serde_json::error::Error>::Ok" = type { [0 x i8], {}, [0 x i8] }
%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok" = type { [1 x i8], { i8, i8 }, [0 x i8] }
%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"core::option::Option<u8>::Some" = type { [1 x i8], i8, [0 x i8] }
%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>" = type { [0 x i64], i64, [2 x i64] }
%"core::result::Result<f64, serde_json::error::Error>" = type { [0 x i64], i64, [1 x i64] }
%"core::result::Result<u8, serde_json::error::Error>" = type { [0 x i8], i8, [15 x i8] }
%"core::result::Result<u8, serde_json::error::Error>::Ok" = type { [1 x i8], i8, [0 x i8] }
%"core::result::Result<u8, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"core::result::Result<f64, serde_json::error::Error>::Ok" = type { [1 x i64], double, [0 x i64] }
%"core::result::Result<f64, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok" = type { [1 x i64], %"serde_json::de::ParserNumber", [0 x i64] }
%"core::panic::Location" = type { [0 x i64], { [0 x i8]*, i64 }, [0 x i32], i32, [0 x i32], i32, [0 x i32] }
%"serde_json::map::Map<alloc::string::String, serde_json::value::Value>" = type { [0 x i64], %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", [0 x i64] }
%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>" = type { [0 x i64], { i64*, i64 }, [0 x i64], i64, [0 x i64] }
%"core::option::Option<serde_json::value::Value>" = type { [0 x i8], i8, [31 x i8] }
%"alloc::string::String" = type { [0 x i64], %"alloc::vec::Vec<u8>", [0 x i64] }
%"serde_json::error::ErrorImpl" = type { [0 x i64], %"serde_json::error::ErrorCode", [0 x i64], i64, [0 x i64], i64, [0 x i64] }
%"serde_json::value::de::{{impl}}::deserialize::ValueVisitor" = type {}
%"serde_json::number::Number" = type { [0 x i64], %"serde_json::number::N", [0 x i64] }
%"serde_json::number::N" = type { [0 x i64], i64, [1 x i64] }
%"serde_json::value::Value::Number" = type { [1 x i64], %"serde_json::number::Number", [0 x i64] }
%"core::option::Option<serde_json::number::Number>" = type { [0 x i64], i64, [1 x i64] }
%"serde_json::number::N::Float" = type { [1 x i64], double, [0 x i64] }
%"core::option::Option<serde_json::number::Number>::Some" = type { [0 x i64], %"serde_json::number::Number", [0 x i64] }
%"core::option::Option<(alloc::string::String, serde_json::value::Value)>" = type { [24 x i8], i8, [31 x i8] }
%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>" = type { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], i64, [0 x i64] }
%"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>" = type {}
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>" = type { [0 x i8], %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>", [0 x i8], i64, [0 x i64], i64*, [0 x i64], { i64*, i64 }*, [0 x i64] }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>" = type {}
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>" = type { [1 x i64], {}*, [2 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>" = type { [0 x i8], %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>", [0 x i8], i64, [0 x i64], i64*, [0 x i64], { i64*, i64 }*, [0 x i64] }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>" = type {}
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], i64, [0 x i64] }
%"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>" = type {}
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>" = type { [0 x i8], %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>", [0 x i8], i64, [0 x i64], i64*, [0 x i64], { i64*, i64 }*, [0 x i64] }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>" = type {}
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>" = type { [0 x i8], %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Internal)>", [0 x i8], i64, [0 x i64], i64*, [0 x i64], { i64*, i64 }*, [0 x i64] }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Internal)>" = type {}
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>" = type { [0 x i64], i64, [4 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>" = type { [0 x i8], %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Leaf)>", [0 x i8], i64, [0 x i64], i64*, [0 x i64], { i64*, i64 }*, [0 x i64] }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Leaf)>" = type {}
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [0 x i64], i64, [4 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", [0 x i64] }
%"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some" = type { [0 x i64], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>" = type { [0 x i64], %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", [0 x i64], [12 x i8*], [0 x i64] }
%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>" = type { [0 x i64], %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, [0 x i16], i16, [0 x i16], i16, [2 x i16], [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"], [0 x i64], [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"], [0 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>" = type { [3 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>" = type { [4 x i64] }
%"serde_json::value::Value::Bool" = type { [1 x i8], i8, [0 x i8] }
%"serde_json::value::Value::String" = type { [1 x i64], %"alloc::string::String", [0 x i64] }
%"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>" = type { [0 x i64], i64, [7 x i64] }
%"core::option::Option<serde_json::value::de::KeyClass>" = type { [0 x i64], {}*, [2 x i64] }
%"serde_json::value::de::KeyClassifier" = type {}
%"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>" = type { [0 x i64], i64, [3 x i64] }
%"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok" = type { [1 x i64], %"core::option::Option<serde_json::value::de::KeyClass>", [0 x i64] }
%"core::option::Option<serde_json::value::de::KeyClass>::Some" = type { [0 x i64], %"serde_json::value::de::KeyClass::Map", [0 x i64] }
%"serde_json::value::de::KeyClass::Map" = type { [0 x i64], %"alloc::string::String", [0 x i64] }
%"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok" = type { [1 x i64], %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", [0 x i64] }
%"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"serde_json::value::Value::Object" = type { [1 x i64], %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>", [0 x i64] }
%"alloc::vec::Vec<serde_json::value::Value>" = type { [0 x i64], { i64*, i64 }, [0 x i64], i64, [0 x i64] }
%"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>" = type { [0 x i64], i64, [4 x i64] }
%"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok" = type { [1 x i64], %"core::option::Option<serde_json::value::Value>", [0 x i64] }
%"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"core::option::Option<serde_json::value::Value>::Some" = type { [0 x i64], %"serde_json::value::Value", [0 x i64] }
%"serde_json::value::Value::Array" = type { [1 x i64], %"alloc::vec::Vec<serde_json::value::Value>", [0 x i64] }
%"core::fmt::Void" = type { [0 x i8], {}, [0 x i8], %"core::marker::PhantomData<*mut core::ops::function::Fn<(), Output=()>>", [0 x i8] }
%"core::marker::PhantomData<*mut core::ops::function::Fn<(), Output=()>>" = type {}
%"core::fmt::Arguments" = type { [0 x i64], { [0 x { [0 x i8]*, i64 }]*, i64 }, [0 x i64], { i64*, i64 }, [0 x i64], { [0 x { i8*, i8* }]*, i64 }, [0 x i64] }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>" = type { [0 x i64], %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", [0 x i64] }
%"core::option::Option<usize>::Some" = type { [1 x i64], i64, [0 x i64] }
%"core::option::Option<alloc::string::String>" = type { [0 x i64], {}*, [2 x i64] }
%"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>" = type { [0 x i8], %"core::marker::PhantomData<&mut (alloc::string::String, serde_json::value::Value)>", [0 x i8], %"alloc::string::String", [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64], i64*, [0 x i64] }
%"core::marker::PhantomData<&mut (alloc::string::String, serde_json::value::Value)>" = type {}
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>" = type { [0 x i8], %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>", [0 x i8], i64, [0 x i64], i64*, [0 x i64], { i64*, i64 }*, [0 x i64] }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>" = type {}
%"std::io::error::Custom" = type { [0 x i64], { {}*, [3 x i64]* }, [0 x i8], i8, [7 x i8] }
%"std::io::error::Repr" = type { [0 x i8], i8, [15 x i8] }
%"std::io::error::Repr::Custom" = type { [1 x i64], %"std::io::error::Custom"*, [0 x i64] }
%"serde_json::error::ErrorCode::Message" = type { [1 x i64], { [0 x i8]*, i64 }, [0 x i64] }
%"serde_json::error::ErrorCode::Io" = type { [1 x i64], %"std::io::error::Error", [0 x i64] }
%"std::io::error::Error" = type { [0 x i64], %"std::io::error::Repr", [0 x i64] }
%"core::option::Option<alloc::string::String>::Some" = type { [0 x i64], %"alloc::string::String", [0 x i64] }
%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>" = type { [0 x i64], i64, [12 x i64] }
%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>" = type { [0 x i8], %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>", [0 x i8], i64, [0 x i64], i64*, [0 x i64], { i64*, i64 }*, [0 x i64] }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>" = type {}
%"core::ptr::Repr<alloc::string::String>" = type { [2 x i64] }
%"core::ptr::Repr<u8>" = type { [2 x i64] }
%"core::ptr::Repr<serde_json::value::Value>" = type { [2 x i64] }
%"core::ptr::Repr<alloc::collections::btree::node::BoxedNode<alloc::string::String, serde_json::value::Value>>" = type { [2 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>" = type { [0 x i64], %"core::ptr::swap_nonoverlapping_bytes::UnalignedBlock", [0 x i64] }
%"core::ptr::swap_nonoverlapping_bytes::UnalignedBlock" = type { [0 x i64], i64, [0 x i64], i64, [0 x i64], i64, [0 x i64], i64, [0 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>" = type { [4 x i64] }
%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>" = type { [0 x i64], %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, [0 x i16], i16, [0 x i16], i16, [0 x i8], [0 x {}], [4 x i8] }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>" = type { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>" = type { [0 x i64], %"serde_json::value::Value", [0 x i64] }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>" = type { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<alloc::string::String>" = type { [0 x i64], %"alloc::string::String", [0 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [4 x i64] }
%"core::marker::PhantomData<alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>>" = type {}
%"core::marker::PhantomData<serde_json::value::Value>" = type {}
%"core::marker::PhantomData<alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>>" = type {}
%"core::marker::PhantomData<u8>" = type {}
%"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>" = type { [0 x i8], %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>", [0 x i8] }
%"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>" = type { [0 x i8], {}, [0 x i8] }
%"core::result::Result<(), !>::Ok" = type { [0 x i8], {}, [0 x i8] }
%"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>" = type { [0 x i64], { i64*, i64* }, [0 x i64], i64, [0 x i64] }
%"core::result::Result<core::alloc::Layout, core::alloc::LayoutErr>::Err" = type { [0 x i8], %"core::alloc::LayoutErr", [0 x i8] }
%"core::alloc::{{impl}}::array::{{closure}}<serde_json::value::Value>" = type {}
%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>" = type { [1 x i64], i64, [1 x i64] }
%"core::alloc::{{impl}}::array::{{closure}}<u8>" = type {}
%"core::result::Result<usize, core::alloc::LayoutErr>::Ok" = type { [1 x i64], i64, [0 x i64] }
%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Ok" = type { [0 x i64], { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, [0 x i64] }
%"core::ptr::Repr<f64>" = type { [2 x i64] }
%"core::marker::PhantomData<&alloc::string::String>" = type {}
%"core::marker::PhantomData<&u8>" = type {}
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some" = type { [0 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"core::result::Result<usize, core::alloc::LayoutErr>::Err" = type { [8 x i8], %"core::alloc::LayoutErr", [0 x i8] }
%"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocErr>::Err" = type { [0 x i8], %"core::alloc::AllocErr", [0 x i8] }
%"core::alloc::AllocErr" = type {}
%"core::result::Result<&alloc::string::String, core::option::NoneError>::Err" = type { [0 x i8], %"core::option::NoneError", [0 x i8] }
%"core::option::NoneError" = type {}
%"core::result::Result<usize, alloc::collections::TryReserveError>" = type { [0 x i64], i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 }, [0 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], i64, [0 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveError>" = type { [0 x i64], i64, [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 }, [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>" = type { [0 x i64], i64, [4 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>" = type { [0 x i64], i64, [4 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>" = type { [0 x i64], i64, [3 x i64] }
%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok" = type { [1 x i64], %"serde_json::value::de::KeyClass::Map", [0 x i64] }
%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>" = type { [0 x i64], i64, [3 x i64] }
%"core::result::Result<alloc::string::String, serde_json::error::Error>" = type { [0 x i64], i64, [3 x i64] }
%"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok" = type { [1 x i64], %"alloc::string::String", [0 x i64] }
%"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok" = type { [1 x i64], %"core::option::Option<alloc::string::String>", [0 x i64] }
%"core::result::Result<alloc::string::String, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>" = type { [0 x i64], i64, [2 x i64] }
%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i64, i64 }, [0 x i64] }
%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 }, [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>" = type { [0 x i64], i64, [4 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>" = type { [0 x i64], i64, [4 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], i64, [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err" = type { [1 x i64], { i64*, i64 }*, [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>" = type { [0 x i64], i64, [4 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64] }
%"alloc::alloc::Global" = type {}
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>" = type { [0 x i64], i64, [3 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64] }
%"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>" = type { [0 x i64], i64, [8 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>" = type { [0 x i8], %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::LeafOrInternal)>", [0 x i8], i64, [0 x i64], i64*, [0 x i64], { i64*, i64 }*, [0 x i64] }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::LeafOrInternal)>" = type {}
%"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>" = type { [0 x i8], %"core::marker::PhantomData<&mut (alloc::string::String, serde_json::value::Value)>", [0 x i8], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", [0 x i64], i64*, [0 x i64] }
%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>" = type { [0 x i64], i64, [4 x i64] }
%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::Found" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", [0 x i64] }
%"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Occupied" = type { [1 x i64], %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>", [0 x i64] }
%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::GoDown" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant" = type { [1 x i64], %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>", [0 x i64] }
%"alloc::collections::btree::map::{{impl}}::insert::{{closure}}<alloc::string::String, serde_json::value::Value>" = type {}
%"alloc::collections::btree::map::{{impl}}::insert::{{closure}}<alloc::string::String, serde_json::value::Value>.1" = type {}
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>" = type { [0 x i64], i64, [12 x i64] }
%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Fit" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", [0 x i64] }
%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>" = type { [0 x i8], %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", [0 x i8], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", [0 x i64], i64, [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>" = type { [0 x i64], i64, [4 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>" = type { [0 x i64], i64, [3 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>" = type { [0 x i8], %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>", [0 x i8], i64, [0 x i64], i64*, [0 x i64], { i64*, i64 }*, [0 x i64] }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>" = type {}
%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Fit" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64] }
%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>" = type { [0 x i64], %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, [0 x i16], i16, [0 x i16], i16, [2 x i16], [0 x %"alloc::string::String"], [0 x i64] }
%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>" = type { [0 x i64], i64, [4 x i64] }
%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::Found" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", [0 x i64] }
%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::GoDown" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", [0 x i64] }
%"core::str::{{impl}}::as_bytes::Slices" = type { [2 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveError>::Ok" = type { [8 x i8], {}, [0 x i8] }
%"alloc::raw_vec::{{impl}}::allocate_in::{{closure}}<u8, alloc::alloc::Global>.0" = type {}
%"alloc::raw_vec::{{impl}}::allocate_in::{{closure}}<u8, alloc::alloc::Global>" = type {}
%"alloc::raw_vec::{{impl}}::reserve_internal::{{closure}}<serde_json::value::Value, alloc::alloc::Global>" = type {}
%"alloc::raw_vec::{{impl}}::reserve_internal::{{closure}}<u8, alloc::alloc::Global>" = type {}
%"serde::de::impls::StringVisitor" = type {}
%"core::marker::PhantomData<alloc::string::String>" = type {}
%"core::ops::range::RangeFull" = type {}
%"core::result::Result<(), !>::Err" = type { [0 x i8] }
%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Err" = type { [0 x i8], %"core::alloc::LayoutErr", [0 x i8] }
%"serde_json::read::Reference<str>" = type { [0 x i64], i64, [2 x i64] }
%"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>" = type { [0 x i64], i64, [3 x i64] }
%"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok" = type { [1 x i64], %"serde_json::read::Reference<str>", [0 x i64] }
%"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err" = type { [1 x i64], i64*, [0 x i64] }
%"serde_json::read::Reference<str>::Borrowed" = type { [1 x i64], { [0 x i8]*, i64 }, [0 x i64] }
%"serde_json::read::Reference<str>::Copied" = type { [1 x i64], { [0 x i8]*, i64 }, [0 x i64] }
%"serde_json::number::N::PosInt" = type { [1 x i64], i64, [0 x i64] }
%"serde_json::number::N::NegInt" = type { [1 x i64], i64, [0 x i64] }
%"unwind::libunwind::_Unwind_Exception" = type { [0 x i64], i64, [0 x i64], void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [0 x i64], [6 x i64], [0 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@_ZN10serde_json2de5POW1017hf5de5bb0e948b3cfE = external global [309 x double]
@0 = private unnamed_addr constant <{ [89 x i8] }> <{ [89 x i8] c"/Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.40/src/de.rs" }>, align 1
@1 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @0, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\5C\00\00\00\0F\00\00\00" }>, align 8
@str.0 = internal constant [31 x i8] c"attempt to divide with overflow"
@2 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @0, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\5C\00\00\00 \00\00\00" }>, align 8
@3 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [89 x i8] }>, <{ [89 x i8] }>* @0, i32 0, i32 0, i32 0), [16 x i8] c"Y\00\00\00\00\00\00\00\5C\00\00\000\00\00\00" }>, align 8
@str.1 = internal constant [48 x i8] c"attempt to calculate the remainder with overflow"
@"_ZN10serde_json5value5index87_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$serde_json..value..Value$GT$5index4NULL17h6f0e269ee7495f91E" = external global %"serde_json::value::Value"
@vtable.2 = private unnamed_addr constant { void (i8**)*, i64, i64, i32 (i8**)*, i32 (i8**)*, i32 (i8**)* } { void (i8**)* @_ZN4core3ptr18real_drop_in_place17h52a3dcad0a6096bfE, i64 8, i64 8, i32 (i8**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h841fc13b70591440E", i32 (i8**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h841fc13b70591440E", i32 (i8**)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hc2a9e62f9b7d09cdE" }, align 8
@4 = private unnamed_addr constant <{ [46 x i8] }> <{ [46 x i8] c"attempt to copy from unaligned or null pointer" }>, align 1
@5 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"src/libcore/intrinsics.rs" }>, align 1
@6 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @5, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00\BC\05\00\00\05\00\00\00" }>, align 8
@7 = private unnamed_addr constant <{ [44 x i8] }> <{ [44 x i8] c"attempt to copy to unaligned or null pointer" }>, align 1
@8 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @5, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00\BD\05\00\00\05\00\00\00" }>, align 8
@9 = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"attempt to copy to overlapping memory" }>, align 1
@10 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @5, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00\BE\05\00\00\05\00\00\00" }>, align 8
@11 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"/rustc/b520af6fd515b186caed436d75162a42aa183d95/src/libcore/intrinsics.rs" }>, align 1
@12 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [73 x i8] }>, <{ [73 x i8] }>* @11, i32 0, i32 0, i32 0), [16 x i8] c"I\00\00\00\00\00\00\00Q\05\00\00\17\00\00\00" }>, align 8
@str.3 = internal constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@13 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @5, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00\FC\05\00\00\05\00\00\00" }>, align 8
@14 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @5, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00\FD\05\00\00\05\00\00\00" }>, align 8
@15 = private unnamed_addr constant <{ [62 x i8] }> <{ [62 x i8] c"assertion failed: Layout::from_size_align(size, align).is_ok()" }>, align 1
@16 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"src/libcore/alloc.rs" }>, align 1
@17 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @16, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00}\00\00\00\09\00\00\00" }>, align 8
@18 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"assertion failed: offs == mem::size_of::<T>()" }>, align 1
@19 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @16, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00C\01\00\00\11\00\00\00" }>, align 8
@20 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"attempt to create unaligned or null slice" }>, align 1
@21 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"src/libcore/slice/mod.rs" }>, align 1
@22 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @21, i32 0, i32 0, i32 0), [16 x i8] c"\18\00\00\00\00\00\00\00\C1\14\00\00\05\00\00\00" }>, align 8
@23 = private unnamed_addr constant <{ [55 x i8] }> <{ [55 x i8] c"attempt to create slice covering half the address space" }>, align 1
@24 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @21, i32 0, i32 0, i32 0), [16 x i8] c"\18\00\00\00\00\00\00\00\C2\14\00\00\05\00\00\00" }>, align 8
@25 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @21, i32 0, i32 0, i32 0), [16 x i8] c"\18\00\00\00\00\00\00\00\D6\14\00\00\05\00\00\00" }>, align 8
@26 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @21, i32 0, i32 0, i32 0), [16 x i8] c"\18\00\00\00\00\00\00\00\D7\14\00\00\05\00\00\00" }>, align 8
@27 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"assertion failed: `(left == right)`\0A  left: `" }>, align 1
@28 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"`,\0A right: `" }>, align 1
@29 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"`: " }>, align 1
@30 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [45 x i8] }>, <{ [45 x i8] }>* @27, i32 0, i32 0, i32 0), [8 x i8] c"-\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @28, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @29, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@31 = private unnamed_addr constant <{ [52 x i8] }> <{ [52 x i8] c"destination and source slices have different lengths" }>, align 1
@32 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [52 x i8] }>, <{ [52 x i8] }>* @31, i32 0, i32 0, i32 0), [8 x i8] c"4\00\00\00\00\00\00\00" }>, align 8
@33 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @21, i32 0, i32 0, i32 0), [16 x i8] c"\18\00\00\00\00\00\00\00\A9\08\00\00\09\00\00\00" }>, align 8
@34 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@35 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"src/libcore/option.rs" }>, align 1
@36 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @35, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00z\01\00\00\15\00\00\00" }>, align 8
@vtable.4 = private unnamed_addr constant { void (i64**)*, i64, i64, i1 (i64**, %"core::fmt::Formatter"*)* } { void (i64**)* @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E, i64 8, i64 8, i1 (i64**, %"core::fmt::Formatter"*)* @"_ZN61_$LT$serde_json..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h12d67353ba91dfdbE" }, align 8
@37 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.5 = private unnamed_addr constant { void (%"core::alloc::LayoutErr"*)*, i64, i64, i1 (%"core::alloc::LayoutErr"*, %"core::fmt::Formatter"*)* } { void (%"core::alloc::LayoutErr"*)* @_ZN4core3ptr18real_drop_in_place17h4ac5e5cd794556ddE, i64 0, i64 1, i1 (%"core::alloc::LayoutErr"*, %"core::fmt::Formatter"*)* @"_ZN59_$LT$core..alloc..LayoutErr$u20$as$u20$core..fmt..Debug$GT$3fmt17h7f2cfe2f03b2687cE" }, align 8
@vtable.6 = private unnamed_addr constant { void ({ [0 x i8] }*)*, i64, i64, i1 ({ [0 x i8] }*, %"core::fmt::Formatter"*)* } { void ({ [0 x i8] }*)* @_ZN4core3ptr18real_drop_in_place17h7479a83b6311fd5fE, i64 0, i64 1, i1 ({ [0 x i8] }*, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$u21$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2885998fd11a212fE" }, align 8
@38 = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"/rustc/b520af6fd515b186caed436d75162a42aa183d95/src/libcore/ops/arith.rs" }>, align 1
@39 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [72 x i8] }>, <{ [72 x i8] }>* @38, i32 0, i32 0, i32 0), [16 x i8] c"H\00\00\00\00\00\00\00\BA\02\00\003\00\00\00" }>, align 8
@str.7 = internal constant [28 x i8] c"attempt to add with overflow"
@40 = private unnamed_addr constant <{ [38 x i8] }> <{ [38 x i8] c"'unchecked' unwrap on None in BTreeMap" }>, align 1
@41 = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"src/liballoc/collections/btree/map.rs" }>, align 1
@42 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [37 x i8] }>, <{ [37 x i8] }>* @41, i32 0, i32 0, i32 0), [16 x i8] c"%\00\00\00\00\00\00\00\96\07\00\00\0D\00\00\00" }>, align 8
@43 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"assertion failed: !self.is_shared_root()" }>, align 1
@44 = private unnamed_addr constant <{ [38 x i8] }> <{ [38 x i8] c"src/liballoc/collections/btree/node.rs" }>, align 1
@45 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\F5\01\00\00\09\00\00\00" }>, align 8
@46 = private unnamed_addr constant <{ [48 x i8] }> <{ [48 x i8] c"assertion failed: edge.height == self.height - 1" }>, align 1
@47 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\DC\02\00\00\09\00\00\00" }>, align 8
@48 = private unnamed_addr constant <{ [39 x i8] }> <{ [39 x i8] c"assertion failed: self.len() < CAPACITY" }>, align 1
@49 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\DD\02\00\00\09\00\00\00" }>, align 8
@50 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"assertion failed: idx < node.len()" }>, align 1
@51 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\97\03\00\00\09\00\00\00" }>, align 8
@52 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: idx <= node.len()" }>, align 1
@53 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\E1\03\00\00\09\00\00\00" }>, align 8
@54 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\06\01\00\00\09\00\00\00" }>, align 8
@_ZN5alloc11collections5btree4node15EMPTY_ROOT_NODE17h6eb12c3df8cca51dE = external global %"alloc::collections::btree::node::NodeHeader<(), (), ()>"
@55 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"assertion failed: !self.node.is_shared_root()" }>, align 1
@56 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\BE\04\00\00\09\00\00\00" }>, align 8
@57 = private unnamed_addr constant <{ [44 x i8] }> <{ [44 x i8] c"assertion failed: self.node.len() < CAPACITY" }>, align 1
@58 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\07\04\00\00\09\00\00\00" }>, align 8
@59 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\08\04\00\00\09\00\00\00" }>, align 8
@60 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00L\04\00\00\09\00\00\00" }>, align 8
@61 = private unnamed_addr constant <{ [53 x i8] }> <{ [53 x i8] c"assertion failed: edge.height == self.node.height - 1" }>, align 1
@62 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00M\04\00\00\09\00\00\00" }>, align 8
@63 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00i\04\00\00\09\00\00\00" }>, align 8
@64 = private unnamed_addr constant <{ [24 x i8] }> zeroinitializer, align 8
@65 = private unnamed_addr constant <{ [32 x i8] }> zeroinitializer, align 8
@66 = private unnamed_addr constant <{ [8 x i8] }> zeroinitializer, align 8
@67 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\A1\02\00\00\09\00\00\00" }>, align 8
@68 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00\97\02\00\00\09\00\00\00" }>, align 8
@69 = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"assertion failed: mem::size_of::<NodeHeader<K, V>>() == mem::size_of::<NodeHeader<K, V, K>>()" }>, align 1
@70 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00d\02\00\00\0D\00\00\00" }>, align 8
@71 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @44, i32 0, i32 0, i32 0), [16 x i8] c"&\00\00\00\00\00\00\00n\02\00\00\09\00\00\00" }>, align 8
@72 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@73 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@74 = private unnamed_addr constant <{ [44 x i8] }> <{ [44 x i8] c"assertion failed: new_len <= self.capacity()" }>, align 1
@75 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"src/liballoc/vec.rs" }>, align 1
@76 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @75, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\A8\03\00\00\09\00\00\00" }>, align 8
@77 = private unnamed_addr constant <{ [54 x i8] }> <{ [54 x i8] c"assertion failed: new_layout.align() == layout.align()" }>, align 1
@78 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"src/liballoc/raw_vec.rs" }>, align 1
@79 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [23 x i8] }>, <{ [23 x i8] }>* @78, i32 0, i32 0, i32 0), [16 x i8] c"\17\00\00\00\00\00\00\00\B4\02\00\00\15\00\00\00" }>, align 8
@80 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@81 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [23 x i8] }>, <{ [23 x i8] }>* @78, i32 0, i32 0, i32 0), [16 x i8] c"\17\00\00\00\00\00\00\00\0A\02\00\00'\00\00\00" }>, align 8
@82 = private unnamed_addr constant <{ [91 x i8] }> <{ [91 x i8] c"/Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.40/src/read.rs" }>, align 1
@83 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @82, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\D6\01\00\00\16\00\00\00" }>, align 8
@84 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @82, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\E3\01\00\00\12\00\00\00" }>, align 8
@85 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"alse" }>, align 1
@86 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"rue" }>, align 1
@87 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"ull" }>, align 1
@88 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"{\0A\0A    \09\22language\22:\22RUST\22,\0A    \09\22init\22:\22fn main() {println!(\5C\22HI\5C\22)}\22\0A\0A    }" }>, align 1
@89 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"JSON was not well-formatted" }>, align 1
@90 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 1
@91 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\0A" }>, align 1
@92 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @90, i32 0, i32 0, i32 0), [8 x i8] zeroinitializer, i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @91, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@93 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"init" }>, align 1

; <core::ops::range::RangeFrom<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @"_ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hd64912864bd0a3f9E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_5 = alloca { i64, i64 }, align 8
; call core::slice::<impl [T]>::len
  %0 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_5 to i64*
  store i64 %self, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
; call <core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hdb909e221daffdcdE"(i64 %4, i64 %6, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %9
}

; <alloc::vec::Vec<T> as alloc::vec::SpecExtend<&T,core::slice::Iter<T>>>::spec_extend
; Function Attrs: uwtable
define internal void @"_ZN109_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..SpecExtend$LT$$RF$T$C$core..slice..Iter$LT$T$GT$$GT$$GT$11spec_extend17hc740559ffb375a4dE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8*, i8*) unnamed_addr #1 {
start:
  %_23 = alloca i64, align 8
  %iterator = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 1
  store i8* %1, i8** %3, align 8
; call core::slice::Iter<T>::as_slice
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice13Iter$LT$T$GT$8as_slice17h1eeb1dfd8e9033ecE"({ i8*, i8* }* noalias readonly align 8 dereferenceable(16) %iterator)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::len
  %5 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %_8.0, i64 %_8.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::vec::Vec<T>::reserve
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$7reserve17h5212ae0671e06415E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %5)
  br label %bb3

bb3:                                              ; preds = %bb2
; call alloc::vec::Vec<T>::len
  %_14 = call i64 @"_ZN5alloc3vec12Vec$LT$T$GT$3len17ha1386654566913eaE"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::slice::<impl [T]>::len
  %6 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %_8.0, i64 %_8.1)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_13 = add i64 %_14, %6
; call alloc::vec::Vec<T>::set_len
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$7set_len17hbfe99e7e439e91d5E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 %_13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <alloc::vec::Vec<T> as core::ops::deref::DerefMut>::deref_mut
  %7 = call { [0 x i8]*, i64 } @"_ZN71_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h589a0160353ee4e0E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  %_20.0 = extractvalue { [0 x i8]*, i64 } %7, 0
  %_20.1 = extractvalue { [0 x i8]*, i64 } %7, 1
  br label %bb7

bb7:                                              ; preds = %bb6
  store i64 %_14, i64* %_23, align 8
  %8 = load i64, i64* %_23, align 8
; call core::slice::<impl [T]>::get_unchecked_mut
  %9 = call { [0 x i8]*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17he3db8f7bb3638e38E"([0 x i8]* nonnull align 1 %_20.0, i64 %_20.1, i64 %8)
  %_18.0 = extractvalue { [0 x i8]*, i64 } %9, 0
  %_18.1 = extractvalue { [0 x i8]*, i64 } %9, 1
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::slice::<impl [T]>::copy_from_slice
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17he89b076b9f180569E"([0 x i8]* nonnull align 1 %_18.0, i64 %_18.1, [0 x i8]* noalias nonnull readonly align 1 %_8.0, i64 %_8.1)
  br label %bb9

bb9:                                              ; preds = %bb8
  ret void
}

; serde_json::de::from_trait
; Function Attrs: uwtable
define internal void @_ZN10serde_json2de10from_trait17h3a15270127c36777E(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), %"serde_json::read::StrRead"* noalias nocapture dereferenceable(24) %read) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_18 = alloca %"serde_json::value::Value", align 8
  %_12 = alloca i64*, align 8
  %val = alloca %"serde_json::value::Value", align 8
  %_5 = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %value = alloca %"serde_json::value::Value", align 8
  %_3 = alloca %"serde_json::read::StrRead", align 8
  %de = alloca %"serde_json::de::Deserializer<serde_json::read::StrRead>", align 8
  %2 = bitcast %"serde_json::read::StrRead"* %_3 to i8*
  %3 = bitcast %"serde_json::read::StrRead"* %read to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; call serde_json::de::Deserializer<R>::new
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$3new17h15325ca982be86c9E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias nocapture sret dereferenceable(56) %de, %"serde_json::read::StrRead"* noalias nocapture dereferenceable(24) %_3)
  br label %bb2

bb1:                                              ; preds = %bb4
  %4 = bitcast { i8*, i32 }* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb2:                                              ; preds = %start
; invoke serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize
  invoke void @"_ZN10serde_json5value2de77_$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$11deserialize17h6a070a70d67c12dbE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %_5, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %de)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %10 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_5 to i64*
  %_7 = load i64, i64* %10, align 8, !range !1
  switch i64 %_7, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb7
  ]

bb4:                                              ; preds = %bb11, %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h6ab0cad95da20374E(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %de) #14
  br label %bb1

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %11 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_5 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %13 = bitcast %"serde_json::value::Value"* %val to i8*
  %14 = bitcast %"serde_json::value::Value"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  %15 = bitcast %"serde_json::value::Value"* %value to i8*
  %16 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false)
  %17 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_5 to i64*
  %_19 = load i64, i64* %17, align 8, !range !1
  %18 = icmp eq i64 %_19, 0
  br i1 %18, label %bb19, label %bb20

bb7:                                              ; preds = %bb3
  %19 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_5 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %20 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %19, i32 0, i32 1
  %err = load i64*, i64** %20, align 8, !nonnull !2
  %21 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %22 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %21, i32 0, i32 1
  store i64* %err, i64** %22, align 8
  %23 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %23, align 8
  %24 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_5 to i64*
  %_20 = load i64, i64* %24, align 8, !range !1
  %25 = icmp eq i64 %_20, 0
  br i1 %25, label %bb22, label %bb21

bb8:                                              ; preds = %bb18, %bb10
  ret void

bb9:                                              ; preds = %bb16, %bb21
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h6ab0cad95da20374E(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %de)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb8

bb11:                                             ; preds = %cleanup1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %value) #14
  br label %bb4

bb12:                                             ; preds = %bb19
  store i64* %43, i64** %_12, align 8
  %26 = bitcast i64** %_12 to {}**
  %27 = load {}*, {}** %26, align 8
  %28 = icmp ule {}* %27, null
  %_14 = select i1 %28, i64 0, i64 1
  switch i64 %_14, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb15
  ]

bb13:                                             ; preds = %bb12
  unreachable

bb14:                                             ; preds = %bb12
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_12)
          to label %bb17 unwind label %cleanup1

bb15:                                             ; preds = %bb12
  %err2 = load i64*, i64** %_12, align 8, !nonnull !2
  %29 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %30 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %29, i32 0, i32 1
  store i64* %err2, i64** %30, align 8
  %31 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %31, align 8
  %32 = bitcast i64** %_12 to {}**
  %33 = load {}*, {}** %32, align 8
  %34 = icmp ule {}* %33, null
  %_21 = select i1 %34, i64 0, i64 1
  %35 = icmp eq i64 %_21, 1
  br i1 %35, label %bb23, label %bb24

bb16:                                             ; preds = %bb23
  br label %bb9

bb17:                                             ; preds = %bb14
  %36 = bitcast %"serde_json::value::Value"* %_18 to i8*
  %37 = bitcast %"serde_json::value::Value"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 32, i1 false)
  %38 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %39 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %38, i32 0, i32 1
  %40 = bitcast %"serde_json::value::Value"* %39 to i8*
  %41 = bitcast %"serde_json::value::Value"* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false)
  %42 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %42, align 8
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h6ab0cad95da20374E(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %de)
  br label %bb18

bb18:                                             ; preds = %bb17
  br label %bb8

bb19:                                             ; preds = %bb20, %bb6
; invoke serde_json::de::Deserializer<R>::end
  %43 = invoke noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$3end17hcbcbe374b4655a15E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %de)
          to label %bb12 unwind label %cleanup1

bb20:                                             ; preds = %bb6
  %44 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_5 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %45 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %44, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %45)
          to label %bb19 unwind label %cleanup1

bb21:                                             ; preds = %bb22, %bb7
  br label %bb9

bb22:                                             ; preds = %bb7
  %46 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_5 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %47 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %46, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %47)
          to label %bb21 unwind label %cleanup

bb23:                                             ; preds = %bb24, %bb15
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %value)
          to label %bb16 unwind label %cleanup

bb24:                                             ; preds = %bb15
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_12)
          to label %bb23 unwind label %cleanup1

cleanup:                                          ; preds = %bb23, %bb22, %bb2
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = extractvalue { i8*, i32 } %48, 1
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  br label %bb4

cleanup1:                                         ; preds = %bb14, %bb24, %bb19, %bb20
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb11
}

; serde_json::de::ParserNumber::visit
; Function Attrs: uwtable
define internal void @_ZN10serde_json2de12ParserNumber5visit17h8ecc1c455e59bd2dE(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), %"serde_json::de::ParserNumber"* noalias nocapture dereferenceable(16) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"serde_json::de::ParserNumber"* %self to i64*
  %_3 = load i64, i64* %1, align 8, !range !3
  switch i64 %_3, label %bb1 [
    i64 0, label %bb2
    i64 1, label %bb4
    i64 2, label %bb6
  ]

bb1:                                              ; preds = %start
  unreachable

bb2:                                              ; preds = %start
  %2 = bitcast %"serde_json::de::ParserNumber"* %self to %"serde_json::de::ParserNumber::F64"*
  %3 = getelementptr inbounds %"serde_json::de::ParserNumber::F64", %"serde_json::de::ParserNumber::F64"* %2, i32 0, i32 1
  %x2 = load double, double* %3, align 8
; call <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_f64
  call void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_f6417h5653e63d5c357d8aE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, double %x2)
  br label %bb3

bb3:                                              ; preds = %bb2
  br label %bb8

bb4:                                              ; preds = %start
  %4 = bitcast %"serde_json::de::ParserNumber"* %self to %"serde_json::de::ParserNumber::U64"*
  %5 = getelementptr inbounds %"serde_json::de::ParserNumber::U64", %"serde_json::de::ParserNumber::U64"* %4, i32 0, i32 1
  %x1 = load i64, i64* %5, align 8
; call <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_u64
  call void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_u6417hbe2bc3a34e0cab04E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, i64 %x1)
  br label %bb5

bb5:                                              ; preds = %bb4
  br label %bb8

bb6:                                              ; preds = %start
  %6 = bitcast %"serde_json::de::ParserNumber"* %self to %"serde_json::de::ParserNumber::I64"*
  %7 = getelementptr inbounds %"serde_json::de::ParserNumber::I64", %"serde_json::de::ParserNumber::I64"* %6, i32 0, i32 1
  %x = load i64, i64* %7, align 8
; call <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_i64
  call void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_i6417h9ce7ec6c7da90479E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, i64 %x)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb3, %bb5, %bb7
  ret void
}

; serde_json::de::MapAccess<R>::new
; Function Attrs: uwtable
define internal { i64*, i8 } @"_ZN10serde_json2de18MapAccess$LT$R$GT$3new17h84746e6730a85f4eE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %de) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast { i64*, i8 }* %0 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %de, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8, !nonnull !2
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !4
  %7 = trunc i8 %6 to i1
  %8 = zext i1 %7 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %4, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10
}

; serde_json::de::SeqAccess<R>::new
; Function Attrs: uwtable
define internal { i64*, i8 } @"_ZN10serde_json2de18SeqAccess$LT$R$GT$3new17hb6bd22e213983f12E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %de) unnamed_addr #1 {
start:
  %0 = alloca { i64*, i8 }, align 8
  %1 = bitcast { i64*, i8 }* %0 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %de, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %1, align 8
  %2 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8, !nonnull !2
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %0, i32 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !4
  %7 = trunc i8 %6 to i1
  %8 = zext i1 %7 to i8
  %9 = insertvalue { i64*, i8 } undef, i64* %4, 0
  %10 = insertvalue { i64*, i8 } %9, i8 %8, 1
  ret { i64*, i8 } %10
}

; serde_json::de::Deserializer<R>::peek_error
; Function Attrs: cold uwtable
define internal noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56), %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %reason) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_5 = alloca %"serde_json::error::ErrorCode", align 8
  %self = alloca %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, align 8
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
  %2 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %_4 = bitcast %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %2 to %"serde_json::read::StrRead"*
; invoke <serde_json::read::StrRead as serde_json::read::Read>::peek_position
  %3 = invoke { i64, i64 } @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$13peek_position17hedd027b1449046ecE"(%"serde_json::read::StrRead"* noalias readonly align 8 dereferenceable(24) %_4)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb4, %bb5
  %4 = bitcast { i8*, i32 }* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb2:                                              ; preds = %start
  %_6 = extractvalue { i64, i64 } %3, 0
  %_7 = extractvalue { i64, i64 } %3, 1
  store i8 0, i8* %_8, align 1
  %10 = bitcast %"serde_json::error::ErrorCode"* %_5 to i8*
  %11 = bitcast %"serde_json::error::ErrorCode"* %reason to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
; invoke serde_json::error::Error::syntax
  %12 = invoke noalias align 8 dereferenceable(40) i64* @_ZN10serde_json5error5Error6syntax17h5970e7652e1e592cE(%"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_5, i64 %_6, i64 %_7)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret i64* %12

bb4:                                              ; preds = %bb5
  store i8 0, i8* %_8, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h61d59176afeb8a22E(%"serde_json::error::ErrorCode"* align 8 dereferenceable(24) %reason) #14
  br label %bb1

bb5:                                              ; preds = %cleanup
  %13 = load i8, i8* %_8, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb4, label %bb1

cleanup:                                          ; preds = %bb2, %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb5
}

; serde_json::de::Deserializer<R>::parse_ident
; Function Attrs: uwtable
define internal noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$11parse_ident17h302880db207ea2acE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, [0 x i8]* noalias nonnull readonly align 1 %ident.0, i64 %ident.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_33 = alloca i8, align 1
  %_32 = alloca {}, align 1
  %_31 = alloca %"serde_json::error::ErrorCode", align 8
  %_24 = alloca %"serde_json::error::ErrorCode", align 8
  %_15 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_14 = alloca { i8, i8 }, align 1
  %_7 = alloca i8*, align 8
  %iter = alloca { i8*, i8* }, align 8
  %1 = alloca i64*, align 8
  store i8 0, i8* %_33, align 1
; call core::slice::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %2 = call { i8*, i8* } @"_ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h62294fff6c0bee53E"([0 x i8]* noalias nonnull readonly align 1 %ident.0, i64 %ident.1)
  %3 = extractvalue { i8*, i8* } %2, 0
  %4 = extractvalue { i8*, i8* } %2, 1
  br label %bb2

bb1:                                              ; preds = %bb13
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 0
  store i8* %3, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter, i32 0, i32 1
  store i8* %4, i8** %12, align 8
  br label %bb3

bb3:                                              ; preds = %bb22, %bb2
; call <core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %13 = call align 1 dereferenceable_or_null(1) i8* @"_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3a5f1015b75355f6E"({ i8*, i8* }* align 8 dereferenceable(16) %iter)
  store i8* %13, i8** %_7, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast i8** %_7 to {}**
  %15 = load {}*, {}** %14, align 8
  %16 = icmp ule {}* %15, null
  %_10 = select i1 %16, i64 0, i64 1
  switch i64 %_10, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ]

bb5:                                              ; preds = %bb4
  %17 = bitcast i64** %1 to %"core::result::Result<(), serde_json::error::Error>::Ok"*
  %18 = bitcast %"core::result::Result<(), serde_json::error::Error>::Ok"* %17 to {}*
  %19 = bitcast i64** %1 to {}**
  store {}* null, {}** %19, align 8
  br label %bb12

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  %val = load i8*, i8** %_7, align 8, !nonnull !2
  store i8 1, i8* %_33, align 1
; call serde_json::de::Deserializer<R>::next_char
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$9next_char17h0e00787cc80c5e1eE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_15, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb8

bb8:                                              ; preds = %bb7
  %20 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_15 to i8*
  %21 = load i8, i8* %20, align 8, !range !4
  %22 = trunc i8 %21 to i1
  %_17 = zext i1 %22 to i64
  switch i64 %_17, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb11
  ]

bb9:                                              ; preds = %bb8
  unreachable

bb10:                                             ; preds = %bb8
  %23 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_15 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %24 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %23, i32 0, i32 1
  %25 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %24, i32 0, i32 0
  %26 = load i8, i8* %25, align 1, !range !4
  %val.0 = trunc i8 %26 to i1
  %27 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %24, i32 0, i32 1
  %val.1 = load i8, i8* %27, align 1
  %28 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_14, i32 0, i32 0
  %29 = zext i1 %val.0 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_14, i32 0, i32 1
  store i8 %val.1, i8* %30, align 1
  %31 = bitcast { i8, i8 }* %_14 to i8*
  %32 = load i8, i8* %31, align 1, !range !4
  %33 = trunc i8 %32 to i1
  %_21 = zext i1 %33 to i64
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb18
  ]

bb11:                                             ; preds = %bb8
  store i8 0, i8* %_33, align 1
  %34 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_15 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %35 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %34, i32 0, i32 1
  %err = load i64*, i64** %35, align 8, !nonnull !2
  store i64* %err, i64** %1, align 8
  br label %bb14

bb12:                                             ; preds = %bb5, %bb23
  %36 = load i64*, i64** %1, align 8
  ret i64* %36

bb13:                                             ; preds = %cleanup
  store i8 0, i8* %_33, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_15) #14
  br label %bb1

bb14:                                             ; preds = %bb17, %bb21, %bb11
  %37 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_15 to i8*
  %38 = load i8, i8* %37, align 8, !range !4
  %39 = trunc i8 %38 to i1
  %_34 = zext i1 %39 to i64
  %40 = icmp eq i64 %_34, 1
  br i1 %40, label %bb24, label %bb26

bb15:                                             ; preds = %bb10
  unreachable

bb16:                                             ; preds = %bb10
  %41 = bitcast %"serde_json::error::ErrorCode"* %_24 to i64*
  store i64 5, i64* %41, align 8
; invoke serde_json::de::Deserializer<R>::error
  %42 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_24)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  store i64* %42, i64** %1, align 8
  br label %bb14

bb18:                                             ; preds = %bb10
  %43 = bitcast { i8, i8 }* %_14 to %"core::option::Option<u8>::Some"*
  %44 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %43, i32 0, i32 1
  %next = load i8, i8* %44, align 1
  %_28 = load i8, i8* %val, align 1
  %_26 = icmp ne i8 %next, %_28
  br i1 %_26, label %bb20, label %bb19

bb19:                                             ; preds = %bb18
  store i8 0, i8* %_33, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_15)
  br label %bb22

bb20:                                             ; preds = %bb18
  %45 = bitcast %"serde_json::error::ErrorCode"* %_31 to i64*
  store i64 10, i64* %45, align 8
; invoke serde_json::de::Deserializer<R>::error
  %46 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_31)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb20
  store i64* %46, i64** %1, align 8
  br label %bb14

bb22:                                             ; preds = %bb19
  store i8 0, i8* %_33, align 1
  br label %bb3

bb23:                                             ; preds = %bb25, %bb24, %bb26
  store i8 0, i8* %_33, align 1
  br label %bb12

bb24:                                             ; preds = %bb14
  %47 = load i8, i8* %_33, align 1, !range !4
  %48 = trunc i8 %47 to i1
  br i1 %48, label %bb25, label %bb23

bb25:                                             ; preds = %bb24
  store i8 0, i8* %_33, align 1
  %49 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_15 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %50 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %49, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %50)
  br label %bb23

bb26:                                             ; preds = %bb14
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_15)
  br label %bb23

cleanup:                                          ; preds = %bb16, %bb20
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  %53 = extractvalue { i8*, i32 } %51, 1
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %52, i8** %54, align 8
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %53, i32* %55, align 8
  br label %bb13
}

; serde_json::de::Deserializer<R>::fix_position
; Function Attrs: cold uwtable
define internal noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$12fix_position17ha0ac31358975066aE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, i64* noalias align 8 dereferenceable(40) %err) unnamed_addr #2 {
start:
  %_4 = alloca i64*, align 8
  %0 = bitcast i64** %_4 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %self, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %0, align 8
  %1 = load i64*, i64** %_4, align 8, !nonnull !2
; call serde_json::error::Error::fix_position
  %2 = call noalias align 8 dereferenceable(40) i64* @_ZN10serde_json5error5Error12fix_position17hccdd20e0785ef7c1E(i64* noalias align 8 dereferenceable(40) %err, i64* noalias readonly align 8 dereferenceable(56) %1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %2
}

; serde_json::de::Deserializer<R>::fix_position::{{closure}}
; Function Attrs: uwtable
define internal noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$12fix_position28_$u7b$$u7b$closure$u7d$$u7d$17h2452be0badd59b4fE"(i64* noalias readonly align 8 dereferenceable(56) %_1, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %code) unnamed_addr #1 {
start:
  %_4 = alloca %"serde_json::error::ErrorCode", align 8
  %_3 = bitcast i64* %_1 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"*
  %0 = bitcast %"serde_json::error::ErrorCode"* %_4 to i8*
  %1 = bitcast %"serde_json::error::ErrorCode"* %code to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call serde_json::de::Deserializer<R>::error
  %2 = call noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_3, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %2
}

; serde_json::de::Deserializer<R>::parse_number
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12parse_number17h431239a50d116072E"(%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* noalias nocapture sret dereferenceable(24), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_41 = alloca i8, align 1
  %_22 = alloca %"core::result::Result<f64, serde_json::error::Error>", align 8
  %_13 = alloca %"core::result::Result<f64, serde_json::error::Error>", align 8
  %_6 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %_4 = alloca %"serde_json::de::ParserNumber", align 8
  store i8 0, i8* %_41, align 1
  store i8 1, i8* %_41, align 1
; call serde_json::de::Deserializer<R>::peek_or_null
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_6, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb1:                                              ; preds = %bb7
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to i8*
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %_8 = zext i1 %10 to i64
  switch i64 %_8, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %val = load i8, i8* %12, align 1
  switch i8 %val, label %bb9 [
    i8 46, label %bb10
    i8 101, label %bb16
    i8 69, label %bb16
  ]

bb5:                                              ; preds = %bb2
  store i8 0, i8* %_41, align 1
  %13 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %13, i32 0, i32 1
  %err = load i64*, i64** %14, align 8, !nonnull !2
  %15 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %15, i32 0, i32 1
  store i64* %err, i64** %16, align 8
  %17 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %17, align 8
  br label %bb8

bb6:                                              ; preds = %bb30, %bb31
  ret void

bb7:                                              ; preds = %cleanup
  store i8 0, i8* %_41, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_6) #14
  br label %bb1

bb8:                                              ; preds = %bb35, %bb37, %bb5
  %18 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to i8*
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = trunc i8 %19 to i1
  %_42 = zext i1 %20 to i64
  %21 = icmp eq i64 %_42, 1
  br i1 %21, label %bb32, label %bb34

bb9:                                              ; preds = %bb4
  br i1 %positive, label %bb23, label %bb22

bb10:                                             ; preds = %bb4
; invoke serde_json::de::Deserializer<R>::parse_decimal
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$13parse_decimal17habee609a866cc241E"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_13, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i32 0)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  %22 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_13 to i64*
  %_17 = load i64, i64* %22, align 8, !range !1
  switch i64 %_17, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb14
  ]

bb12:                                             ; preds = %bb11
  unreachable

bb13:                                             ; preds = %bb11
  %23 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_13 to %"core::result::Result<f64, serde_json::error::Error>::Ok"*
  %24 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Ok", %"core::result::Result<f64, serde_json::error::Error>::Ok"* %23, i32 0, i32 1
  %val4 = load double, double* %24, align 8
  %25 = bitcast %"serde_json::de::ParserNumber"* %_4 to %"serde_json::de::ParserNumber::F64"*
  %26 = getelementptr inbounds %"serde_json::de::ParserNumber::F64", %"serde_json::de::ParserNumber::F64"* %25, i32 0, i32 1
  store double %val4, double* %26, align 8
  %27 = bitcast %"serde_json::de::ParserNumber"* %_4 to i64*
  store i64 0, i64* %27, align 8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h164d76c7649c96aaE(%"core::result::Result<f64, serde_json::error::Error>"* align 8 dereferenceable(16) %_13)
          to label %bb15 unwind label %cleanup

bb14:                                             ; preds = %bb11
  %28 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_13 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %29 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %28, i32 0, i32 1
  %err3 = load i64*, i64** %29, align 8, !nonnull !2
  %30 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %31 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %30, i32 0, i32 1
  store i64* %err3, i64** %31, align 8
  %32 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %32, align 8
  %33 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_13 to i64*
  %_43 = load i64, i64* %33, align 8, !range !1
  %34 = icmp eq i64 %_43, 1
  br i1 %34, label %bb35, label %bb36

bb15:                                             ; preds = %bb13
  br label %bb29

bb16:                                             ; preds = %bb4, %bb4
; invoke serde_json::de::Deserializer<R>::parse_exponent
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$14parse_exponent17h88fb6703e140e55bE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_22, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i32 0)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  %35 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_22 to i64*
  %_26 = load i64, i64* %35, align 8, !range !1
  switch i64 %_26, label %bb18 [
    i64 0, label %bb19
    i64 1, label %bb20
  ]

bb18:                                             ; preds = %bb17
  unreachable

bb19:                                             ; preds = %bb17
  %36 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_22 to %"core::result::Result<f64, serde_json::error::Error>::Ok"*
  %37 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Ok", %"core::result::Result<f64, serde_json::error::Error>::Ok"* %36, i32 0, i32 1
  %val2 = load double, double* %37, align 8
  %38 = bitcast %"serde_json::de::ParserNumber"* %_4 to %"serde_json::de::ParserNumber::F64"*
  %39 = getelementptr inbounds %"serde_json::de::ParserNumber::F64", %"serde_json::de::ParserNumber::F64"* %38, i32 0, i32 1
  store double %val2, double* %39, align 8
  %40 = bitcast %"serde_json::de::ParserNumber"* %_4 to i64*
  store i64 0, i64* %40, align 8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h164d76c7649c96aaE(%"core::result::Result<f64, serde_json::error::Error>"* align 8 dereferenceable(16) %_22)
          to label %bb21 unwind label %cleanup

bb20:                                             ; preds = %bb17
  %41 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_22 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %42 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %41, i32 0, i32 1
  %err1 = load i64*, i64** %42, align 8, !nonnull !2
  %43 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %44 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %43, i32 0, i32 1
  store i64* %err1, i64** %44, align 8
  %45 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %45, align 8
  %46 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_22 to i64*
  %_44 = load i64, i64* %46, align 8, !range !1
  %47 = icmp eq i64 %_44, 1
  br i1 %47, label %bb37, label %bb38

bb21:                                             ; preds = %bb19
  br label %bb29

bb22:                                             ; preds = %bb9
; invoke core::num::<impl i64>::wrapping_neg
  %_36 = invoke i64 @"_ZN4core3num21_$LT$impl$u20$i64$GT$12wrapping_neg17h28bb4a02d4eb7217E"(i64 %significand)
          to label %bb24 unwind label %cleanup

bb23:                                             ; preds = %bb9
  %48 = bitcast %"serde_json::de::ParserNumber"* %_4 to %"serde_json::de::ParserNumber::U64"*
  %49 = getelementptr inbounds %"serde_json::de::ParserNumber::U64", %"serde_json::de::ParserNumber::U64"* %48, i32 0, i32 1
  store i64 %significand, i64* %49, align 8
  %50 = bitcast %"serde_json::de::ParserNumber"* %_4 to i64*
  store i64 1, i64* %50, align 8
  br label %bb28

bb24:                                             ; preds = %bb22
  %_35 = icmp sgt i64 %_36, 0
  br i1 %_35, label %bb26, label %bb25

bb25:                                             ; preds = %bb24
  %51 = bitcast %"serde_json::de::ParserNumber"* %_4 to %"serde_json::de::ParserNumber::I64"*
  %52 = getelementptr inbounds %"serde_json::de::ParserNumber::I64", %"serde_json::de::ParserNumber::I64"* %51, i32 0, i32 1
  store i64 %_36, i64* %52, align 8
  %53 = bitcast %"serde_json::de::ParserNumber"* %_4 to i64*
  store i64 2, i64* %53, align 8
  br label %bb27

bb26:                                             ; preds = %bb24
  %_38 = uitofp i64 %significand to double
  %_37 = fsub double -0.000000e+00, %_38
  %54 = bitcast %"serde_json::de::ParserNumber"* %_4 to %"serde_json::de::ParserNumber::F64"*
  %55 = getelementptr inbounds %"serde_json::de::ParserNumber::F64", %"serde_json::de::ParserNumber::F64"* %54, i32 0, i32 1
  store double %_37, double* %55, align 8
  %56 = bitcast %"serde_json::de::ParserNumber"* %_4 to i64*
  store i64 0, i64* %56, align 8
  br label %bb27

bb27:                                             ; preds = %bb25, %bb26
  br label %bb28

bb28:                                             ; preds = %bb27, %bb23
  br label %bb29

bb29:                                             ; preds = %bb15, %bb21, %bb28
  %57 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok"*
  %58 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok"* %57, i32 0, i32 1
  %59 = bitcast %"serde_json::de::ParserNumber"* %58 to i8*
  %60 = bitcast %"serde_json::de::ParserNumber"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false)
  %61 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %61, align 8
  store i8 0, i8* %_41, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_6)
  br label %bb30

bb30:                                             ; preds = %bb29
  store i8 0, i8* %_41, align 1
  br label %bb6

bb31:                                             ; preds = %bb33, %bb32, %bb34
  store i8 0, i8* %_41, align 1
  br label %bb6

bb32:                                             ; preds = %bb8
  %62 = load i8, i8* %_41, align 1, !range !4
  %63 = trunc i8 %62 to i1
  br i1 %63, label %bb33, label %bb31

bb33:                                             ; preds = %bb32
  store i8 0, i8* %_41, align 1
  %64 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %65 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %64, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %65)
  br label %bb31

bb34:                                             ; preds = %bb8
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_6)
  br label %bb31

bb35:                                             ; preds = %bb36, %bb14
  br label %bb8

bb36:                                             ; preds = %bb14
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h164d76c7649c96aaE(%"core::result::Result<f64, serde_json::error::Error>"* align 8 dereferenceable(16) %_13)
          to label %bb35 unwind label %cleanup

bb37:                                             ; preds = %bb38, %bb20
  br label %bb8

bb38:                                             ; preds = %bb20
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h164d76c7649c96aaE(%"core::result::Result<f64, serde_json::error::Error>"* align 8 dereferenceable(16) %_22)
          to label %bb37 unwind label %cleanup

cleanup:                                          ; preds = %bb13, %bb36, %bb10, %bb19, %bb38, %bb16, %bb22
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  %68 = extractvalue { i8*, i32 } %66, 1
  %69 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %67, i8** %69, align 8
  %70 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %68, i32* %70, align 8
  br label %bb7
}

; serde_json::de::Deserializer<R>::peek_or_null
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_4 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
; call serde_json::de::Deserializer<R>::peek
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$4peek17heda9452678a2416aE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_4, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb1:                                              ; preds = %bb7
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_4 to i8*
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %_6 = zext i1 %10 to i64
  switch i64 %_6, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_4 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !4
  %val.0 = trunc i8 %14 to i1
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 1
  %val.1 = load i8, i8* %15, align 1
; invoke core::option::Option<T>::unwrap_or
  %16 = invoke i8 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hd64941d0494c1e05E"(i1 zeroext %val.0, i8 %val.1, i8 0)
          to label %bb8 unwind label %cleanup

bb5:                                              ; preds = %bb2
  %17 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_4 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %17, i32 0, i32 1
  %err = load i64*, i64** %18, align 8, !nonnull !2
  %19 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %0 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %20 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %19, i32 0, i32 1
  store i64* %err, i64** %20, align 8
  %21 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %0 to i8*
  store i8 1, i8* %21, align 8
  %22 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_4 to i8*
  %23 = load i8, i8* %22, align 8, !range !4
  %24 = trunc i8 %23 to i1
  %_10 = zext i1 %24 to i64
  %25 = icmp eq i64 %_10, 1
  br i1 %25, label %bb10, label %bb11

bb6:                                              ; preds = %bb9, %bb10
  ret void

bb7:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_4) #14
  br label %bb1

bb8:                                              ; preds = %bb4
  %26 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %0 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %27 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %26, i32 0, i32 1
  store i8 %16, i8* %27, align 1
  %28 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %0 to i8*
  store i8 0, i8* %28, align 8
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_4)
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb6

bb10:                                             ; preds = %bb11, %bb5
  br label %bb6

bb11:                                             ; preds = %bb5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_4)
  br label %bb10

cleanup:                                          ; preds = %bb4
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  br label %bb7
}

; serde_json::de::Deserializer<R>::parse_decimal
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$13parse_decimal17habee609a866cc241E"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64, i32) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_86 = alloca i8, align 1
  %_85 = alloca i8, align 1
  %_71 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %_69 = alloca %"serde_json::error::ErrorCode", align 8
  %_66 = alloca %"serde_json::error::ErrorCode", align 8
  %_57 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_56 = alloca { i8, i8 }, align 1
  %_41 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %_29 = alloca i8, align 1
  %_23 = alloca i8, align 1
  %_9 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %at_least_one_digit = alloca i8, align 1
  %exponent = alloca i32, align 4
  %significand = alloca i64, align 8
  store i64 %1, i64* %significand, align 8
  store i32 %2, i32* %exponent, align 4
  store i8 0, i8* %_85, align 1
  store i8 0, i8* %_86, align 1
; call serde_json::de::Deserializer<R>::eat_char
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb1:                                              ; preds = %bb63, %bb52, %bb9
  %4 = bitcast { i8*, i32 }* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb2:                                              ; preds = %start
  store i8 0, i8* %at_least_one_digit, align 1
  br label %bb3

bb3:                                              ; preds = %bb45, %bb2
  store i8 1, i8* %_85, align 1
; call serde_json::de::Deserializer<R>::peek_or_null
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_9, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb4

bb4:                                              ; preds = %bb3
  %10 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_9 to i8*
  %11 = load i8, i8* %10, align 8, !range !4
  %12 = trunc i8 %11 to i1
  %_11 = zext i1 %12 to i64
  switch i64 %_11, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb7
  ]

bb5:                                              ; preds = %bb4
  unreachable

bb6:                                              ; preds = %bb4
  %13 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_9 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %13, i32 0, i32 1
  %val = load i8, i8* %14, align 1
  %_15 = icmp ule i8 48, %val
  br i1 %_15, label %bb13, label %bb43

bb7:                                              ; preds = %bb4
  store i8 0, i8* %_85, align 1
  %15 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_9 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %15, i32 0, i32 1
  %err = load i64*, i64** %16, align 8, !nonnull !2
  %17 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %17, i32 0, i32 1
  store i64* %err, i64** %18, align 8
  %19 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %19, align 8
  br label %bb10

bb8:                                              ; preds = %bb69, %bb80, %bb11
  ret void

bb9:                                              ; preds = %bb36, %cleanup
  store i8 0, i8* %_85, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_9) #14
  br label %bb1

bb10:                                             ; preds = %bb74, %bb7
  %20 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_9 to i8*
  %21 = load i8, i8* %20, align 8, !range !4
  %22 = trunc i8 %21 to i1
  %_87 = zext i1 %22 to i64
  %23 = icmp eq i64 %_87, 1
  br i1 %23, label %bb71, label %bb73

bb11:                                             ; preds = %bb76, %bb70
  br label %bb8

bb12:                                             ; preds = %bb13
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb14 unwind label %cleanup

bb13:                                             ; preds = %bb6
  %_16 = icmp ule i8 %val, 57
  br i1 %_16, label %bb12, label %bb43

bb14:                                             ; preds = %bb12
  %_21 = sub i8 %val, 48
  %digit = zext i8 %_21 to i64
  store i8 1, i8* %at_least_one_digit, align 1
  %_25 = load i64, i64* %significand, align 8
  br label %bb19

bb15:                                             ; preds = %bb24
  store i8 1, i8* %_23, align 1
  br label %bb18

bb16:                                             ; preds = %bb24, %bb20
  store i8 0, i8* %_23, align 1
  br label %bb18

bb17:                                             ; preds = %bb20
  %_31 = load i64, i64* %significand, align 8
  br label %bb25

bb18:                                             ; preds = %bb16, %bb15
  %24 = load i8, i8* %_23, align 1, !range !4
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb30, label %bb29

bb19:                                             ; preds = %bb14
  br label %bb20

bb20:                                             ; preds = %bb19
  %_26 = udiv i64 -1, 10
  %_24 = icmp uge i64 %_25, %_26
  br i1 %_24, label %bb17, label %bb16

bb21:                                             ; preds = %bb28, %bb26
  store i8 1, i8* %_29, align 1
  br label %bb24

bb22:                                             ; preds = %bb28
  store i8 0, i8* %_29, align 1
  br label %bb24

bb23:                                             ; preds = %bb26
  br label %bb27

bb24:                                             ; preds = %bb22, %bb21
  %26 = load i8, i8* %_29, align 1, !range !4
  %27 = trunc i8 %26 to i1
  br i1 %27, label %bb15, label %bb16

bb25:                                             ; preds = %bb17
  br label %bb26

bb26:                                             ; preds = %bb25
  %_32 = udiv i64 -1, 10
  %_30 = icmp ugt i64 %_31, %_32
  br i1 %_30, label %bb21, label %bb23

bb27:                                             ; preds = %bb23
  br label %bb28

bb28:                                             ; preds = %bb27
  %_37 = urem i64 -1, 10
  %_35 = icmp ugt i64 %digit, %_37
  br i1 %_35, label %bb21, label %bb22

bb29:                                             ; preds = %bb18
  %_52 = load i64, i64* %significand, align 8
  %_51 = mul i64 %_52, 10
  %28 = add i64 %_51, %digit
  store i64 %28, i64* %significand, align 8
  %29 = load i32, i32* %exponent, align 4
  %30 = sub i32 %29, 1
  store i32 %30, i32* %exponent, align 4
  store i8 0, i8* %_85, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_9)
  br label %bb45

bb30:                                             ; preds = %bb18
  br label %bb31

bb31:                                             ; preds = %bb42, %bb30
; invoke serde_json::de::Deserializer<R>::peek_or_null
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_41, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb32 unwind label %cleanup

bb32:                                             ; preds = %bb31
  %31 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_41 to i8*
  %32 = load i8, i8* %31, align 8, !range !4
  %33 = trunc i8 %32 to i1
  %_43 = zext i1 %33 to i64
  switch i64 %_43, label %bb33 [
    i64 0, label %bb34
    i64 1, label %bb35
  ]

bb33:                                             ; preds = %bb32
  unreachable

bb34:                                             ; preds = %bb32
  %34 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_41 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %35 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %34, i32 0, i32 1
  %val2 = load i8, i8* %35, align 1
  %_47 = icmp ule i8 48, %val2
  br i1 %_47, label %bb39, label %bb38

bb35:                                             ; preds = %bb32
  %36 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_41 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %37 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %36, i32 0, i32 1
  %err1 = load i64*, i64** %37, align 8, !nonnull !2
  %38 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %39 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %38, i32 0, i32 1
  store i64* %err1, i64** %39, align 8
  %40 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %40, align 8
  %41 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_41 to i8*
  %42 = load i8, i8* %41, align 8, !range !4
  %43 = trunc i8 %42 to i1
  %_88 = zext i1 %43 to i64
  %44 = icmp eq i64 %_88, 1
  br i1 %44, label %bb74, label %bb75

bb36:                                             ; preds = %cleanup3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_41) #14
  br label %bb9

bb37:                                             ; preds = %bb39
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb40 unwind label %cleanup3

bb38:                                             ; preds = %bb39, %bb34
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_41)
          to label %bb41 unwind label %cleanup

bb39:                                             ; preds = %bb34
  %_48 = icmp ule i8 %val2, 57
  br i1 %_48, label %bb37, label %bb38

bb40:                                             ; preds = %bb37
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_41)
          to label %bb42 unwind label %cleanup

bb41:                                             ; preds = %bb38
  br label %bb43

bb42:                                             ; preds = %bb40
  br label %bb31

bb43:                                             ; preds = %bb41, %bb13, %bb6
  store i8 0, i8* %_85, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_9)
  br label %bb44

bb44:                                             ; preds = %bb43
  store i8 0, i8* %_85, align 1
  %45 = load i8, i8* %at_least_one_digit, align 1, !range !4
  %_55 = trunc i8 %45 to i1
  %_54 = xor i1 %_55, true
  br i1 %_54, label %bb47, label %bb46

bb45:                                             ; preds = %bb29
  store i8 0, i8* %_85, align 1
  br label %bb3

bb46:                                             ; preds = %bb44
; call serde_json::de::Deserializer<R>::peek_or_null
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_71, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb59

bb47:                                             ; preds = %bb44
  store i8 1, i8* %_86, align 1
; call serde_json::de::Deserializer<R>::peek
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$4peek17heda9452678a2416aE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_57, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb48

bb48:                                             ; preds = %bb47
  %46 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_57 to i8*
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = trunc i8 %47 to i1
  %_59 = zext i1 %48 to i64
  switch i64 %_59, label %bb49 [
    i64 0, label %bb50
    i64 1, label %bb51
  ]

bb49:                                             ; preds = %bb48
  unreachable

bb50:                                             ; preds = %bb48
  %49 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_57 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %50 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %49, i32 0, i32 1
  %51 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %50, i32 0, i32 0
  %52 = load i8, i8* %51, align 1, !range !4
  %val.0 = trunc i8 %52 to i1
  %53 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %50, i32 0, i32 1
  %val.1 = load i8, i8* %53, align 1
  %54 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_56, i32 0, i32 0
  %55 = zext i1 %val.0 to i8
  store i8 %55, i8* %54, align 1
  %56 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_56, i32 0, i32 1
  store i8 %val.1, i8* %56, align 1
  %57 = bitcast { i8, i8 }* %_56 to i8*
  %58 = load i8, i8* %57, align 1, !range !4
  %59 = trunc i8 %58 to i1
  %_63 = zext i1 %59 to i64
  switch i64 %_63, label %bb55 [
    i64 0, label %bb54
    i64 1, label %bb56
  ]

bb51:                                             ; preds = %bb48
  store i8 0, i8* %_86, align 1
  %60 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_57 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %61 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %60, i32 0, i32 1
  %err4 = load i64*, i64** %61, align 8, !nonnull !2
  %62 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %63 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %62, i32 0, i32 1
  store i64* %err4, i64** %63, align 8
  %64 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %64, align 8
  br label %bb53

bb52:                                             ; preds = %cleanup5
  store i8 0, i8* %_86, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_57) #14
  br label %bb1

bb53:                                             ; preds = %bb58, %bb57, %bb51
  %65 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_57 to i8*
  %66 = load i8, i8* %65, align 8, !range !4
  %67 = trunc i8 %66 to i1
  %_89 = zext i1 %67 to i64
  %68 = icmp eq i64 %_89, 1
  br i1 %68, label %bb77, label %bb79

bb54:                                             ; preds = %bb50
  %69 = bitcast %"serde_json::error::ErrorCode"* %_69 to i64*
  store i64 5, i64* %69, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %70 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_69)
          to label %bb58 unwind label %cleanup5

bb55:                                             ; preds = %bb50
  unreachable

bb56:                                             ; preds = %bb50
  %71 = bitcast %"serde_json::error::ErrorCode"* %_66 to i64*
  store i64 14, i64* %71, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %72 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_66)
          to label %bb57 unwind label %cleanup5

bb57:                                             ; preds = %bb56
  %73 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %74 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %73, i32 0, i32 1
  store i64* %72, i64** %74, align 8
  %75 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %75, align 8
  br label %bb53

bb58:                                             ; preds = %bb54
  %76 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %77 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %76, i32 0, i32 1
  store i64* %70, i64** %77, align 8
  %78 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %78, align 8
  br label %bb53

bb59:                                             ; preds = %bb46
  %79 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_71 to i8*
  %80 = load i8, i8* %79, align 8, !range !4
  %81 = trunc i8 %80 to i1
  %_73 = zext i1 %81 to i64
  switch i64 %_73, label %bb60 [
    i64 0, label %bb61
    i64 1, label %bb62
  ]

bb60:                                             ; preds = %bb59
  unreachable

bb61:                                             ; preds = %bb59
  %82 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_71 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %83 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %82, i32 0, i32 1
  %val7 = load i8, i8* %83, align 1
  switch i8 %val7, label %bb64 [
    i8 101, label %bb65
    i8 69, label %bb65
  ]

bb62:                                             ; preds = %bb59
  %84 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_71 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %85 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %84, i32 0, i32 1
  %err6 = load i64*, i64** %85, align 8, !nonnull !2
  %86 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %87 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %86, i32 0, i32 1
  store i64* %err6, i64** %87, align 8
  %88 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %88, align 8
  %89 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_71 to i8*
  %90 = load i8, i8* %89, align 8, !range !4
  %91 = trunc i8 %90 to i1
  %_90 = zext i1 %91 to i64
  %92 = icmp eq i64 %_90, 1
  br i1 %92, label %bb80, label %bb81

bb63:                                             ; preds = %cleanup8
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_71) #14
  br label %bb1

bb64:                                             ; preds = %bb61
  %_83 = load i64, i64* %significand, align 8
  %_84 = load i32, i32* %exponent, align 4
; invoke serde_json::de::Deserializer<R>::f64_from_parts
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$14f64_from_parts17h7d9afe67a76cc10dE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %_83, i32 %_84)
          to label %bb67 unwind label %cleanup8

bb65:                                             ; preds = %bb61, %bb61
  %_79 = load i64, i64* %significand, align 8
  %_80 = load i32, i32* %exponent, align 4
; invoke serde_json::de::Deserializer<R>::parse_exponent
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$14parse_exponent17h88fb6703e140e55bE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %_79, i32 %_80)
          to label %bb66 unwind label %cleanup8

bb66:                                             ; preds = %bb65
  br label %bb68

bb67:                                             ; preds = %bb64
  br label %bb68

bb68:                                             ; preds = %bb66, %bb67
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_71)
  br label %bb69

bb69:                                             ; preds = %bb68
  br label %bb8

bb70:                                             ; preds = %bb72, %bb71, %bb73
  store i8 0, i8* %_85, align 1
  br label %bb11

bb71:                                             ; preds = %bb10
  %93 = load i8, i8* %_85, align 1, !range !4
  %94 = trunc i8 %93 to i1
  br i1 %94, label %bb72, label %bb70

bb72:                                             ; preds = %bb71
  store i8 0, i8* %_85, align 1
  %95 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_9 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %96 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %95, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %96)
  br label %bb70

bb73:                                             ; preds = %bb10
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_9)
  br label %bb70

bb74:                                             ; preds = %bb75, %bb35
  br label %bb10

bb75:                                             ; preds = %bb35
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_41)
          to label %bb74 unwind label %cleanup

bb76:                                             ; preds = %bb78, %bb77, %bb79
  store i8 0, i8* %_86, align 1
  br label %bb11

bb77:                                             ; preds = %bb53
  %97 = load i8, i8* %_86, align 1, !range !4
  %98 = trunc i8 %97 to i1
  br i1 %98, label %bb78, label %bb76

bb78:                                             ; preds = %bb77
  store i8 0, i8* %_86, align 1
  %99 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_57 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %100 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %99, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %100)
  br label %bb76

bb79:                                             ; preds = %bb53
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_57)
  br label %bb76

bb80:                                             ; preds = %bb81, %bb62
  br label %bb8

bb81:                                             ; preds = %bb62
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_71)
  br label %bb80

cleanup:                                          ; preds = %bb38, %bb40, %bb75, %bb31, %bb12
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  %103 = extractvalue { i8*, i32 } %101, 1
  %104 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %102, i8** %104, align 8
  %105 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %103, i32* %105, align 8
  br label %bb9

cleanup3:                                         ; preds = %bb37
  %106 = landingpad { i8*, i32 }
          cleanup
  %107 = extractvalue { i8*, i32 } %106, 0
  %108 = extractvalue { i8*, i32 } %106, 1
  %109 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %107, i8** %109, align 8
  %110 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %108, i32* %110, align 8
  br label %bb36

cleanup5:                                         ; preds = %bb54, %bb56
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  %113 = extractvalue { i8*, i32 } %111, 1
  %114 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %112, i8** %114, align 8
  %115 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %113, i32* %115, align 8
  br label %bb52

cleanup8:                                         ; preds = %bb65, %bb64
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  %118 = extractvalue { i8*, i32 } %116, 1
  %119 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %117, i8** %119, align 8
  %120 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %118, i32* %120, align 8
  br label %bb63
}

; serde_json::de::Deserializer<R>::parse_integer
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$13parse_integer17h63ff08302b0eeee7E"(%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* noalias nocapture sret dereferenceable(24), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_89 = alloca i8, align 1
  %_88 = alloca i8, align 1
  %_87 = alloca i8, align 1
  %_86 = alloca %"serde_json::error::ErrorCode", align 8
  %_70 = alloca %"core::result::Result<f64, serde_json::error::Error>", align 8
  %_68 = alloca %"serde_json::de::ParserNumber", align 8
  %_57 = alloca i8, align 1
  %_51 = alloca i8, align 1
  %_37 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %res = alloca i64, align 8
  %_29 = alloca %"serde_json::error::ErrorCode", align 8
  %_19 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %_15 = alloca %"serde_json::error::ErrorCode", align 8
  %_5 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_4 = alloca { i8, i8 }, align 1
  store i8 0, i8* %_89, align 1
  store i8 0, i8* %_87, align 1
  store i8 0, i8* %_88, align 1
  store i8 1, i8* %_87, align 1
; call serde_json::de::Deserializer<R>::next_char
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$9next_char17h0e00787cc80c5e1eE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_5, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb1:                                              ; preds = %bb7, %bb24, %bb37
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %_7 = zext i1 %10 to i64
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !4
  %val.0 = trunc i8 %14 to i1
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 1
  %val.1 = load i8, i8* %15, align 1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 0
  %17 = zext i1 %val.0 to i8
  store i8 %17, i8* %16, align 1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 1
  store i8 %val.1, i8* %18, align 1
  %19 = bitcast { i8, i8 }* %_4 to i8*
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = trunc i8 %20 to i1
  %_11 = zext i1 %21 to i64
  switch i64 %_11, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb5:                                              ; preds = %bb2
  store i8 0, i8* %_87, align 1
  %22 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %22, i32 0, i32 1
  %err = load i64*, i64** %23, align 8, !nonnull !2
  %24 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %25 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %24, i32 0, i32 1
  store i64* %err, i64** %25, align 8
  %26 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %26, align 8
  br label %bb8

bb6:                                              ; preds = %bb9, %bb66
  ret void

bb7:                                              ; preds = %cleanup7
  store i8 0, i8* %_87, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5) #14
  br label %bb1

bb8:                                              ; preds = %bb13, %bb5
  %27 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %28 = load i8, i8* %27, align 8, !range !4
  %29 = trunc i8 %28 to i1
  %_90 = zext i1 %29 to i64
  %30 = icmp eq i64 %_90, 1
  br i1 %30, label %bb68, label %bb70

bb9:                                              ; preds = %bb67, %bb71, %bb73
  br label %bb6

bb10:                                             ; preds = %bb4
  %31 = bitcast %"serde_json::error::ErrorCode"* %_15 to i64*
  store i64 5, i64* %31, align 8
; invoke serde_json::de::Deserializer<R>::error
  %32 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_15)
          to label %bb13 unwind label %cleanup7

bb11:                                             ; preds = %bb4
  unreachable

bb12:                                             ; preds = %bb4
  %33 = bitcast { i8, i8 }* %_4 to %"core::option::Option<u8>::Some"*
  %34 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %33, i32 0, i32 1
  %b = load i8, i8* %34, align 1
  store i8 0, i8* %_87, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
  br label %bb14

bb13:                                             ; preds = %bb10
  %35 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %36 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %35, i32 0, i32 1
  store i64* %32, i64** %36, align 8
  %37 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %37, align 8
  br label %bb8

bb14:                                             ; preds = %bb12
  store i8 0, i8* %_87, align 1
  %38 = icmp eq i8 %b, 48
  br i1 %38, label %bb19, label %bb17

bb15:                                             ; preds = %bb18
  %_34 = sub i8 %b, 48
  %39 = zext i8 %_34 to i64
  store i64 %39, i64* %res, align 8
  br label %bb32

bb16:                                             ; preds = %bb18, %bb17
  %40 = bitcast %"serde_json::error::ErrorCode"* %_86 to i64*
  store i64 14, i64* %40, align 8
; call serde_json::de::Deserializer<R>::error
  %41 = call noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_86)
  br label %bb65

bb17:                                             ; preds = %bb14
  %_16 = icmp ule i8 49, %b
  br i1 %_16, label %bb18, label %bb16

bb18:                                             ; preds = %bb17
  %_17 = icmp ule i8 %b, 57
  br i1 %_17, label %bb15, label %bb16

bb19:                                             ; preds = %bb14
; call serde_json::de::Deserializer<R>::peek_or_null
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_19, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb20

bb20:                                             ; preds = %bb19
  %42 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_19 to i8*
  %43 = load i8, i8* %42, align 8, !range !4
  %44 = trunc i8 %43 to i1
  %_21 = zext i1 %44 to i64
  switch i64 %_21, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb23
  ]

bb21:                                             ; preds = %bb20
  unreachable

bb22:                                             ; preds = %bb20
  %45 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_19 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %46 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %45, i32 0, i32 1
  %val5 = load i8, i8* %46, align 1
  %_25 = icmp ule i8 48, %val5
  br i1 %_25, label %bb27, label %bb26

bb23:                                             ; preds = %bb20
  %47 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_19 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %48 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %47, i32 0, i32 1
  %err4 = load i64*, i64** %48, align 8, !nonnull !2
  %49 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %50 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %49, i32 0, i32 1
  store i64* %err4, i64** %50, align 8
  %51 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %51, align 8
  %52 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_19 to i8*
  %53 = load i8, i8* %52, align 8, !range !4
  %54 = trunc i8 %53 to i1
  %_91 = zext i1 %54 to i64
  %55 = icmp eq i64 %_91, 1
  br i1 %55, label %bb71, label %bb72

bb24:                                             ; preds = %cleanup6
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_19) #14
  br label %bb1

bb25:                                             ; preds = %bb27
  %56 = bitcast %"serde_json::error::ErrorCode"* %_29 to i64*
  store i64 14, i64* %56, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %57 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_29)
          to label %bb28 unwind label %cleanup6

bb26:                                             ; preds = %bb27, %bb22
; invoke serde_json::de::Deserializer<R>::parse_number
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12parse_number17h431239a50d116072E"(%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* noalias nocapture sret dereferenceable(24) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 0)
          to label %bb29 unwind label %cleanup6

bb27:                                             ; preds = %bb22
  %_26 = icmp ule i8 %val5, 57
  br i1 %_26, label %bb25, label %bb26

bb28:                                             ; preds = %bb25
  %58 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %59 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %58, i32 0, i32 1
  store i64* %57, i64** %59, align 8
  %60 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %60, align 8
  br label %bb30

bb29:                                             ; preds = %bb26
  br label %bb30

bb30:                                             ; preds = %bb29, %bb28
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_19)
  br label %bb31

bb31:                                             ; preds = %bb30
  br label %bb66

bb32:                                             ; preds = %bb64, %bb15
  store i8 1, i8* %_88, align 1
; call serde_json::de::Deserializer<R>::peek_or_null
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_37, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb33

bb33:                                             ; preds = %bb32
  %61 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_37 to i8*
  %62 = load i8, i8* %61, align 8, !range !4
  %63 = trunc i8 %62 to i1
  %_39 = zext i1 %63 to i64
  switch i64 %_39, label %bb34 [
    i64 0, label %bb35
    i64 1, label %bb36
  ]

bb34:                                             ; preds = %bb33
  unreachable

bb35:                                             ; preds = %bb33
  %64 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_37 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %65 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %64, i32 0, i32 1
  %val = load i8, i8* %65, align 1
  %_43 = icmp ule i8 48, %val
  br i1 %_43, label %bb41, label %bb40

bb36:                                             ; preds = %bb33
  store i8 0, i8* %_88, align 1
  %66 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_37 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %67 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %66, i32 0, i32 1
  %err1 = load i64*, i64** %67, align 8, !nonnull !2
  %68 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %69 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %68, i32 0, i32 1
  store i64* %err1, i64** %69, align 8
  %70 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %70, align 8
  br label %bb38

bb37:                                             ; preds = %cleanup
  store i8 0, i8* %_88, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_37) #14
  br label %bb1

bb38:                                             ; preds = %bb63, %bb77, %bb36
  %71 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_37 to i8*
  %72 = load i8, i8* %71, align 8, !range !4
  %73 = trunc i8 %72 to i1
  %_92 = zext i1 %73 to i64
  %74 = icmp eq i64 %_92, 1
  br i1 %74, label %bb74, label %bb76

bb39:                                             ; preds = %bb41
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb42 unwind label %cleanup

bb40:                                             ; preds = %bb41, %bb35
  %_83 = load i64, i64* %res, align 8
; invoke serde_json::de::Deserializer<R>::parse_number
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12parse_number17h431239a50d116072E"(%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* noalias nocapture sret dereferenceable(24) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %_83)
          to label %bb63 unwind label %cleanup

bb41:                                             ; preds = %bb35
  %_44 = icmp ule i8 %val, 57
  br i1 %_44, label %bb39, label %bb40

bb42:                                             ; preds = %bb39
  %_49 = sub i8 %val, 48
  %digit = zext i8 %_49 to i64
  %_53 = load i64, i64* %res, align 8
  br label %bb47

bb43:                                             ; preds = %bb52
  store i8 1, i8* %_51, align 1
  br label %bb46

bb44:                                             ; preds = %bb52, %bb48
  store i8 0, i8* %_51, align 1
  br label %bb46

bb45:                                             ; preds = %bb48
  %_59 = load i64, i64* %res, align 8
  br label %bb53

bb46:                                             ; preds = %bb44, %bb43
  %75 = load i8, i8* %_51, align 1, !range !4
  %76 = trunc i8 %75 to i1
  br i1 %76, label %bb58, label %bb57

bb47:                                             ; preds = %bb42
  br label %bb48

bb48:                                             ; preds = %bb47
  %_54 = udiv i64 -1, 10
  %_52 = icmp uge i64 %_53, %_54
  br i1 %_52, label %bb45, label %bb44

bb49:                                             ; preds = %bb56, %bb54
  store i8 1, i8* %_57, align 1
  br label %bb52

bb50:                                             ; preds = %bb56
  store i8 0, i8* %_57, align 1
  br label %bb52

bb51:                                             ; preds = %bb54
  br label %bb55

bb52:                                             ; preds = %bb50, %bb49
  %77 = load i8, i8* %_57, align 1, !range !4
  %78 = trunc i8 %77 to i1
  br i1 %78, label %bb43, label %bb44

bb53:                                             ; preds = %bb45
  br label %bb54

bb54:                                             ; preds = %bb53
  %_60 = udiv i64 -1, 10
  %_58 = icmp ugt i64 %_59, %_60
  br i1 %_58, label %bb49, label %bb51

bb55:                                             ; preds = %bb51
  br label %bb56

bb56:                                             ; preds = %bb55
  %_65 = urem i64 -1, 10
  %_63 = icmp ugt i64 %digit, %_65
  br i1 %_63, label %bb49, label %bb50

bb57:                                             ; preds = %bb46
  %_79 = load i64, i64* %res, align 8
  %_78 = mul i64 %_79, 10
  %79 = add i64 %_78, %digit
  store i64 %79, i64* %res, align 8
  store i8 0, i8* %_88, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_37)
  br label %bb64

bb58:                                             ; preds = %bb46
  %_73 = load i64, i64* %res, align 8
; invoke serde_json::de::Deserializer<R>::parse_long_integer
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$18parse_long_integer17hb31b4fa604dd876bE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_70, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %_73, i32 1)
          to label %bb59 unwind label %cleanup

bb59:                                             ; preds = %bb58
  store i8 1, i8* %_89, align 1
  %80 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_70 to i64*
  %_74 = load i64, i64* %80, align 8, !range !1
  switch i64 %_74, label %bb60 [
    i64 0, label %bb61
    i64 1, label %bb62
  ]

bb60:                                             ; preds = %bb59
  unreachable

bb61:                                             ; preds = %bb59
  %81 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_70 to %"core::result::Result<f64, serde_json::error::Error>::Ok"*
  %82 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Ok", %"core::result::Result<f64, serde_json::error::Error>::Ok"* %81, i32 0, i32 1
  %val3 = load double, double* %82, align 8
  %83 = bitcast %"serde_json::de::ParserNumber"* %_68 to %"serde_json::de::ParserNumber::F64"*
  %84 = getelementptr inbounds %"serde_json::de::ParserNumber::F64", %"serde_json::de::ParserNumber::F64"* %83, i32 0, i32 1
  store double %val3, double* %84, align 8
  %85 = bitcast %"serde_json::de::ParserNumber"* %_68 to i64*
  store i64 0, i64* %85, align 8
  %86 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok"*
  %87 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok"* %86, i32 0, i32 1
  %88 = bitcast %"serde_json::de::ParserNumber"* %87 to i8*
  %89 = bitcast %"serde_json::de::ParserNumber"* %_68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false)
  %90 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %90, align 8
  br label %bb81

bb62:                                             ; preds = %bb59
  store i8 0, i8* %_89, align 1
  %91 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_70 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %92 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %91, i32 0, i32 1
  %err2 = load i64*, i64** %92, align 8, !nonnull !2
  %93 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %94 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %93, i32 0, i32 1
  store i64* %err2, i64** %94, align 8
  %95 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %95, align 8
  br label %bb81

bb63:                                             ; preds = %bb40
  br label %bb38

bb64:                                             ; preds = %bb57
  store i8 0, i8* %_88, align 1
  br label %bb32

bb65:                                             ; preds = %bb16
  %96 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %97 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %96, i32 0, i32 1
  store i64* %41, i64** %97, align 8
  %98 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %98, align 8
  br label %bb66

bb66:                                             ; preds = %bb31, %bb65
  br label %bb6

bb67:                                             ; preds = %bb69, %bb68, %bb70
  store i8 0, i8* %_87, align 1
  br label %bb9

bb68:                                             ; preds = %bb8
  %99 = load i8, i8* %_87, align 1, !range !4
  %100 = trunc i8 %99 to i1
  br i1 %100, label %bb69, label %bb67

bb69:                                             ; preds = %bb68
  store i8 0, i8* %_87, align 1
  %101 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %102 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %101, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %102)
  br label %bb67

bb70:                                             ; preds = %bb8
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
  br label %bb67

bb71:                                             ; preds = %bb72, %bb23
  br label %bb9

bb72:                                             ; preds = %bb23
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_19)
  br label %bb71

bb73:                                             ; preds = %bb75, %bb74, %bb76
  store i8 0, i8* %_88, align 1
  br label %bb9

bb74:                                             ; preds = %bb38
  %103 = load i8, i8* %_88, align 1, !range !4
  %104 = trunc i8 %103 to i1
  br i1 %104, label %bb75, label %bb73

bb75:                                             ; preds = %bb74
  store i8 0, i8* %_88, align 1
  %105 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_37 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %106 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %105, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %106)
  br label %bb73

bb76:                                             ; preds = %bb38
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_37)
  br label %bb73

bb77:                                             ; preds = %bb79, %bb78, %bb80
  store i8 0, i8* %_89, align 1
  br label %bb38

bb78:                                             ; preds = %bb81
  %107 = load i8, i8* %_89, align 1, !range !4
  %108 = trunc i8 %107 to i1
  br i1 %108, label %bb79, label %bb77

bb79:                                             ; preds = %bb78
  store i8 0, i8* %_89, align 1
  %109 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_70 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %110 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %109, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %110)
          to label %bb77 unwind label %cleanup

bb80:                                             ; preds = %bb81
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h164d76c7649c96aaE(%"core::result::Result<f64, serde_json::error::Error>"* align 8 dereferenceable(16) %_70)
          to label %bb77 unwind label %cleanup

bb81:                                             ; preds = %bb61, %bb62
  %111 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %_70 to i64*
  %_93 = load i64, i64* %111, align 8, !range !1
  %112 = icmp eq i64 %_93, 1
  br i1 %112, label %bb78, label %bb80

cleanup:                                          ; preds = %bb40, %bb79, %bb80, %bb58, %bb39
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  %115 = extractvalue { i8*, i32 } %113, 1
  %116 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %114, i8** %116, align 8
  %117 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %115, i32* %117, align 8
  br label %bb37

cleanup6:                                         ; preds = %bb26, %bb25
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  %120 = extractvalue { i8*, i32 } %118, 1
  %121 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %119, i8** %121, align 8
  %122 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %120, i32* %122, align 8
  br label %bb24

cleanup7:                                         ; preds = %bb10
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  %125 = extractvalue { i8*, i32 } %123, 1
  %126 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %124, i8** %126, align 8
  %127 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %125, i32* %127, align 8
  br label %bb7
}

; serde_json::de::Deserializer<R>::f64_from_parts
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$14f64_from_parts17h7d9afe67a76cc10dE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i32) unnamed_addr #1 {
start:
  %_31 = alloca double, align 8
  %_30 = alloca %"serde_json::error::ErrorCode", align 8
  %_22 = alloca %"serde_json::error::ErrorCode", align 8
  %_7 = alloca i64*, align 8
  %f = alloca double, align 8
  %exponent = alloca i32, align 4
  store i32 %1, i32* %exponent, align 4
  %2 = uitofp i64 %significand to double
  store double %2, double* %f, align 8
  br label %bb1

bb1:                                              ; preds = %bb19, %start
  %_12 = load i32, i32* %exponent, align 4
; call core::num::<impl i32>::wrapping_abs
  %3 = call i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_abs17hd60904074f74e421E"(i32 %_12)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_10 = sext i32 %3 to i64
; call core::slice::<impl [T]>::get
  %4 = call align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hc137014e2a501e49E"([0 x double]* noalias nonnull readonly align 8 bitcast ([309 x double]* @_ZN10serde_json2de5POW1017hf5de5bb0e948b3cfE to [0 x double]*), i64 309, i64 %_10)
  store i64* %4, i64** %_7, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = bitcast i64** %_7 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp ule {}* %6, null
  %_13 = select i1 %7, i64 0, i64 1
  switch i64 %_13, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb4:                                              ; preds = %bb3
  %_25 = load double, double* %f, align 8
  %_24 = fcmp oeq double %_25, 0.000000e+00
  br i1 %_24, label %bb18, label %bb17

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
  %8 = bitcast i64** %_7 to double**
  %9 = load double*, double** %8, align 8, !nonnull !2
  %pow = load double, double* %9, align 8
  %_16 = load i32, i32* %exponent, align 4
  %_15 = icmp sge i32 %_16, 0
  br i1 %_15, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  %10 = load double, double* %f, align 8
  %11 = fdiv double %10, %pow
  store double %11, double* %f, align 8
  br label %bb15

bb8:                                              ; preds = %bb6
  %12 = load double, double* %f, align 8
  %13 = fmul double %12, %pow
  store double %13, double* %f, align 8
  %_19 = load double, double* %f, align 8
; call core::f64::<impl f64>::is_infinite
  %14 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$11is_infinite17h30643d1eb9d48562E"(double %_19)
  br label %bb9

bb9:                                              ; preds = %bb8
  br i1 %14, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  br label %bb15

bb11:                                             ; preds = %bb9
  %15 = bitcast %"serde_json::error::ErrorCode"* %_22 to i64*
  store i64 15, i64* %15, align 8
; call serde_json::de::Deserializer<R>::error
  %16 = call noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_22)
  br label %bb13

bb12:                                             ; preds = %bb14, %bb24
  ret void

bb13:                                             ; preds = %bb11
  %17 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %18 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %17, i32 0, i32 1
  store i64* %16, i64** %18, align 8
  %19 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %19, align 8
  br label %bb14

bb14:                                             ; preds = %bb21, %bb13
  br label %bb12

bb15:                                             ; preds = %bb7, %bb10
  br label %bb16

bb16:                                             ; preds = %bb18, %bb15
  br i1 %positive, label %bb23, label %bb22

bb17:                                             ; preds = %bb4
  %_27 = load i32, i32* %exponent, align 4
  %_26 = icmp sge i32 %_27, 0
  br i1 %_26, label %bb20, label %bb19

bb18:                                             ; preds = %bb4
  br label %bb16

bb19:                                             ; preds = %bb17
  %20 = load double, double* %f, align 8
  %21 = fdiv double %20, 1.000000e+308
  store double %21, double* %f, align 8
  %22 = load i32, i32* %exponent, align 4
  %23 = add i32 %22, 308
  store i32 %23, i32* %exponent, align 4
  br label %bb1

bb20:                                             ; preds = %bb17
  %24 = bitcast %"serde_json::error::ErrorCode"* %_30 to i64*
  store i64 15, i64* %24, align 8
; call serde_json::de::Deserializer<R>::error
  %25 = call noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_30)
  br label %bb21

bb21:                                             ; preds = %bb20
  %26 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %26, i32 0, i32 1
  store i64* %25, i64** %27, align 8
  %28 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %28, align 8
  br label %bb14

bb22:                                             ; preds = %bb16
  %_33 = load double, double* %f, align 8
  %29 = fsub double -0.000000e+00, %_33
  store double %29, double* %_31, align 8
  br label %bb24

bb23:                                             ; preds = %bb16
  %30 = load double, double* %f, align 8
  store double %30, double* %_31, align 8
  br label %bb24

bb24:                                             ; preds = %bb22, %bb23
  %31 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Ok"*
  %32 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Ok", %"core::result::Result<f64, serde_json::error::Error>::Ok"* %31, i32 0, i32 1
  %33 = load double, double* %_31, align 8
  store double %33, double* %32, align 8
  %34 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %34, align 8
  br label %bb12
}

; serde_json::de::Deserializer<R>::parse_exponent
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$14parse_exponent17h88fb6703e140e55bE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i32 %starting_exp) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_100 = alloca i8, align 1
  %_99 = alloca i8, align 1
  %final_exp = alloca i32, align 4
  %_65 = alloca i8, align 1
  %_56 = alloca i8, align 1
  %_42 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %_40 = alloca %"serde_json::error::ErrorCode", align 8
  %exp = alloca i32, align 4
  %_31 = alloca %"serde_json::error::ErrorCode", align 8
  %_21 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_20 = alloca { i8, i8 }, align 1
  %_9 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %positive_exp = alloca i8, align 1
  store i8 0, i8* %_99, align 1
  store i8 0, i8* %_100, align 1
; call serde_json::de::Deserializer<R>::eat_char
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb1:                                              ; preds = %bb21, %bb39, %bb8
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
; call serde_json::de::Deserializer<R>::peek_or_null
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_9, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb3

bb3:                                              ; preds = %bb2
  %8 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_9 to i8*
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %_11 = zext i1 %10 to i64
  switch i64 %_11, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
  %11 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_9 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %val = load i8, i8* %12, align 1
  switch i8 %val, label %bb10 [
    i8 43, label %bb11
    i8 45, label %bb13
  ]

bb6:                                              ; preds = %bb3
  %13 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_9 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %13, i32 0, i32 1
  %err = load i64*, i64** %14, align 8, !nonnull !2
  %15 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %16 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %15, i32 0, i32 1
  store i64* %err, i64** %16, align 8
  %17 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %17, align 8
  %18 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_9 to i8*
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = trunc i8 %19 to i1
  %_101 = zext i1 %20 to i64
  %21 = icmp eq i64 %_101, 1
  br i1 %21, label %bb73, label %bb74

bb7:                                              ; preds = %bb9, %bb72
  ret void

bb8:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_9) #14
  br label %bb1

bb9:                                              ; preds = %bb23, %bb73
  br label %bb7

bb10:                                             ; preds = %bb5
  store i8 1, i8* %positive_exp, align 1
  br label %bb15

bb11:                                             ; preds = %bb5
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store i8 1, i8* %positive_exp, align 1
  br label %bb15

bb13:                                             ; preds = %bb5
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  store i8 0, i8* %positive_exp, align 1
  br label %bb15

bb15:                                             ; preds = %bb12, %bb14, %bb10
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_9)
  br label %bb16

bb16:                                             ; preds = %bb15
  store i8 1, i8* %_99, align 1
; call serde_json::de::Deserializer<R>::next_char
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$9next_char17h0e00787cc80c5e1eE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_21, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb17

bb17:                                             ; preds = %bb16
  %22 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_21 to i8*
  %23 = load i8, i8* %22, align 8, !range !4
  %24 = trunc i8 %23 to i1
  %_23 = zext i1 %24 to i64
  switch i64 %_23, label %bb18 [
    i64 0, label %bb19
    i64 1, label %bb20
  ]

bb18:                                             ; preds = %bb17
  unreachable

bb19:                                             ; preds = %bb17
  %25 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_21 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %26 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %26, i32 0, i32 0
  %28 = load i8, i8* %27, align 1, !range !4
  %val.0 = trunc i8 %28 to i1
  %29 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %26, i32 0, i32 1
  %val.1 = load i8, i8* %29, align 1
  %30 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_20, i32 0, i32 0
  %31 = zext i1 %val.0 to i8
  store i8 %31, i8* %30, align 1
  %32 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_20, i32 0, i32 1
  store i8 %val.1, i8* %32, align 1
  %33 = bitcast { i8, i8 }* %_20 to i8*
  %34 = load i8, i8* %33, align 1, !range !4
  %35 = trunc i8 %34 to i1
  %_27 = zext i1 %35 to i64
  switch i64 %_27, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ]

bb20:                                             ; preds = %bb17
  store i8 0, i8* %_99, align 1
  %36 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_21 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %37 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %36, i32 0, i32 1
  %err1 = load i64*, i64** %37, align 8, !nonnull !2
  %38 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %39 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %38, i32 0, i32 1
  store i64* %err1, i64** %39, align 8
  %40 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %40, align 8
  br label %bb22

bb21:                                             ; preds = %cleanup7
  store i8 0, i8* %_99, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_21) #14
  br label %bb1

bb22:                                             ; preds = %bb27, %bb20
  %41 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_21 to i8*
  %42 = load i8, i8* %41, align 8, !range !4
  %43 = trunc i8 %42 to i1
  %_102 = zext i1 %43 to i64
  %44 = icmp eq i64 %_102, 1
  br i1 %44, label %bb76, label %bb78

bb23:                                             ; preds = %bb75, %bb33
  br label %bb9

bb24:                                             ; preds = %bb19
  %45 = bitcast %"serde_json::error::ErrorCode"* %_31 to i64*
  store i64 5, i64* %45, align 8
; invoke serde_json::de::Deserializer<R>::error
  %46 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_31)
          to label %bb27 unwind label %cleanup7

bb25:                                             ; preds = %bb19
  unreachable

bb26:                                             ; preds = %bb19
  %47 = bitcast { i8, i8 }* %_20 to %"core::option::Option<u8>::Some"*
  %48 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %47, i32 0, i32 1
  %b = load i8, i8* %48, align 1
  store i8 0, i8* %_99, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_21)
  br label %bb28

bb27:                                             ; preds = %bb24
  %49 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %50 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %49, i32 0, i32 1
  store i64* %46, i64** %50, align 8
  %51 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %51, align 8
  br label %bb22

bb28:                                             ; preds = %bb26
  store i8 0, i8* %_99, align 1
  %_33 = icmp ule i8 48, %b
  br i1 %_33, label %bb31, label %bb30

bb29:                                             ; preds = %bb31
  %_36 = sub i8 %b, 48
  %52 = zext i8 %_36 to i32
  store i32 %52, i32* %exp, align 4
  br label %bb34

bb30:                                             ; preds = %bb31, %bb28
  %53 = bitcast %"serde_json::error::ErrorCode"* %_40 to i64*
  store i64 14, i64* %53, align 8
; call serde_json::de::Deserializer<R>::error
  %54 = call noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_40)
  br label %bb32

bb31:                                             ; preds = %bb28
  %_34 = icmp ule i8 %b, 57
  br i1 %_34, label %bb29, label %bb30

bb32:                                             ; preds = %bb30
  %55 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %56 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %55, i32 0, i32 1
  store i64* %54, i64** %56, align 8
  %57 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %57, align 8
  br label %bb33

bb33:                                             ; preds = %bb32, %bb79
  br label %bb23

bb34:                                             ; preds = %bb66, %bb29
  store i8 1, i8* %_100, align 1
; call serde_json::de::Deserializer<R>::peek_or_null
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_42, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb35

bb35:                                             ; preds = %bb34
  %58 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_42 to i8*
  %59 = load i8, i8* %58, align 8, !range !4
  %60 = trunc i8 %59 to i1
  %_44 = zext i1 %60 to i64
  switch i64 %_44, label %bb36 [
    i64 0, label %bb37
    i64 1, label %bb38
  ]

bb36:                                             ; preds = %bb35
  unreachable

bb37:                                             ; preds = %bb35
  %61 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_42 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %62 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %61, i32 0, i32 1
  %val3 = load i8, i8* %62, align 1
  %_48 = icmp ule i8 48, %val3
  br i1 %_48, label %bb43, label %bb42

bb38:                                             ; preds = %bb35
  store i8 0, i8* %_100, align 1
  %63 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_42 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %64 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %63, i32 0, i32 1
  %err2 = load i64*, i64** %64, align 8, !nonnull !2
  %65 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %66 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %65, i32 0, i32 1
  store i64* %err2, i64** %66, align 8
  %67 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %67, align 8
  br label %bb40

bb39:                                             ; preds = %cleanup4
  store i8 0, i8* %_100, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_42) #14
  br label %bb1

bb40:                                             ; preds = %bb64, %bb38
  %68 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_42 to i8*
  %69 = load i8, i8* %68, align 8, !range !4
  %70 = trunc i8 %69 to i1
  %_103 = zext i1 %70 to i64
  %71 = icmp eq i64 %_103, 1
  br i1 %71, label %bb80, label %bb82

bb41:                                             ; preds = %bb43
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb44 unwind label %cleanup4

bb42:                                             ; preds = %bb43, %bb37
  store i8 0, i8* %_100, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_42)
  br label %bb65

bb43:                                             ; preds = %bb37
  %_49 = icmp ule i8 %val3, 57
  br i1 %_49, label %bb41, label %bb42

bb44:                                             ; preds = %bb41
  %_54 = sub i8 %val3, 48
  %digit = zext i8 %_54 to i32
  %_58 = load i32, i32* %exp, align 4
  br label %bb49

bb45:                                             ; preds = %bb55
  store i8 1, i8* %_56, align 1
  br label %bb48

bb46:                                             ; preds = %bb55, %bb51
  store i8 0, i8* %_56, align 1
  br label %bb48

bb47:                                             ; preds = %bb51
  %_67 = load i32, i32* %exp, align 4
  br label %bb56

bb48:                                             ; preds = %bb46, %bb45
  %72 = load i8, i8* %_56, align 1, !range !4
  %73 = trunc i8 %72 to i1
  br i1 %73, label %bb63, label %bb62

bb49:                                             ; preds = %bb44
  br label %bb50

bb50:                                             ; preds = %bb49
  %_63 = icmp eq i32 2147483647, -2147483648
  %_64 = and i1 false, %_63
  %74 = call i1 @llvm.expect.i1(i1 %_64, i1 false)
  br i1 %74, label %panic, label %bb51

bb51:                                             ; preds = %bb50
  %_59 = sdiv i32 2147483647, 10
  %_57 = icmp sge i32 %_58, %_59
  br i1 %_57, label %bb47, label %bb46

bb52:                                             ; preds = %bb61, %bb58
  store i8 1, i8* %_65, align 1
  br label %bb55

bb53:                                             ; preds = %bb61
  store i8 0, i8* %_65, align 1
  br label %bb55

bb54:                                             ; preds = %bb58
  br label %bb59

bb55:                                             ; preds = %bb53, %bb52
  %75 = load i8, i8* %_65, align 1, !range !4
  %76 = trunc i8 %75 to i1
  br i1 %76, label %bb45, label %bb46

bb56:                                             ; preds = %bb47
  br label %bb57

bb57:                                             ; preds = %bb56
  %_72 = icmp eq i32 2147483647, -2147483648
  %_73 = and i1 false, %_72
  %77 = call i1 @llvm.expect.i1(i1 %_73, i1 false)
  br i1 %77, label %panic5, label %bb58

bb58:                                             ; preds = %bb57
  %_68 = sdiv i32 2147483647, 10
  %_66 = icmp sgt i32 %_67, %_68
  br i1 %_66, label %bb52, label %bb54

bb59:                                             ; preds = %bb54
  br label %bb60

bb60:                                             ; preds = %bb59
  %_80 = icmp eq i32 2147483647, -2147483648
  %_81 = and i1 false, %_80
  %78 = call i1 @llvm.expect.i1(i1 %_81, i1 false)
  br i1 %78, label %panic6, label %bb61

bb61:                                             ; preds = %bb60
  %_76 = srem i32 2147483647, 10
  %_74 = icmp sgt i32 %digit, %_76
  br i1 %_74, label %bb52, label %bb53

bb62:                                             ; preds = %bb48
  %_87 = load i32, i32* %exp, align 4
  %_86 = mul i32 %_87, 10
  %79 = add i32 %_86, %digit
  store i32 %79, i32* %exp, align 4
  store i8 0, i8* %_100, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_42)
  br label %bb66

bb63:                                             ; preds = %bb48
  %80 = load i8, i8* %positive_exp, align 1, !range !4
  %_85 = trunc i8 %80 to i1
; invoke serde_json::de::Deserializer<R>::parse_exponent_overflow
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$23parse_exponent_overflow17h5bc22750455fcd10E"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i1 zeroext %_85)
          to label %bb64 unwind label %cleanup4

bb64:                                             ; preds = %bb63
  br label %bb40

bb65:                                             ; preds = %bb42
  store i8 0, i8* %_100, align 1
  %81 = load i8, i8* %positive_exp, align 1, !range !4
  %_90 = trunc i8 %81 to i1
  br i1 %_90, label %bb68, label %bb67

bb66:                                             ; preds = %bb62
  store i8 0, i8* %_100, align 1
  br label %bb34

bb67:                                             ; preds = %bb65
  %_94 = load i32, i32* %exp, align 4
; call core::num::<impl i32>::saturating_sub
  %82 = call i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$14saturating_sub17h462f20001e041eabE"(i32 %starting_exp, i32 %_94)
  store i32 %82, i32* %final_exp, align 4
  br label %bb70

bb68:                                             ; preds = %bb65
  %_92 = load i32, i32* %exp, align 4
; call core::num::<impl i32>::saturating_add
  %83 = call i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$14saturating_add17h68629e871c7c6c0eE"(i32 %starting_exp, i32 %_92)
  store i32 %83, i32* %final_exp, align 4
  br label %bb69

bb69:                                             ; preds = %bb68
  br label %bb71

bb70:                                             ; preds = %bb67
  br label %bb71

bb71:                                             ; preds = %bb70, %bb69
  %_98 = load i32, i32* %final_exp, align 4
; call serde_json::de::Deserializer<R>::f64_from_parts
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$14f64_from_parts17h7d9afe67a76cc10dE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i32 %_98)
  br label %bb72

bb72:                                             ; preds = %bb71
  br label %bb7

bb73:                                             ; preds = %bb74, %bb6
  br label %bb9

bb74:                                             ; preds = %bb6
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_9)
  br label %bb73

bb75:                                             ; preds = %bb77, %bb76, %bb78
  store i8 0, i8* %_99, align 1
  br label %bb23

bb76:                                             ; preds = %bb22
  %84 = load i8, i8* %_99, align 1, !range !4
  %85 = trunc i8 %84 to i1
  br i1 %85, label %bb77, label %bb75

bb77:                                             ; preds = %bb76
  store i8 0, i8* %_99, align 1
  %86 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_21 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %87 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %86, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %87)
  br label %bb75

bb78:                                             ; preds = %bb22
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_21)
  br label %bb75

bb79:                                             ; preds = %bb81, %bb80, %bb82
  store i8 0, i8* %_100, align 1
  br label %bb33

bb80:                                             ; preds = %bb40
  %88 = load i8, i8* %_100, align 1, !range !4
  %89 = trunc i8 %88 to i1
  br i1 %89, label %bb81, label %bb79

bb81:                                             ; preds = %bb80
  store i8 0, i8* %_100, align 1
  %90 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_42 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %91 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %90, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %91)
  br label %bb79

bb82:                                             ; preds = %bb40
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_42)
  br label %bb79

cleanup:                                          ; preds = %bb11, %bb13
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = extractvalue { i8*, i32 } %92, 0
  %94 = extractvalue { i8*, i32 } %92, 1
  %95 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %93, i8** %95, align 8
  %96 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %94, i32* %96, align 8
  br label %bb8

cleanup4:                                         ; preds = %bb63, %panic6, %panic5, %panic, %bb41
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  %99 = extractvalue { i8*, i32 } %97, 1
  %100 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %98, i8** %100, align 8
  %101 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %99, i32* %101, align 8
  br label %bb39

panic:                                            ; preds = %bb50
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([31 x i8]* @str.0 to [0 x i8]*), i64 31, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @1 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup4

unreachable:                                      ; preds = %panic6, %panic5, %panic
  unreachable

panic5:                                           ; preds = %bb57
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([31 x i8]* @str.0 to [0 x i8]*), i64 31, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @2 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup4

panic6:                                           ; preds = %bb60
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([48 x i8]* @str.1 to [0 x i8]*), i64 48, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @3 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup4

cleanup7:                                         ; preds = %bb24
  %102 = landingpad { i8*, i32 }
          cleanup
  %103 = extractvalue { i8*, i32 } %102, 0
  %104 = extractvalue { i8*, i32 } %102, 1
  %105 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %103, i8** %105, align 8
  %106 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %104, i32* %106, align 8
  br label %bb21
}

; serde_json::de::Deserializer<R>::parse_any_number
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_any_number17h6010bfa3b4b0ba4bE"(%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* noalias nocapture sret dereferenceable(24), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive) unnamed_addr #1 {
start:
; call serde_json::de::Deserializer<R>::parse_integer
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$13parse_integer17h63ff08302b0eeee7E"(%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* noalias nocapture sret dereferenceable(24) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde_json::de::Deserializer<R>::parse_whitespace
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_14 = alloca i8, align 1
  %_3 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_2 = alloca { i8, i8 }, align 1
  store i8 0, i8* %_14, align 1
  br label %bb1

bb1:                                              ; preds = %bb13, %start
  store i8 1, i8* %_14, align 1
; call serde_json::de::Deserializer<R>::peek
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$4peek17heda9452678a2416aE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_3, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb3

bb2:                                              ; preds = %bb7
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb3:                                              ; preds = %bb1
  %8 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %_5 = zext i1 %10 to i64
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !4
  %val.0 = trunc i8 %14 to i1
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 1
  %val.1 = load i8, i8* %15, align 1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 0
  %17 = zext i1 %val.0 to i8
  store i8 %17, i8* %16, align 1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1
  store i8 %val.1, i8* %18, align 1
  %19 = bitcast { i8, i8 }* %_2 to i8*
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = trunc i8 %20 to i1
  %_9 = zext i1 %21 to i64
  %22 = icmp eq i64 %_9, 1
  br i1 %22, label %bb9, label %bb12

bb6:                                              ; preds = %bb3
  store i8 0, i8* %_14, align 1
  %23 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %24 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %23, i32 0, i32 1
  %err = load i64*, i64** %24, align 8, !nonnull !2
  %25 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %25, i32 0, i32 1
  store i64* %err, i64** %26, align 8
  %27 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %0 to i8*
  store i8 1, i8* %27, align 8
  br label %bb8

bb7:                                              ; preds = %cleanup
  store i8 0, i8* %_14, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3) #14
  br label %bb2

bb8:                                              ; preds = %bb12, %bb6
  %28 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %29 = load i8, i8* %28, align 8, !range !4
  %30 = trunc i8 %29 to i1
  %_15 = zext i1 %30 to i64
  %31 = icmp eq i64 %_15, 1
  br i1 %31, label %bb15, label %bb17

bb9:                                              ; preds = %bb5
  %32 = bitcast { i8, i8 }* %_2 to %"core::option::Option<u8>::Some"*
  %33 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %32, i32 0, i32 1
  %34 = load i8, i8* %33, align 1
  switch i8 %34, label %bb12 [
    i8 32, label %bb10
    i8 10, label %bb10
    i8 9, label %bb10
    i8 13, label %bb10
  ]

bb10:                                             ; preds = %bb9, %bb9, %bb9, %bb9
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_14, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb13

bb12:                                             ; preds = %bb9, %bb5
  %35 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 0
  %36 = load i8, i8* %35, align 1, !range !4
  %other.0 = trunc i8 %36 to i1
  %37 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1
  %other.1 = load i8, i8* %37, align 1
  %38 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %39 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %38, i32 0, i32 1
  %40 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %39, i32 0, i32 0
  %41 = zext i1 %other.0 to i8
  store i8 %41, i8* %40, align 1
  %42 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %39, i32 0, i32 1
  store i8 %other.1, i8* %42, align 1
  %43 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %0 to i8*
  store i8 0, i8* %43, align 8
  br label %bb8

bb13:                                             ; preds = %bb11
  store i8 0, i8* %_14, align 1
  br label %bb1

bb14:                                             ; preds = %bb16, %bb15, %bb17
  store i8 0, i8* %_14, align 1
  ret void

bb15:                                             ; preds = %bb8
  %44 = load i8, i8* %_14, align 1, !range !4
  %45 = trunc i8 %44 to i1
  br i1 %45, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_14, align 1
  %46 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %47 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %46, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %47)
  br label %bb14

bb17:                                             ; preds = %bb8
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb14

cleanup:                                          ; preds = %bb10
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = extractvalue { i8*, i32 } %48, 1
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  br label %bb7
}

; serde_json::de::Deserializer<R>::parse_long_integer
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$18parse_long_integer17hb31b4fa604dd876bE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i32) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_28 = alloca i8, align 1
  %_6 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %exponent = alloca i32, align 4
  store i32 %1, i32* %exponent, align 4
  store i8 0, i8* %_28, align 1
  br label %bb1

bb1:                                              ; preds = %bb19, %start
  store i8 1, i8* %_28, align 1
; call serde_json::de::Deserializer<R>::peek_or_null
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_6, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb3

bb2:                                              ; preds = %bb7
  %3 = bitcast { i8*, i32 }* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb3:                                              ; preds = %bb1
  %9 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to i8*
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = trunc i8 %10 to i1
  %_8 = zext i1 %11 to i64
  switch i64 %_8, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
  %12 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %13 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %12, i32 0, i32 1
  %val = load i8, i8* %13, align 1
  %_12 = icmp ule i8 48, %val
  br i1 %_12, label %bb12, label %bb13

bb6:                                              ; preds = %bb3
  store i8 0, i8* %_28, align 1
  %14 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %15 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %14, i32 0, i32 1
  %err = load i64*, i64** %15, align 8, !nonnull !2
  %16 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %17 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %16, i32 0, i32 1
  store i64* %err, i64** %17, align 8
  %18 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %18, align 8
  br label %bb8

bb7:                                              ; preds = %cleanup
  store i8 0, i8* %_28, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_6) #14
  br label %bb2

bb8:                                              ; preds = %bb15, %bb17, %bb18, %bb6
  %19 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to i8*
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = trunc i8 %20 to i1
  %_29 = zext i1 %21 to i64
  %22 = icmp eq i64 %_29, 1
  br i1 %22, label %bb21, label %bb23

bb9:                                              ; preds = %bb12
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb14 unwind label %cleanup

bb10:                                             ; preds = %bb13
  %_19 = load i32, i32* %exponent, align 4
; invoke serde_json::de::Deserializer<R>::parse_decimal
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$13parse_decimal17habee609a866cc241E"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i32 %_19)
          to label %bb15 unwind label %cleanup

bb11:                                             ; preds = %bb13
  %_27 = load i32, i32* %exponent, align 4
; invoke serde_json::de::Deserializer<R>::f64_from_parts
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$14f64_from_parts17h7d9afe67a76cc10dE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i32 %_27)
          to label %bb18 unwind label %cleanup

bb12:                                             ; preds = %bb5
  %_13 = icmp ule i8 %val, 57
  br i1 %_13, label %bb9, label %bb13

bb13:                                             ; preds = %bb12, %bb5
  switch i8 %val, label %bb11 [
    i8 46, label %bb10
    i8 101, label %bb16
    i8 69, label %bb16
  ]

bb14:                                             ; preds = %bb9
  %23 = load i32, i32* %exponent, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %exponent, align 4
  store i8 0, i8* %_28, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_6)
  br label %bb19

bb15:                                             ; preds = %bb10
  br label %bb8

bb16:                                             ; preds = %bb13, %bb13
  %_23 = load i32, i32* %exponent, align 4
; invoke serde_json::de::Deserializer<R>::parse_exponent
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$14parse_exponent17h88fb6703e140e55bE"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i32 %_23)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  br label %bb8

bb18:                                             ; preds = %bb11
  br label %bb8

bb19:                                             ; preds = %bb14
  store i8 0, i8* %_28, align 1
  br label %bb1

bb20:                                             ; preds = %bb22, %bb21, %bb23
  store i8 0, i8* %_28, align 1
  ret void

bb21:                                             ; preds = %bb8
  %25 = load i8, i8* %_28, align 1, !range !4
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb22, label %bb20

bb22:                                             ; preds = %bb21
  store i8 0, i8* %_28, align 1
  %27 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_6 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %27, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %28)
  br label %bb20

bb23:                                             ; preds = %bb8
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_6)
  br label %bb20

cleanup:                                          ; preds = %bb10, %bb16, %bb11, %bb9
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  br label %bb7
}

; serde_json::de::Deserializer<R>::parse_object_colon
; Function Attrs: uwtable
define internal noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$18parse_object_colon17h2f365d57f6a97b57E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_18 = alloca %"serde_json::error::ErrorCode", align 8
  %_15 = alloca %"serde_json::error::ErrorCode", align 8
  %_12 = alloca {}, align 1
  %_3 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_2 = alloca { i8, i8 }, align 1
  %1 = alloca i64*, align 8
; call serde_json::de::Deserializer<R>::parse_whitespace
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_3, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb1:                                              ; preds = %bb7
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %_5 = zext i1 %10 to i64
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !4
  %val.0 = trunc i8 %14 to i1
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 1
  %val.1 = load i8, i8* %15, align 1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 0
  %17 = zext i1 %val.0 to i8
  store i8 %17, i8* %16, align 1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1
  store i8 %val.1, i8* %18, align 1
  %19 = bitcast { i8, i8 }* %_2 to i8*
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = trunc i8 %20 to i1
  %_9 = zext i1 %21 to i64
  switch i64 %_9, label %bb12 [
    i64 0, label %bb10
    i64 1, label %bb11
  ]

bb5:                                              ; preds = %bb2
  %22 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %22, i32 0, i32 1
  %err = load i64*, i64** %23, align 8, !nonnull !2
  store i64* %err, i64** %1, align 8
  %24 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %25 = load i8, i8* %24, align 8, !range !4
  %26 = trunc i8 %25 to i1
  %_19 = zext i1 %26 to i64
  %27 = icmp eq i64 %_19, 1
  br i1 %27, label %bb18, label %bb19

bb6:                                              ; preds = %bb17, %bb18
  %28 = load i64*, i64** %1, align 8
  ret i64* %28

bb7:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3) #14
  br label %bb1

bb8:                                              ; preds = %bb11
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb13 unwind label %cleanup

bb9:                                              ; preds = %bb11
  %29 = bitcast %"serde_json::error::ErrorCode"* %_15 to i64*
  store i64 6, i64* %29, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %30 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_15)
          to label %bb14 unwind label %cleanup

bb10:                                             ; preds = %bb4
  %31 = bitcast %"serde_json::error::ErrorCode"* %_18 to i64*
  store i64 3, i64* %31, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %32 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_18)
          to label %bb15 unwind label %cleanup

bb11:                                             ; preds = %bb4
  %33 = bitcast { i8, i8 }* %_2 to %"core::option::Option<u8>::Some"*
  %34 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %33, i32 0, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 58
  br i1 %36, label %bb8, label %bb9

bb12:                                             ; preds = %bb4
  unreachable

bb13:                                             ; preds = %bb8
  %37 = bitcast i64** %1 to %"core::result::Result<(), serde_json::error::Error>::Ok"*
  %38 = bitcast %"core::result::Result<(), serde_json::error::Error>::Ok"* %37 to {}*
  %39 = bitcast i64** %1 to {}**
  store {}* null, {}** %39, align 8
  br label %bb16

bb14:                                             ; preds = %bb9
  store i64* %30, i64** %1, align 8
  br label %bb16

bb15:                                             ; preds = %bb10
  store i64* %32, i64** %1, align 8
  br label %bb16

bb16:                                             ; preds = %bb15, %bb13, %bb14
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb6

bb18:                                             ; preds = %bb19, %bb5
  br label %bb6

bb19:                                             ; preds = %bb5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb18

cleanup:                                          ; preds = %bb10, %bb8, %bb9
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb7
}

; serde_json::de::Deserializer<R>::parse_exponent_overflow
; Function Attrs: cold noinline uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$23parse_exponent_overflow17h5bc22750455fcd10E"(%"core::result::Result<f64, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self, i1 zeroext %positive, i64 %significand, i1 zeroext %positive_exp) unnamed_addr #3 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_23 = alloca double, align 8
  %_13 = alloca %"core::result::Result<u8, serde_json::error::Error>", align 8
  %_11 = alloca %"serde_json::error::ErrorCode", align 8
  %_5 = alloca i8, align 1
  %_6 = icmp ne i64 %significand, 0
  br i1 %_6, label %bb3, label %bb2

bb1:                                              ; preds = %bb3
  store i8 1, i8* %_5, align 1
  br label %bb4

bb2:                                              ; preds = %bb3, %start
  store i8 0, i8* %_5, align 1
  br label %bb4

bb3:                                              ; preds = %start
  br i1 %positive_exp, label %bb1, label %bb2

bb4:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %_5, align 1, !range !4
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb7, label %bb6

bb5:                                              ; preds = %bb15
  %4 = bitcast { i8*, i32 }* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb6:                                              ; preds = %bb4
  br label %bb10

bb7:                                              ; preds = %bb4
  %10 = bitcast %"serde_json::error::ErrorCode"* %_11 to i64*
  store i64 15, i64* %10, align 8
; call serde_json::de::Deserializer<R>::error
  %11 = call noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_11)
  br label %bb9

bb8:                                              ; preds = %bb24, %bb25, %bb9
  ret void

bb9:                                              ; preds = %bb7
  %12 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %13 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %12, i32 0, i32 1
  store i64* %11, i64** %13, align 8
  %14 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %14, align 8
  br label %bb8

bb10:                                             ; preds = %bb21, %bb6
; call serde_json::de::Deserializer<R>::peek_or_null
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$12peek_or_null17hb35dfed309bd4e58E"(%"core::result::Result<u8, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_13, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb11

bb11:                                             ; preds = %bb10
  %15 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_13 to i8*
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = trunc i8 %16 to i1
  %_15 = zext i1 %17 to i64
  switch i64 %_15, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb14
  ]

bb12:                                             ; preds = %bb11
  unreachable

bb13:                                             ; preds = %bb11
  %18 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_13 to %"core::result::Result<u8, serde_json::error::Error>::Ok"*
  %19 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Ok", %"core::result::Result<u8, serde_json::error::Error>::Ok"* %18, i32 0, i32 1
  %val = load i8, i8* %19, align 1
  %_19 = icmp ule i8 48, %val
  br i1 %_19, label %bb18, label %bb17

bb14:                                             ; preds = %bb11
  %20 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_13 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %21 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %20, i32 0, i32 1
  %err = load i64*, i64** %21, align 8, !nonnull !2
  %22 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %22, i32 0, i32 1
  store i64* %err, i64** %23, align 8
  %24 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %24, align 8
  %25 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %_13 to i8*
  %26 = load i8, i8* %25, align 8, !range !4
  %27 = trunc i8 %26 to i1
  %_25 = zext i1 %27 to i64
  %28 = icmp eq i64 %_25, 1
  br i1 %28, label %bb25, label %bb26

bb15:                                             ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_13) #14
  br label %bb5

bb16:                                             ; preds = %bb18
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb19 unwind label %cleanup

bb17:                                             ; preds = %bb18, %bb13
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_13)
  br label %bb20

bb18:                                             ; preds = %bb13
  %_20 = icmp ule i8 %val, 57
  br i1 %_20, label %bb16, label %bb17

bb19:                                             ; preds = %bb16
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_13)
  br label %bb21

bb20:                                             ; preds = %bb17
  br i1 %positive, label %bb23, label %bb22

bb21:                                             ; preds = %bb19
  br label %bb10

bb22:                                             ; preds = %bb20
  store double -0.000000e+00, double* %_23, align 8
  br label %bb24

bb23:                                             ; preds = %bb20
  store double 0.000000e+00, double* %_23, align 8
  br label %bb24

bb24:                                             ; preds = %bb22, %bb23
  %29 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to %"core::result::Result<f64, serde_json::error::Error>::Ok"*
  %30 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Ok", %"core::result::Result<f64, serde_json::error::Error>::Ok"* %29, i32 0, i32 1
  %31 = load double, double* %_23, align 8
  store double %31, double* %30, align 8
  %32 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %bb8

bb25:                                             ; preds = %bb26, %bb14
  br label %bb8

bb26:                                             ; preds = %bb14
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16) %_13)
  br label %bb25

cleanup:                                          ; preds = %bb16
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  %35 = extractvalue { i8*, i32 } %33, 1
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %35, i32* %37, align 8
  br label %bb15
}

; serde_json::de::Deserializer<R>::end
; Function Attrs: uwtable
define internal noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$3end17hcbcbe374b4655a15E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_13 = alloca {}, align 1
  %_12 = alloca %"serde_json::error::ErrorCode", align 8
  %_3 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_2 = alloca { i8, i8 }, align 1
  %1 = alloca i64*, align 8
; call serde_json::de::Deserializer<R>::parse_whitespace
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_3, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb1:                                              ; preds = %bb7
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %_5 = zext i1 %10 to i64
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !4
  %val.0 = trunc i8 %14 to i1
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 1
  %val.1 = load i8, i8* %15, align 1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 0
  %17 = zext i1 %val.0 to i8
  store i8 %17, i8* %16, align 1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1
  store i8 %val.1, i8* %18, align 1
  %19 = bitcast { i8, i8 }* %_2 to i8*
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = trunc i8 %20 to i1
  %_9 = zext i1 %21 to i64
  switch i64 %_9, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb5:                                              ; preds = %bb2
  %22 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %22, i32 0, i32 1
  %err = load i64*, i64** %23, align 8, !nonnull !2
  store i64* %err, i64** %1, align 8
  %24 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %25 = load i8, i8* %24, align 8, !range !4
  %26 = trunc i8 %25 to i1
  %_14 = zext i1 %26 to i64
  %27 = icmp eq i64 %_14, 1
  br i1 %27, label %bb14, label %bb15

bb6:                                              ; preds = %bb13, %bb14
  %28 = load i64*, i64** %1, align 8
  ret i64* %28

bb7:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3) #14
  br label %bb1

bb8:                                              ; preds = %bb4
  %29 = bitcast i64** %1 to %"core::result::Result<(), serde_json::error::Error>::Ok"*
  %30 = bitcast %"core::result::Result<(), serde_json::error::Error>::Ok"* %29 to {}*
  %31 = bitcast i64** %1 to {}**
  store {}* null, {}** %31, align 8
  br label %bb12

bb9:                                              ; preds = %bb4
  unreachable

bb10:                                             ; preds = %bb4
  %32 = bitcast %"serde_json::error::ErrorCode"* %_12 to i64*
  store i64 21, i64* %32, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %33 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_12)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  store i64* %33, i64** %1, align 8
  br label %bb12

bb12:                                             ; preds = %bb8, %bb11
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb13

bb13:                                             ; preds = %bb12
  br label %bb6

bb14:                                             ; preds = %bb15, %bb5
  br label %bb6

bb15:                                             ; preds = %bb5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb14

cleanup:                                          ; preds = %bb10
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb7
}

; serde_json::de::Deserializer<R>::new
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$3new17h15325ca982be86c9E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias nocapture sret dereferenceable(56), %"serde_json::read::StrRead"* noalias nocapture dereferenceable(24) %read) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_3 = alloca %"alloc::vec::Vec<u8>", align 8
  %_2 = alloca %"serde_json::read::StrRead", align 8
  %2 = bitcast %"serde_json::read::StrRead"* %_2 to i8*
  %3 = bitcast %"serde_json::read::StrRead"* %read to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h193ac73394eb716fE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24) %_3)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  %4 = bitcast %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %0 to %"serde_json::read::StrRead"*
  %5 = bitcast %"serde_json::read::StrRead"* %4 to i8*
  %6 = bitcast %"serde_json::read::StrRead"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %0, i32 0, i32 3
  %8 = bitcast %"alloc::vec::Vec<u8>"* %7 to i8*
  %9 = bitcast %"alloc::vec::Vec<u8>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
  %10 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %0, i32 0, i32 5
  store i8 -128, i8* %10, align 8
  ret void

bb2:                                              ; preds = %bb3
  %11 = bitcast { i8*, i32 }* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb3:                                              ; preds = %cleanup
  br label %bb2

cleanup:                                          ; preds = %start
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb3
}

; serde_json::de::Deserializer<R>::peek
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$4peek17heda9452678a2416aE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56)) unnamed_addr #1 {
start:
  %self = alloca %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, align 8
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %1, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8
  %2 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %_2 = bitcast %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %2 to %"serde_json::read::StrRead"*
; call <serde_json::read::StrRead as serde_json::read::Read>::peek
  call void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$4peek17hfc3d3cc0e9ebdf09E"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::read::StrRead"* align 8 dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde_json::de::Deserializer<R>::error
; Function Attrs: cold uwtable
define internal noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$5error17h608cc2aecfbde555E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56), %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %reason) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_5 = alloca %"serde_json::error::ErrorCode", align 8
  %self = alloca %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, align 8
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
  %2 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %_4 = bitcast %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %2 to %"serde_json::read::StrRead"*
; invoke <serde_json::read::StrRead as serde_json::read::Read>::position
  %3 = invoke { i64, i64 } @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$8position17h0de67cf19128ec6bE"(%"serde_json::read::StrRead"* noalias readonly align 8 dereferenceable(24) %_4)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb4, %bb5
  %4 = bitcast { i8*, i32 }* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb2:                                              ; preds = %start
  %_6 = extractvalue { i64, i64 } %3, 0
  %_7 = extractvalue { i64, i64 } %3, 1
  store i8 0, i8* %_8, align 1
  %10 = bitcast %"serde_json::error::ErrorCode"* %_5 to i8*
  %11 = bitcast %"serde_json::error::ErrorCode"* %reason to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
; invoke serde_json::error::Error::syntax
  %12 = invoke noalias align 8 dereferenceable(40) i64* @_ZN10serde_json5error5Error6syntax17h5970e7652e1e592cE(%"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_5, i64 %_6, i64 %_7)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret i64* %12

bb4:                                              ; preds = %bb5
  store i8 0, i8* %_8, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h61d59176afeb8a22E(%"serde_json::error::ErrorCode"* align 8 dereferenceable(24) %reason) #14
  br label %bb1

bb5:                                              ; preds = %cleanup
  %13 = load i8, i8* %_8, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb4, label %bb1

cleanup:                                          ; preds = %bb2, %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb5
}

; serde_json::de::Deserializer<R>::end_map
; Function Attrs: uwtable
define internal noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$7end_map17hd390008053535ac2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_21 = alloca %"serde_json::error::ErrorCode", align 8
  %_18 = alloca %"serde_json::error::ErrorCode", align 8
  %_15 = alloca %"serde_json::error::ErrorCode", align 8
  %_12 = alloca {}, align 1
  %_3 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_2 = alloca { i8, i8 }, align 1
  %1 = alloca i64*, align 8
; call serde_json::de::Deserializer<R>::parse_whitespace
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_3, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb1:                                              ; preds = %bb7
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %_5 = zext i1 %10 to i64
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !4
  %val.0 = trunc i8 %14 to i1
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 1
  %val.1 = load i8, i8* %15, align 1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 0
  %17 = zext i1 %val.0 to i8
  store i8 %17, i8* %16, align 1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1
  store i8 %val.1, i8* %18, align 1
  %19 = bitcast { i8, i8 }* %_2 to i8*
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = trunc i8 %20 to i1
  %_9 = zext i1 %21 to i64
  switch i64 %_9, label %bb13 [
    i64 0, label %bb11
    i64 1, label %bb12
  ]

bb5:                                              ; preds = %bb2
  %22 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %22, i32 0, i32 1
  %err = load i64*, i64** %23, align 8, !nonnull !2
  store i64* %err, i64** %1, align 8
  %24 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %25 = load i8, i8* %24, align 8, !range !4
  %26 = trunc i8 %25 to i1
  %_22 = zext i1 %26 to i64
  %27 = icmp eq i64 %_22, 1
  br i1 %27, label %bb20, label %bb21

bb6:                                              ; preds = %bb19, %bb20
  %28 = load i64*, i64** %1, align 8
  ret i64* %28

bb7:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3) #14
  br label %bb1

bb8:                                              ; preds = %bb12
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb14 unwind label %cleanup

bb9:                                              ; preds = %bb12
  %29 = bitcast %"serde_json::error::ErrorCode"* %_15 to i64*
  store i64 20, i64* %29, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %30 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_15)
          to label %bb15 unwind label %cleanup

bb10:                                             ; preds = %bb12
  %31 = bitcast %"serde_json::error::ErrorCode"* %_18 to i64*
  store i64 21, i64* %31, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %32 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_18)
          to label %bb16 unwind label %cleanup

bb11:                                             ; preds = %bb4
  %33 = bitcast %"serde_json::error::ErrorCode"* %_21 to i64*
  store i64 3, i64* %33, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %34 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_21)
          to label %bb17 unwind label %cleanup

bb12:                                             ; preds = %bb4
  %35 = bitcast { i8, i8 }* %_2 to %"core::option::Option<u8>::Some"*
  %36 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %35, i32 0, i32 1
  %37 = load i8, i8* %36, align 1
  switch i8 %37, label %bb10 [
    i8 125, label %bb8
    i8 44, label %bb9
  ]

bb13:                                             ; preds = %bb4
  unreachable

bb14:                                             ; preds = %bb8
  %38 = bitcast i64** %1 to %"core::result::Result<(), serde_json::error::Error>::Ok"*
  %39 = bitcast %"core::result::Result<(), serde_json::error::Error>::Ok"* %38 to {}*
  %40 = bitcast i64** %1 to {}**
  store {}* null, {}** %40, align 8
  br label %bb18

bb15:                                             ; preds = %bb9
  store i64* %30, i64** %1, align 8
  br label %bb18

bb16:                                             ; preds = %bb10
  store i64* %32, i64** %1, align 8
  br label %bb18

bb17:                                             ; preds = %bb11
  store i64* %34, i64** %1, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb14, %bb15, %bb16
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb6

bb20:                                             ; preds = %bb21, %bb5
  br label %bb6

bb21:                                             ; preds = %bb5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb20

cleanup:                                          ; preds = %bb11, %bb8, %bb9, %bb10
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb7
}

; serde_json::de::Deserializer<R>::end_seq
; Function Attrs: uwtable
define internal noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$7end_seq17h3ccaa04e00784a12E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_30 = alloca %"serde_json::error::ErrorCode", align 8
  %_27 = alloca %"serde_json::error::ErrorCode", align 8
  %_24 = alloca %"serde_json::error::ErrorCode", align 8
  %_21 = alloca %"serde_json::error::ErrorCode", align 8
  %_15 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_12 = alloca {}, align 1
  %_3 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_2 = alloca { i8, i8 }, align 1
  %1 = alloca i64*, align 8
; call serde_json::de::Deserializer<R>::parse_whitespace
  call void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_3, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
  br label %bb2

bb1:                                              ; preds = %bb7
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = trunc i8 %9 to i1
  %_5 = zext i1 %10 to i64
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !4
  %val.0 = trunc i8 %14 to i1
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %12, i32 0, i32 1
  %val.1 = load i8, i8* %15, align 1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 0
  %17 = zext i1 %val.0 to i8
  store i8 %17, i8* %16, align 1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1
  store i8 %val.1, i8* %18, align 1
  %19 = bitcast { i8, i8 }* %_2 to i8*
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = trunc i8 %20 to i1
  %_9 = zext i1 %21 to i64
  switch i64 %_9, label %bb13 [
    i64 0, label %bb11
    i64 1, label %bb12
  ]

bb5:                                              ; preds = %bb2
  %22 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %22, i32 0, i32 1
  %err = load i64*, i64** %23, align 8, !nonnull !2
  store i64* %err, i64** %1, align 8
  %24 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_3 to i8*
  %25 = load i8, i8* %24, align 8, !range !4
  %26 = trunc i8 %25 to i1
  %_31 = zext i1 %26 to i64
  %27 = icmp eq i64 %_31, 1
  br i1 %27, label %bb30, label %bb31

bb6:                                              ; preds = %bb29, %bb30
  %28 = load i64*, i64** %1, align 8
  ret i64* %28

bb7:                                              ; preds = %bb22, %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3) #14
  br label %bb1

bb8:                                              ; preds = %bb12
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb14 unwind label %cleanup

bb9:                                              ; preds = %bb12
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb15 unwind label %cleanup

bb10:                                             ; preds = %bb12
  %29 = bitcast %"serde_json::error::ErrorCode"* %_27 to i64*
  store i64 21, i64* %29, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %30 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_27)
          to label %bb26 unwind label %cleanup

bb11:                                             ; preds = %bb4
  %31 = bitcast %"serde_json::error::ErrorCode"* %_30 to i64*
  store i64 2, i64* %31, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %32 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_30)
          to label %bb27 unwind label %cleanup

bb12:                                             ; preds = %bb4
  %33 = bitcast { i8, i8 }* %_2 to %"core::option::Option<u8>::Some"*
  %34 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %33, i32 0, i32 1
  %35 = load i8, i8* %34, align 1
  switch i8 %35, label %bb10 [
    i8 93, label %bb8
    i8 44, label %bb9
  ]

bb13:                                             ; preds = %bb4
  unreachable

bb14:                                             ; preds = %bb8
  %36 = bitcast i64** %1 to %"core::result::Result<(), serde_json::error::Error>::Ok"*
  %37 = bitcast %"core::result::Result<(), serde_json::error::Error>::Ok"* %36 to {}*
  %38 = bitcast i64** %1 to {}**
  store {}* null, {}** %38, align 8
  br label %bb28

bb15:                                             ; preds = %bb9
; invoke serde_json::de::Deserializer<R>::parse_whitespace
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_15, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %self)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  %39 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_15 to i8*
  %40 = load i8, i8* %39, align 8, !range !4
  %41 = trunc i8 %40 to i1
  %_18 = zext i1 %41 to i64
  %42 = icmp eq i64 %_18, 0
  br i1 %42, label %bb19, label %bb18

bb17:                                             ; preds = %bb20
  %43 = bitcast %"serde_json::error::ErrorCode"* %_21 to i64*
  store i64 20, i64* %43, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %44 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_21)
          to label %bb21 unwind label %cleanup1

bb18:                                             ; preds = %bb20, %bb19, %bb16
  %45 = bitcast %"serde_json::error::ErrorCode"* %_24 to i64*
  store i64 21, i64* %45, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %46 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %self, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_24)
          to label %bb23 unwind label %cleanup1

bb19:                                             ; preds = %bb16
  %47 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_15 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %48 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %47, i32 0, i32 1
  %49 = bitcast { i8, i8 }* %48 to i8*
  %50 = load i8, i8* %49, align 1, !range !4
  %51 = trunc i8 %50 to i1
  %_17 = zext i1 %51 to i64
  %52 = icmp eq i64 %_17, 1
  br i1 %52, label %bb20, label %bb18

bb20:                                             ; preds = %bb19
  %53 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_15 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %54 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %53, i32 0, i32 1
  %55 = bitcast { i8, i8 }* %54 to %"core::option::Option<u8>::Some"*
  %56 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %55, i32 0, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 93
  br i1 %58, label %bb17, label %bb18

bb21:                                             ; preds = %bb17
  store i64* %44, i64** %1, align 8
  br label %bb24

bb22:                                             ; preds = %cleanup1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_15) #14
  br label %bb7

bb23:                                             ; preds = %bb18
  store i64* %46, i64** %1, align 8
  br label %bb24

bb24:                                             ; preds = %bb21, %bb23
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_15)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
  br label %bb28

bb26:                                             ; preds = %bb10
  store i64* %30, i64** %1, align 8
  br label %bb28

bb27:                                             ; preds = %bb11
  store i64* %32, i64** %1, align 8
  br label %bb28

bb28:                                             ; preds = %bb27, %bb14, %bb25, %bb26
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb29

bb29:                                             ; preds = %bb28
  br label %bb6

bb30:                                             ; preds = %bb31, %bb5
  br label %bb6

bb31:                                             ; preds = %bb5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_3)
  br label %bb30

cleanup:                                          ; preds = %bb11, %bb8, %bb24, %bb15, %bb9, %bb10
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  %61 = extractvalue { i8*, i32 } %59, 1
  %62 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %60, i8** %62, align 8
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %61, i32* %63, align 8
  br label %bb7

cleanup1:                                         ; preds = %bb17, %bb18
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  %66 = extractvalue { i8*, i32 } %64, 1
  %67 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %65, i8** %67, align 8
  %68 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %66, i32* %68, align 8
  br label %bb22
}

; serde_json::de::Deserializer<R>::eat_char
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56)) unnamed_addr #1 {
start:
  %self = alloca %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, align 8
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8
  %1 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %_3 = bitcast %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %1 to %"serde_json::read::StrRead"*
; call <serde_json::read::StrRead as serde_json::read::Read>::discard
  call void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$7discard17h0742ffeafbcca6d5E"(%"serde_json::read::StrRead"* align 8 dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde_json::de::Deserializer<R>::next_char
; Function Attrs: uwtable
define internal void @"_ZN10serde_json2de21Deserializer$LT$R$GT$9next_char17h0e00787cc80c5e1eE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56)) unnamed_addr #1 {
start:
  %self = alloca %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, align 8
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %1, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8
  %2 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %_2 = bitcast %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %2 to %"serde_json::read::StrRead"*
; call <serde_json::read::StrRead as serde_json::read::Read>::next
  call void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$4next17hd0a52c96ba920820E"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::read::StrRead"* align 8 dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde_json::de::from_str
; Function Attrs: uwtable
define internal void @_ZN10serde_json2de8from_str17h9e13a99f8f087c84E(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_2 = alloca %"serde_json::read::StrRead", align 8
; call serde_json::read::StrRead::new
  call void @_ZN10serde_json4read7StrRead3new17h55808fc1fd2f5736E(%"serde_json::read::StrRead"* noalias nocapture sret dereferenceable(24) %_2, [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
; call serde_json::de::from_trait
  call void @_ZN10serde_json2de10from_trait17h3a15270127c36777E(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, %"serde_json::read::StrRead"* noalias nocapture dereferenceable(24) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; serde_json::map::Map<alloc::string::String,serde_json::value::Value>::new
; Function Attrs: inlinehint uwtable
define internal void @"_ZN10serde_json3map59Map$LT$alloc..string..String$C$serde_json..value..Value$GT$3new17h8958f88244fd6d3cE"(%"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(24)) unnamed_addr #0 {
start:
  %_1 = alloca %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", align 8
; call alloc::collections::btree::map::BTreeMap<K,V>::new
  call void @"_ZN5alloc11collections5btree3map21BTreeMap$LT$K$C$V$GT$3new17h3291cd7fa7f87b66E"(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %0 to %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*
  %2 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %1 to i8*
  %3 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; serde_json::map::Map<alloc::string::String,serde_json::value::Value>::insert
; Function Attrs: inlinehint uwtable
define internal void @"_ZN10serde_json3map59Map$LT$alloc..string..String$C$serde_json..value..Value$GT$6insert17h7e829f3e8c5f4b24E"(%"core::option::Option<serde_json::value::Value>"* noalias nocapture sret dereferenceable(32), %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24), %"alloc::string::String"* noalias nocapture dereferenceable(24) %k, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %v) unnamed_addr #0 {
start:
  %_6 = alloca %"serde_json::value::Value", align 8
  %_5 = alloca %"alloc::string::String", align 8
  %self = alloca %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"*, align 8
  store %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %1, %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"** %self, align 8
  %2 = load %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"*, %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_4 = bitcast %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %2 to %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*
  %3 = bitcast %"alloc::string::String"* %_5 to i8*
  %4 = bitcast %"alloc::string::String"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast %"serde_json::value::Value"* %_6 to i8*
  %6 = bitcast %"serde_json::value::Value"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
; call alloc::collections::btree::map::BTreeMap<K,V>::insert
  call void @"_ZN5alloc11collections5btree3map21BTreeMap$LT$K$C$V$GT$6insert17hcfb7cb40a92c273aE"(%"core::option::Option<serde_json::value::Value>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %_4, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_5, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde_json::error::Error::fix_position
; Function Attrs: cold uwtable
define internal noalias align 8 dereferenceable(40) i64* @_ZN10serde_json5error5Error12fix_position17hccdd20e0785ef7c1E(i64* noalias align 8 dereferenceable(40), i64* noalias readonly align 8 dereferenceable(56) %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_7 = alloca %"serde_json::error::ErrorCode", align 8
  %_6 = alloca { [0 x i64], %"serde_json::error::ErrorCode", [0 x i64] }, align 8
  %2 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 0, i8* %_8, align 1
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_8, align 1
  store i8 1, i8* %_9, align 1
  %3 = bitcast i64** %self to %"serde_json::error::ErrorImpl"**
  %4 = load %"serde_json::error::ErrorImpl"*, %"serde_json::error::ErrorImpl"** %3, align 8, !nonnull !2
  %5 = getelementptr inbounds %"serde_json::error::ErrorImpl", %"serde_json::error::ErrorImpl"* %4, i32 0, i32 3
  %_4 = load i64, i64* %5, align 8
  %_3 = icmp eq i64 %_4, 0
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
  %6 = load i64*, i64** %self, align 8, !nonnull !2
  store i64* %6, i64** %2, align 8
  br label %bb4

bb2:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %7 = bitcast i64** %self to %"serde_json::error::ErrorImpl"**
  %8 = load %"serde_json::error::ErrorImpl"*, %"serde_json::error::ErrorImpl"** %7, align 8, !nonnull !2
  %9 = bitcast %"serde_json::error::ErrorImpl"* %8 to %"serde_json::error::ErrorCode"*
  %10 = bitcast %"serde_json::error::ErrorCode"* %_7 to i8*
  %11 = bitcast %"serde_json::error::ErrorCode"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
  %12 = bitcast { [0 x i64], %"serde_json::error::ErrorCode", [0 x i64] }* %_6 to %"serde_json::error::ErrorCode"*
  %13 = bitcast %"serde_json::error::ErrorCode"* %12 to i8*
  %14 = bitcast %"serde_json::error::ErrorCode"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = bitcast { [0 x i64], %"serde_json::error::ErrorCode", [0 x i64] }* %_6 to %"serde_json::error::ErrorCode"*
; invoke serde_json::de::Deserializer<R>::fix_position::{{closure}}
  %16 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$12fix_position28_$u7b$$u7b$closure$u7d$$u7d$17h2452be0badd59b4fE"(i64* noalias readonly align 8 dereferenceable(56) %f, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %15)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  store i64* %16, i64** %2, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %17 = load i8, i8* %_9, align 1, !range !4
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb4
  %19 = load i8, i8* %_8, align 1, !range !4
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb10, label %bb9

bb6:                                              ; preds = %bb7
  store i8 0, i8* %_8, align 1
  %21 = bitcast i64** %self to %"serde_json::error::ErrorImpl"**
  %22 = bitcast %"serde_json::error::ErrorImpl"** %21 to i64**
  %23 = load i64*, i64** %22, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h2dc0fdec5dcc27f8E(i64* nonnull %23) #14
  br label %bb11

bb7:                                              ; preds = %cleanup
  %24 = load i8, i8* %_8, align 1, !range !4
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb6, label %bb11

bb8:                                              ; preds = %bb4
  store i8 0, i8* %_9, align 1
  br label %bb5

bb9:                                              ; preds = %bb10, %bb5
  %26 = load i64*, i64** %2, align 8, !nonnull !2
  ret i64* %26

bb10:                                             ; preds = %bb5
  store i8 0, i8* %_8, align 1
  %27 = bitcast i64** %self to %"serde_json::error::ErrorImpl"**
  %28 = bitcast %"serde_json::error::ErrorImpl"** %27 to i64**
  %29 = load i64*, i64** %28, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h2dc0fdec5dcc27f8E(i64* nonnull %29)
  br label %bb9

bb11:                                             ; preds = %bb6, %bb7
  %30 = bitcast { i8*, i32 }* %1 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1
  resume { i8*, i32 } %35

cleanup:                                          ; preds = %bb2
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb7
}

; serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize
; Function Attrs: inlinehint uwtable
define internal void @"_ZN10serde_json5value2de77_$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$11deserialize17h6a070a70d67c12dbE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %deserializer) unnamed_addr #0 {
start:
  %_3 = alloca %"serde_json::value::de::{{impl}}::deserialize::ValueVisitor", align 1
; call <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_any
  call void @"_ZN93_$LT$$RF$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$15deserialize_any17ha1dd4f69d49ce814E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %deserializer)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde_json::value::Value::Number
; Function Attrs: uwtable
define internal void @_ZN10serde_json5value5Value6Number17h2bfe5d5abfb2853fE(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32), %"serde_json::number::Number"* noalias nocapture dereferenceable(16) %_1) unnamed_addr #1 {
start:
  %1 = bitcast %"serde_json::value::Value"* %0 to %"serde_json::value::Value::Number"*
  %2 = getelementptr inbounds %"serde_json::value::Value::Number", %"serde_json::value::Value::Number"* %1, i32 0, i32 1
  %3 = bitcast %"serde_json::number::Number"* %2 to i8*
  %4 = bitcast %"serde_json::number::Number"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast %"serde_json::value::Value"* %0 to i8*
  store i8 2, i8* %5, align 8
  ret void
}

; serde_json::value::index::<impl core::ops::index::Index<I> for serde_json::value::Value>::index
; Function Attrs: uwtable
define internal align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN10serde_json5value5index87_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$serde_json..value..Value$GT$5index17ha5c06c0c762387d7E"(%"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32) %self, [0 x i8]* noalias nonnull readonly align 1, i64) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %index = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %index, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %index, i32 0, i32 1
  store i64 %1, i64* %4, align 8
; invoke <&T as serde_json::value::index::Index>::index_into
  %5 = invoke align 8 dereferenceable_or_null(32) i64* @"_ZN57_$LT$$RF$T$u20$as$u20$serde_json..value..index..Index$GT$10index_into17h7dcf5a3b859d029fE"({ [0 x i8]*, i64 }* noalias readonly align 8 dereferenceable(16) %index, %"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32) %self)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %2 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

bb2:                                              ; preds = %start
; invoke core::option::Option<T>::unwrap_or
  %12 = invoke align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hd7503aacc58b0f80E"(i64* noalias readonly align 8 dereferenceable_or_null(32) %5, %"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32) @"_ZN10serde_json5value5index87_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$serde_json..value..Value$GT$5index4NULL17h6f0e269ee7495f91E")
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  br label %bb1

bb4:                                              ; preds = %bb2
  br label %bb5

bb5:                                              ; preds = %bb4
  ret %"serde_json::value::Value"* %12

cleanup:                                          ; preds = %bb2, %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb3
}

; serde_json::number::Number::from_f64
; Function Attrs: inlinehint uwtable
define internal void @_ZN10serde_json6number6Number8from_f6417h380606aa58927a8eE(%"core::option::Option<serde_json::number::Number>"* noalias nocapture sret dereferenceable(16), double %f) unnamed_addr #0 {
start:
  %_7 = alloca %"serde_json::number::N", align 8
  %_6 = alloca %"serde_json::number::Number", align 8
  %n = alloca %"serde_json::number::N", align 8
; call core::f64::<impl f64>::is_finite
  %1 = call zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9is_finite17h1397b05ce16fb738E"(double %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %1, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast %"core::option::Option<serde_json::number::Number>"* %0 to i64*
  store i64 3, i64* %2, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %3 = bitcast %"serde_json::number::N"* %n to %"serde_json::number::N::Float"*
  %4 = getelementptr inbounds %"serde_json::number::N::Float", %"serde_json::number::N::Float"* %3, i32 0, i32 1
  store double %f, double* %4, align 8
  %5 = bitcast %"serde_json::number::N"* %n to i64*
  store i64 2, i64* %5, align 8
  %6 = bitcast %"serde_json::number::N"* %_7 to i8*
  %7 = bitcast %"serde_json::number::N"* %n to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = bitcast %"serde_json::number::Number"* %_6 to %"serde_json::number::N"*
  %9 = bitcast %"serde_json::number::N"* %8 to i8*
  %10 = bitcast %"serde_json::number::N"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  %11 = bitcast %"core::option::Option<serde_json::number::Number>"* %0 to %"core::option::Option<serde_json::number::Number>::Some"*
  %12 = bitcast %"core::option::Option<serde_json::number::Number>::Some"* %11 to %"serde_json::number::Number"*
  %13 = bitcast %"serde_json::number::Number"* %12 to i8*
  %14 = bitcast %"serde_json::number::Number"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; <alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: uwtable
define internal void @"_ZN112_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h400e703e5dc58d8bE"(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* noalias nocapture sret dereferenceable(56), %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %_2.i8 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_2.i = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %2 = alloca { i8*, i32 }, align 8
  %_61 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_60 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_59 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_58 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %last_edge4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_56 = alloca %"serde_json::value::Value", align 8
  %_55 = alloca %"alloc::string::String", align 8
  %_54 = alloca { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, align 8
  %_53 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_52 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_51 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_50 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_48 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %v3 = alloca %"serde_json::value::Value", align 8
  %_42 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %k2 = alloca %"alloc::string::String", align 8
  %kv1 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_35 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_34 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_33 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_32 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_31 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %last_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_29 = alloca %"serde_json::value::Value", align 8
  %_28 = alloca %"alloc::string::String", align 8
  %_27 = alloca { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, align 8
  %_26 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_25 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_23 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %v = alloca %"serde_json::value::Value", align 8
  %_17 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %k = alloca %"alloc::string::String", align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %cur_handle = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %handle = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %self = alloca %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, align 8
  store %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %1, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8
  %3 = load %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %4 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %3, i32 0, i32 5
  %_3 = load i64, i64* %4, align 8
  %_2 = icmp eq i64 %_3, 0
  br i1 %_2, label %bb3, label %bb2

bb1:                                              ; preds = %bb13, %bb31
  %5 = bitcast { i8*, i32 }* %2 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
  %11 = load %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %12 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %11, i32 0, i32 5
  %13 = load %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %14 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %13, i32 0, i32 5
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, 1
  store i64 %16, i64* %12, align 8
  %17 = load %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_7 = bitcast %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %17 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
; call core::ptr::read
  call void @_ZN4core3ptr4read17he78c334b89e3473eE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %handle, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_7)
  br label %bb5

bb3:                                              ; preds = %start
  %18 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %0, i32 0, i32 1
  store i8 6, i8* %18, align 8
  br label %bb4

bb4:                                              ; preds = %bb18, %bb3
  ret void

bb5:                                              ; preds = %bb2
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_10 to i8*
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %handle to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17hb4ffb585ea9e7e24E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(40) %_9, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_10)
  br label %bb6

bb6:                                              ; preds = %bb5
  %21 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_9 to i64*
  %_11 = load i64, i64* %21, align 8, !range !1
  switch i64 %_11, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb19
  ]

bb7:                                              ; preds = %bb6
  unreachable

bb8:                                              ; preds = %bb6
  %22 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_9 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Ok"*
  %23 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Ok"* %22, i32 0, i32 1
  %24 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %kv to i8*
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,HandleType>::reborrow
  call void @"_ZN5alloc11collections5btree4node104Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$HandleType$GT$8reborrow17h51c8b586dd38f606E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %_17, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias readonly align 8 dereferenceable(32) %kv)
  br label %bb9

bb9:                                              ; preds = %bb8
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv
  %26 = call { i64*, i64* } @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$7into_kv17ha7706366f2b45d63E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %_17)
  %27 = extractvalue { i64*, i64* } %26, 0
  %28 = extractvalue { i64*, i64* } %26, 1
  br label %bb10

bb10:                                             ; preds = %bb9
  %_15 = bitcast i64* %27 to %"alloc::string::String"*
; call core::ptr::read
  call void @_ZN4core3ptr4read17h8d34a8e0c038c5faE(%"alloc::string::String"* noalias nocapture sret dereferenceable(24) %k, %"alloc::string::String"* %_15)
  br label %bb11

bb11:                                             ; preds = %bb10
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,HandleType>::reborrow
  invoke void @"_ZN5alloc11collections5btree4node104Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$HandleType$GT$8reborrow17h51c8b586dd38f606E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %_23, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias readonly align 8 dereferenceable(32) %kv)
          to label %bb12 unwind label %cleanup6

bb12:                                             ; preds = %bb11
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv
  %29 = invoke { i64*, i64* } @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$7into_kv17ha7706366f2b45d63E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %_23)
          to label %bb14 unwind label %cleanup6

bb13:                                             ; preds = %bb17, %cleanup6
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %k) #14
  br label %bb1

bb14:                                             ; preds = %bb12
  %30 = extractvalue { i64*, i64* } %29, 0
  %31 = extractvalue { i64*, i64* } %29, 1
  %_21 = bitcast i64* %31 to %"serde_json::value::Value"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h0429cf43aa8c9b66E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %v, %"serde_json::value::Value"* %_21)
          to label %bb15 unwind label %cleanup6

bb15:                                             ; preds = %bb14
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_26 to i8*
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %kv to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
  invoke void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h6236f15e140e8575E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_25, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %_26)
          to label %bb16 unwind label %cleanup7

bb16:                                             ; preds = %bb15
  %34 = load %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %35 = bitcast %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %34 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %36 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %35 to i8*
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 32, i1 false)
  %38 = bitcast %"alloc::string::String"* %_28 to i8*
  %39 = bitcast %"alloc::string::String"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false)
  %40 = bitcast %"serde_json::value::Value"* %_29 to i8*
  %41 = bitcast %"serde_json::value::Value"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false)
  %42 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_27 to %"alloc::string::String"*
  %43 = bitcast %"alloc::string::String"* %42 to i8*
  %44 = bitcast %"alloc::string::String"* %_28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false)
  %45 = getelementptr inbounds { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_27, i32 0, i32 3
  %46 = bitcast %"serde_json::value::Value"* %45 to i8*
  %47 = bitcast %"serde_json::value::Value"* %_29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 32, i1 false)
  %48 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %0 to %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"*
  %49 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"* %48 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %50 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %49 to i8*
  %51 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 56, i1 false)
  br label %bb18

bb17:                                             ; preds = %cleanup7
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %v) #14
  br label %bb13

bb18:                                             ; preds = %bb16, %bb37
  br label %bb4

bb19:                                             ; preds = %bb6
  %52 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_9 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Err"*
  %53 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Err"* %52, i32 0, i32 1
  %54 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %last_edge to i8*
  %55 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 32, i1 false)
  %56 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_33 to i8*
  %57 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %last_edge to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  call void @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h27905051ef258e97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %_32, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_33)
  br label %bb20

bb20:                                             ; preds = %bb19
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::deallocate_and_ascend
  call void @"_ZN5alloc11collections5btree4node117NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$21deallocate_and_ascend17h103a691c078c7681E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %_31, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_32)
  br label %bb21

bb21:                                             ; preds = %bb20
  %58 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_2.i to i8*
  %59 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 32, i1 false), !noalias !5
; call core::option::Option<T>::unwrap_or_else
  call void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17ha9ac15649e91aeb4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %cur_handle, %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture dereferenceable(32) %_2.i), !noalias !8
  br label %bb22

bb22:                                             ; preds = %bb21
  br label %bb23

bb23:                                             ; preds = %bb41, %bb22
  %60 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_35 to i8*
  %61 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %cur_handle to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17hbca33383394bb7ebE"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(40) %_34, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_35)
  br label %bb24

bb24:                                             ; preds = %bb23
  %62 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_34 to i64*
  %_36 = load i64, i64* %62, align 8, !range !1
  switch i64 %_36, label %bb25 [
    i64 0, label %bb26
    i64 1, label %bb38
  ]

bb25:                                             ; preds = %bb24
  unreachable

bb26:                                             ; preds = %bb24
  %63 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_34 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Ok"*
  %64 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Ok"* %63, i32 0, i32 1
  %65 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %kv1 to i8*
  %66 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,HandleType>::reborrow
  call void @"_ZN5alloc11collections5btree4node104Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$HandleType$GT$8reborrow17h2ed16b12ecb7c4e7E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %_42, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias readonly align 8 dereferenceable(32) %kv1)
  br label %bb27

bb27:                                             ; preds = %bb26
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv
  %67 = call { i64*, i64* } @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$7into_kv17h2c36ae452f108b3dE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %_42)
  %68 = extractvalue { i64*, i64* } %67, 0
  %69 = extractvalue { i64*, i64* } %67, 1
  br label %bb28

bb28:                                             ; preds = %bb27
  %_40 = bitcast i64* %68 to %"alloc::string::String"*
; call core::ptr::read
  call void @_ZN4core3ptr4read17h8d34a8e0c038c5faE(%"alloc::string::String"* noalias nocapture sret dereferenceable(24) %k2, %"alloc::string::String"* %_40)
  br label %bb29

bb29:                                             ; preds = %bb28
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,HandleType>::reborrow
  invoke void @"_ZN5alloc11collections5btree4node104Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$HandleType$GT$8reborrow17h2ed16b12ecb7c4e7E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %_48, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias readonly align 8 dereferenceable(32) %kv1)
          to label %bb30 unwind label %cleanup

bb30:                                             ; preds = %bb29
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv
  %70 = invoke { i64*, i64* } @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$7into_kv17h2c36ae452f108b3dE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %_48)
          to label %bb32 unwind label %cleanup

bb31:                                             ; preds = %bb35, %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %k2) #14
  br label %bb1

bb32:                                             ; preds = %bb30
  %71 = extractvalue { i64*, i64* } %70, 0
  %72 = extractvalue { i64*, i64* } %70, 1
  %_46 = bitcast i64* %72 to %"serde_json::value::Value"*
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h0429cf43aa8c9b66E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %v3, %"serde_json::value::Value"* %_46)
          to label %bb33 unwind label %cleanup

bb33:                                             ; preds = %bb32
  %73 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_53 to i8*
  %74 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %kv1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
  invoke void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17hf0d62333859a10efE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_52, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %_53)
          to label %bb34 unwind label %cleanup5

bb34:                                             ; preds = %bb33
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  invoke void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h01cca967b8c82336E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_51, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_52)
          to label %bb36 unwind label %cleanup5

bb35:                                             ; preds = %cleanup5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %v3) #14
  br label %bb31

bb36:                                             ; preds = %bb34
; invoke alloc::collections::btree::map::first_leaf_edge
  invoke void @_ZN5alloc11collections5btree3map15first_leaf_edge17hf7a35ed829095ca7E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_50, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_51)
          to label %bb37 unwind label %cleanup5

bb37:                                             ; preds = %bb36
  %75 = load %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %76 = bitcast %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %75 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %77 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %76 to i8*
  %78 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 32, i1 false)
  %79 = bitcast %"alloc::string::String"* %_55 to i8*
  %80 = bitcast %"alloc::string::String"* %k2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false)
  %81 = bitcast %"serde_json::value::Value"* %_56 to i8*
  %82 = bitcast %"serde_json::value::Value"* %v3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 32, i1 false)
  %83 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_54 to %"alloc::string::String"*
  %84 = bitcast %"alloc::string::String"* %83 to i8*
  %85 = bitcast %"alloc::string::String"* %_55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false)
  %86 = getelementptr inbounds { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_54, i32 0, i32 3
  %87 = bitcast %"serde_json::value::Value"* %86 to i8*
  %88 = bitcast %"serde_json::value::Value"* %_56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 32, i1 false)
  %89 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %0 to %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"*
  %90 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"* %89 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %91 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %90 to i8*
  %92 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 56, i1 false)
  br label %bb18

bb38:                                             ; preds = %bb24
  %93 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_34 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Err"*
  %94 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Err"* %93, i32 0, i32 1
  %95 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %last_edge4 to i8*
  %96 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 32, i1 false)
  %97 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_61 to i8*
  %98 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %last_edge4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  call void @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h9f64cb8d9a510b3dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_60, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_61)
  br label %bb39

bb39:                                             ; preds = %bb38
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::deallocate_and_ascend
  call void @"_ZN5alloc11collections5btree4node121NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$21deallocate_and_ascend17hfdaad5e2355dadfcE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %_59, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_60)
  br label %bb40

bb40:                                             ; preds = %bb39
  %99 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_2.i8 to i8*
  %100 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 32, i1 false), !noalias !10
; call core::option::Option<T>::unwrap_or_else
  call void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17ha9ac15649e91aeb4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_58, %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture dereferenceable(32) %_2.i8), !noalias !13
  br label %bb41

bb41:                                             ; preds = %bb40
  %101 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %cur_handle to i8*
  %102 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 32, i1 false)
  br label %bb23

cleanup:                                          ; preds = %bb32, %bb30, %bb29
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  %105 = extractvalue { i8*, i32 } %103, 1
  %106 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %104, i8** %106, align 8
  %107 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %105, i32* %107, align 8
  br label %bb31

cleanup5:                                         ; preds = %bb36, %bb34, %bb33
  %108 = landingpad { i8*, i32 }
          cleanup
  %109 = extractvalue { i8*, i32 } %108, 0
  %110 = extractvalue { i8*, i32 } %108, 1
  %111 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %109, i8** %111, align 8
  %112 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %110, i32* %112, align 8
  br label %bb35

cleanup6:                                         ; preds = %bb14, %bb12, %bb11
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  %115 = extractvalue { i8*, i32 } %113, 1
  %116 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %114, i8** %116, align 8
  %117 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %115, i32* %117, align 8
  br label %bb13

cleanup7:                                         ; preds = %bb15
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  %120 = extractvalue { i8*, i32 } %118, 1
  %121 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %119, i8** %121, align 8
  %122 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %120, i32* %122, align 8
  br label %bb17
}

; <alloc::collections::btree::map::BTreeMap<K,V> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: uwtable
define internal void @"_ZN115_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha2ad2ae7d338588cE"(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(72), %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_20 = alloca i8, align 1
  %_18 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_17 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_16 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_15 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_14 = alloca %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", align 8
  %root2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %root1 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  store i8 0, i8* %_20, align 1
  store i8 1, i8* %_20, align 1
  %_6 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %self to { i64*, i64 }*
; invoke core::ptr::read
  %2 = invoke { i64*, i64 } @_ZN4core3ptr4read17h41d3e3c3373d74c5E({ i64*, i64 }* %_6)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb9, %bb10
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  %9 = extractvalue { i64*, i64 } %2, 0
  %10 = extractvalue { i64*, i64 } %2, 1
; invoke alloc::collections::btree::node::Root<K,V>::into_ref
  invoke void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$8into_ref17hf046e6d089050f06E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %root1, i64* nonnull %9, i64 %10)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_11 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %self to { i64*, i64 }*
; invoke core::ptr::read
  %11 = invoke { i64*, i64 } @_ZN4core3ptr4read17h41d3e3c3373d74c5E({ i64*, i64 }* %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %12 = extractvalue { i64*, i64 } %11, 0
  %13 = extractvalue { i64*, i64 } %11, 1
; invoke alloc::collections::btree::node::Root<K,V>::into_ref
  invoke void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$8into_ref17hf046e6d089050f06E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %root2, i64* nonnull %12, i64 %13)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %14 = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %self, i32 0, i32 3
  %len = load i64, i64* %14, align 8
  store i8 0, i8* %_20, align 1
  %15 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %_14 to i8*
  %16 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
; invoke core::mem::forget
  invoke void @_ZN4core3mem6forget17h7b9416a6430bef4eE(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* noalias nocapture dereferenceable(24) %_14)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %17 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_16 to i8*
  %18 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %root1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false)
; invoke alloc::collections::btree::map::first_leaf_edge
  invoke void @_ZN5alloc11collections5btree3map15first_leaf_edge17hf7a35ed829095ca7E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_15, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_16)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %19 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_18 to i8*
  %20 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %root2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
; invoke alloc::collections::btree::map::last_leaf_edge
  invoke void @_ZN5alloc11collections5btree3map14last_leaf_edge17h2aac757d4aad9563E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_17, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_18)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %21 = bitcast %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %0 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %22 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %21 to i8*
  %23 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false)
  %24 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %0, i32 0, i32 3
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %24 to i8*
  %26 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false)
  %27 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %0, i32 0, i32 5
  store i64 %len, i64* %27, align 8
  ret void

bb9:                                              ; preds = %bb10
  store i8 0, i8* %_20, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h5538adda2a3dd408E(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %self) #14
  br label %bb1

bb10:                                             ; preds = %cleanup
  %28 = load i8, i8* %_20, align 1, !range !4
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb9, label %bb1

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %start
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb10
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h03357336292fe771E"(i64* nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h3d9c5e2b1907df05E"(i64* nonnull %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h7074b409b6c7cbceE"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint uwtable
define internal nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h1ffab30719b4bf3dE"(i8* nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha970c2ca3f55878cE"(i8* nonnull %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1ad10f6baeaaf316E"(i8* %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h7a43e202f2a069c3E"(i64* nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call %"serde_json::value::Value"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h05f232026ed3a42cE"(i64* nonnull %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0af8cab70beb15b2E"(%"serde_json::value::Value"* %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h9c734cddcbc898bcE"(i64* nonnull %unique) unnamed_addr #0 {
start:
; call core::ptr::unique::Unique<T>::as_ptr
  %0 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd4bc0c0e7c063ec1E"(i64* nonnull %unique)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hac6f653e8a5f70e3E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha49752030e91a438E"(i64* nonnull %p) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call %"serde_json::value::Value"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h56333427f3e1963bE"(i64* nonnull %p)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5b6b636cdc5f8cc5E"(%"serde_json::value::Value"* %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hbd8484c9d00fa41bE"(i64* nonnull %p) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %p)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbbe03009970db42dE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint uwtable
define internal nonnull i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17he83753416fa2495bE"(i8* nonnull %p) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h82dd1e7d1718a41dE"(i8* nonnull %p)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hebb26786d11a1a0dE"(i8* %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_bool
; Function Attrs: inlinehint uwtable
define internal void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$10visit_bool17h01fcd1555bd518d1E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), i1 zeroext %value) unnamed_addr #0 {
start:
  %_3 = alloca %"serde_json::value::Value", align 8
  %1 = bitcast %"serde_json::value::Value"* %_3 to %"serde_json::value::Value::Bool"*
  %2 = getelementptr inbounds %"serde_json::value::Value::Bool", %"serde_json::value::Value::Bool"* %1, i32 0, i32 1
  %3 = zext i1 %value to i8
  store i8 %3, i8* %2, align 1
  %4 = bitcast %"serde_json::value::Value"* %_3 to i8*
  store i8 1, i8* %4, align 8
  %5 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %6 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %5, i32 0, i32 1
  %7 = bitcast %"serde_json::value::Value"* %6 to i8*
  %8 = bitcast %"serde_json::value::Value"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %9, align 8
  ret void
}

; <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_unit
; Function Attrs: inlinehint uwtable
define internal void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$10visit_unit17hb891b036359f07cfE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40)) unnamed_addr #0 {
start:
  %_2 = alloca %"serde_json::value::Value", align 8
  %1 = bitcast %"serde_json::value::Value"* %_2 to i8*
  store i8 0, i8* %1, align 8
  %2 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %"serde_json::value::Value"* %3 to i8*
  %5 = bitcast %"serde_json::value::Value"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false)
  %6 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %6, align 8
  ret void
}

; <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_string
; Function Attrs: inlinehint uwtable
define internal void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$12visit_string17h6005262e9b1fe1efE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), %"alloc::string::String"* noalias nocapture dereferenceable(24) %value) unnamed_addr #0 {
start:
  %_4 = alloca %"alloc::string::String", align 8
  %_3 = alloca %"serde_json::value::Value", align 8
  %1 = bitcast %"alloc::string::String"* %_4 to i8*
  %2 = bitcast %"alloc::string::String"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"serde_json::value::Value"* %_3 to %"serde_json::value::Value::String"*
  %4 = getelementptr inbounds %"serde_json::value::Value::String", %"serde_json::value::Value::String"* %3, i32 0, i32 1
  %5 = bitcast %"alloc::string::String"* %4 to i8*
  %6 = bitcast %"alloc::string::String"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = bitcast %"serde_json::value::Value"* %_3 to i8*
  store i8 3, i8* %7, align 8
  %8 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %9 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %8, i32 0, i32 1
  %10 = bitcast %"serde_json::value::Value"* %9 to i8*
  %11 = bitcast %"serde_json::value::Value"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false)
  %12 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %12, align 8
  ret void
}

; <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_f64
; Function Attrs: inlinehint uwtable
define internal void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_f6417h5653e63d5c357d8aE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), double %value) unnamed_addr #0 {
start:
  %_6 = alloca %"serde_json::value::Value", align 8
  %_4 = alloca %"core::option::Option<serde_json::number::Number>", align 8
  %_3 = alloca %"serde_json::value::Value", align 8
; call serde_json::number::Number::from_f64
  call void @_ZN10serde_json6number6Number8from_f6417h380606aa58927a8eE(%"core::option::Option<serde_json::number::Number>"* noalias nocapture sret dereferenceable(16) %_4, double %value)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"serde_json::value::Value"* %_6 to i8*
  store i8 0, i8* %1, align 8
; call core::option::Option<T>::map_or
  call void @"_ZN4core6option15Option$LT$T$GT$6map_or17h92c906a14441369bE"(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %_3, %"core::option::Option<serde_json::number::Number>"* noalias nocapture dereferenceable(16) %_4, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_6)
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %3 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %2, i32 0, i32 1
  %4 = bitcast %"serde_json::value::Value"* %3 to i8*
  %5 = bitcast %"serde_json::value::Value"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false)
  %6 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %6, align 8
  ret void
}

; <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_i64
; Function Attrs: inlinehint uwtable
define internal void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_i6417h9ce7ec6c7da90479E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), i64 %value) unnamed_addr #0 {
start:
  %_4 = alloca %"serde_json::number::Number", align 8
  %_3 = alloca %"serde_json::value::Value", align 8
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hfc84940b10fa1e26E"(%"serde_json::number::Number"* noalias nocapture sret dereferenceable(16) %_4, i64 %value)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"serde_json::value::Value"* %_3 to %"serde_json::value::Value::Number"*
  %2 = getelementptr inbounds %"serde_json::value::Value::Number", %"serde_json::value::Value::Number"* %1, i32 0, i32 1
  %3 = bitcast %"serde_json::number::Number"* %2 to i8*
  %4 = bitcast %"serde_json::number::Number"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast %"serde_json::value::Value"* %_3 to i8*
  store i8 2, i8* %5, align 8
  %6 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %6, i32 0, i32 1
  %8 = bitcast %"serde_json::value::Value"* %7 to i8*
  %9 = bitcast %"serde_json::value::Value"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %10, align 8
  ret void
}

; <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_map
; Function Attrs: uwtable
define internal void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_map17hd6b142e5a6dcb4a3E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), i64* align 8 dereferenceable(56), i1 zeroext) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_49 = alloca i8, align 1
  %_48 = alloca i8, align 1
  %_47 = alloca i8, align 1
  %_46 = alloca i8, align 1
  %_45 = alloca i8, align 1
  %_44 = alloca i8, align 1
  %_43 = alloca %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>", align 8
  %_42 = alloca %"serde_json::value::Value", align 8
  %_41 = alloca %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>", align 8
  %_40 = alloca %"serde_json::value::Value", align 8
  %_39 = alloca %"serde_json::value::Value", align 8
  %_38 = alloca %"alloc::string::String", align 8
  %_36 = alloca %"core::option::Option<serde_json::value::Value>", align 8
  %value = alloca %"serde_json::value::Value", align 8
  %key = alloca %"alloc::string::String", align 8
  %val2 = alloca %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", align 8
  %_27 = alloca %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>", align 8
  %_26 = alloca %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", align 8
  %val1 = alloca %"serde_json::value::Value", align 8
  %_20 = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %_19 = alloca %"serde_json::value::Value", align 8
  %_18 = alloca %"alloc::string::String", align 8
  %_16 = alloca %"core::option::Option<serde_json::value::Value>", align 8
  %values = alloca %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>", align 8
  %first_key = alloca %"alloc::string::String", align 8
  %val = alloca %"core::option::Option<serde_json::value::de::KeyClass>", align 8
  %_7 = alloca %"serde_json::value::de::KeyClassifier", align 1
  %_5 = alloca %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>", align 8
  %_4 = alloca %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>", align 8
  %_3 = alloca %"core::option::Option<serde_json::value::de::KeyClass>", align 8
  %visitor = alloca { i64*, i8 }, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %visitor, i32 0, i32 0
  store i64* %1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %visitor, i32 0, i32 1
  %6 = zext i1 %2 to i8
  store i8 %6, i8* %5, align 8
  store i8 0, i8* %_49, align 1
  store i8 0, i8* %_44, align 1
  store i8 0, i8* %_48, align 1
  store i8 0, i8* %_47, align 1
  store i8 0, i8* %_46, align 1
  store i8 0, i8* %_45, align 1
; invoke <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_key_seed
  invoke void @"_ZN75_$LT$serde_json..de..MapAccess$LT$R$GT$$u20$as$u20$serde..de..MapAccess$GT$13next_key_seed17h3bf7b7747af172e1E"(%"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %_5, { i64*, i8 }* align 8 dereferenceable(16) %visitor)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %7 = bitcast { i8*, i32 }* %3 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb2:                                              ; preds = %start
; invoke <core::result::Result<T,E> as core::ops::try::Try>::into_result
  invoke void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc50229822cca77deE"(%"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %_4, %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* noalias nocapture dereferenceable(32) %_5)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %bb41, %bb40, %bb43, %bb42, %cleanup
  br label %bb1

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_44, align 1
  store i8 1, i8* %_45, align 1
  %13 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to i64*
  %_8 = load i64, i64* %13, align 8, !range !1
  switch i64 %_8, label %bb6 [
    i64 0, label %bb12
    i64 1, label %bb7
  ]

bb5:                                              ; preds = %bb47, %bb46, %bb48, %cleanup3
  %14 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to i64*
  %_50 = load i64, i64* %14, align 8, !range !1
  %15 = icmp eq i64 %_50, 0
  br i1 %15, label %bb40, label %bb42

bb6:                                              ; preds = %bb4
  unreachable

bb7:                                              ; preds = %bb4
  store i8 0, i8* %_45, align 1
  %16 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %17 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %16, i32 0, i32 1
  %err = load i64*, i64** %17, align 8, !nonnull !2
; invoke <T as core::convert::From<T>>::from
  %18 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb04c24f980f8caabE"(i64* noalias align 8 dereferenceable(40) %err)
          to label %bb9 unwind label %cleanup3

bb8:                                              ; preds = %bb82, %bb11
  ret void

bb9:                                              ; preds = %bb7
; invoke <core::result::Result<T,E> as core::ops::try::Try>::from_error
  invoke void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h016c2ca5f432e54bE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, i64* noalias align 8 dereferenceable(40) %18)
          to label %bb10 unwind label %cleanup3

bb10:                                             ; preds = %bb9
  %19 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to i64*
  %_51 = load i64, i64* %19, align 8, !range !1
  %20 = icmp eq i64 %_51, 0
  br i1 %20, label %bb45, label %bb44

bb11:                                             ; preds = %bb61, %bb44
  br label %bb8

bb12:                                             ; preds = %bb4
  store i8 0, i8* %_44, align 1
  %21 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"*
  %22 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"* %21, i32 0, i32 1
  %23 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %val to i8*
  %24 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false)
  store i8 1, i8* %_46, align 1
  %25 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to i8*
  %26 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false)
  %27 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to {}**
  %28 = load {}*, {}** %27, align 8
  %29 = icmp ule {}* %28, null
  %_13 = select i1 %29, i64 0, i64 1
  switch i64 %_13, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ]

bb13:                                             ; preds = %bb12
; invoke serde_json::map::Map<alloc::string::String,serde_json::value::Value>::new
  invoke void @"_ZN10serde_json3map59Map$LT$alloc..string..String$C$serde_json..value..Value$GT$3new17h8958f88244fd6d3cE"(%"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(24) %_43)
          to label %bb38 unwind label %cleanup12

bb14:                                             ; preds = %bb12
  unreachable

bb15:                                             ; preds = %bb12
  store i8 0, i8* %_46, align 1
  store i8 1, i8* %_47, align 1
  %30 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to %"core::option::Option<serde_json::value::de::KeyClass>::Some"*
  %31 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>::Some"* %30 to %"serde_json::value::de::KeyClass::Map"*
  %32 = bitcast %"serde_json::value::de::KeyClass::Map"* %31 to %"alloc::string::String"*
  %33 = bitcast %"alloc::string::String"* %first_key to i8*
  %34 = bitcast %"alloc::string::String"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false)
; invoke serde_json::map::Map<alloc::string::String,serde_json::value::Value>::new
  invoke void @"_ZN10serde_json3map59Map$LT$alloc..string..String$C$serde_json..value..Value$GT$3new17h8958f88244fd6d3cE"(%"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(24) %values)
          to label %bb16 unwind label %cleanup4

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_47, align 1
  %35 = bitcast %"alloc::string::String"* %_18 to i8*
  %36 = bitcast %"alloc::string::String"* %first_key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false)
; invoke serde::de::MapAccess::next_value
  invoke void @_ZN5serde2de9MapAccess10next_value17h6cd2067e24e2a08bE(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %_20, { i64*, i8 }* align 8 dereferenceable(16) %visitor)
          to label %bb17 unwind label %cleanup5

bb17:                                             ; preds = %bb16
  store i8 1, i8* %_48, align 1
  store i8 1, i8* %_49, align 1
  %37 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to i64*
  %_22 = load i64, i64* %37, align 8, !range !1
  switch i64 %_22, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb23
  ]

bb18:                                             ; preds = %bb66, %bb32, %bb53, %bb52, %bb55, %bb54, %cleanup8, %bb19
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hb3f050d7616e3382E(%"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %values) #14
  br label %bb51

bb19:                                             ; preds = %cleanup5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %_18) #14
  br label %bb18

bb20:                                             ; preds = %bb17
  unreachable

bb21:                                             ; preds = %bb17
  store i8 0, i8* %_49, align 1
  %38 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %39 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %38, i32 0, i32 1
  %40 = bitcast %"serde_json::value::Value"* %val1 to i8*
  %41 = bitcast %"serde_json::value::Value"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false)
  %42 = bitcast %"serde_json::value::Value"* %_19 to i8*
  %43 = bitcast %"serde_json::value::Value"* %val1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false)
; invoke serde_json::map::Map<alloc::string::String,serde_json::value::Value>::insert
  invoke void @"_ZN10serde_json3map59Map$LT$alloc..string..String$C$serde_json..value..Value$GT$6insert17h7e829f3e8c5f4b24E"(%"core::option::Option<serde_json::value::Value>"* noalias nocapture sret dereferenceable(32) %_16, %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %values, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_18, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_19)
          to label %bb27 unwind label %cleanup7

bb22:                                             ; preds = %cleanup7
  %44 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to i64*
  %_54 = load i64, i64* %44, align 8, !range !1
  %45 = icmp eq i64 %_54, 0
  br i1 %45, label %bb52, label %bb54

bb23:                                             ; preds = %bb17
  store i8 0, i8* %_48, align 1
  %46 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %47 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %46, i32 0, i32 1
  %err6 = load i64*, i64** %47, align 8, !nonnull !2
  %48 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %49 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %48, i32 0, i32 1
  store i64* %err6, i64** %49, align 8
  %50 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %50, align 8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %_18)
          to label %bb24 unwind label %cleanup7

bb24:                                             ; preds = %bb23
  %51 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to i64*
  %_55 = load i64, i64* %51, align 8, !range !1
  %52 = icmp eq i64 %_55, 0
  br i1 %52, label %bb57, label %bb56

bb25:                                             ; preds = %bb67, %bb56
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hb3f050d7616e3382E(%"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %values)
          to label %bb26 unwind label %cleanup4

bb26:                                             ; preds = %bb25
  store i8 0, i8* %_47, align 1
  %53 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to {}**
  %54 = load {}*, {}** %53, align 8
  %55 = icmp ule {}* %54, null
  %_57 = select i1 %55, i64 0, i64 1
  %56 = icmp eq i64 %_57, 1
  br i1 %56, label %bb59, label %bb60

bb27:                                             ; preds = %bb21
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h598a848fad10f46eE(%"core::option::Option<serde_json::value::Value>"* align 8 dereferenceable(32) %_16)
          to label %bb65 unwind label %cleanup7

bb28:                                             ; preds = %bb76, %bb63
; invoke serde::de::MapAccess::next_entry
  invoke void @_ZN5serde2de9MapAccess10next_entry17h1dee50ad54a8953eE(%"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(64) %_27, { i64*, i8 }* align 8 dereferenceable(16) %visitor)
          to label %bb29 unwind label %cleanup8

bb29:                                             ; preds = %bb28
  %57 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to i64*
  %_29 = load i64, i64* %57, align 8, !range !1
  switch i64 %_29, label %bb30 [
    i64 0, label %bb31
    i64 1, label %bb33
  ]

bb30:                                             ; preds = %bb29
  unreachable

bb31:                                             ; preds = %bb29
  %58 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok"*
  %59 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok"* %58, i32 0, i32 1
  %60 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %val2 to i8*
  %61 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 56, i1 false)
  %62 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_26 to i8*
  %63 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %val2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 56, i1 false)
  %64 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_26, i32 0, i32 1
  %65 = load i8, i8* %64, align 8, !range !15
  %66 = sub i8 %65, 6
  %67 = icmp ule i8 %66, 0
  %_33 = select i1 %67, i64 0, i64 1
  %68 = icmp eq i64 %_33, 1
  br i1 %68, label %bb35, label %bb34

bb32:                                             ; preds = %bb69, %bb70, %cleanup10
  %69 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to i64*
  %_60 = load i64, i64* %69, align 8, !range !1
  %70 = icmp eq i64 %_60, 0
  br i1 %70, label %bb18, label %bb66

bb33:                                             ; preds = %bb29
  %71 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"*
  %72 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"* %71, i32 0, i32 1
  %err9 = load i64*, i64** %72, align 8, !nonnull !2
  %73 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %74 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %73, i32 0, i32 1
  store i64* %err9, i64** %74, align 8
  %75 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %75, align 8
  %76 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to i64*
  %_61 = load i64, i64* %76, align 8, !range !1
  %77 = icmp eq i64 %_61, 0
  br i1 %77, label %bb68, label %bb67

bb34:                                             ; preds = %bb31
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hef849281d57fefd4E(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* align 8 dereferenceable(56) %_26)
          to label %bb75 unwind label %cleanup10

bb35:                                             ; preds = %bb31
  %78 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_26 to %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"*
  %79 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"* %78 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %80 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %79 to %"alloc::string::String"*
  %81 = bitcast %"alloc::string::String"* %key to i8*
  %82 = bitcast %"alloc::string::String"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false)
  %83 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_26 to %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"*
  %84 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"* %83 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %85 = getelementptr inbounds { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %84, i32 0, i32 3
  %86 = bitcast %"serde_json::value::Value"* %value to i8*
  %87 = bitcast %"serde_json::value::Value"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 32, i1 false)
  %88 = bitcast %"alloc::string::String"* %_38 to i8*
  %89 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false)
  %90 = bitcast %"serde_json::value::Value"* %_39 to i8*
  %91 = bitcast %"serde_json::value::Value"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 32, i1 false)
; invoke serde_json::map::Map<alloc::string::String,serde_json::value::Value>::insert
  invoke void @"_ZN10serde_json3map59Map$LT$alloc..string..String$C$serde_json..value..Value$GT$6insert17h7e829f3e8c5f4b24E"(%"core::option::Option<serde_json::value::Value>"* noalias nocapture sret dereferenceable(32) %_36, %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %values, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_38, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_39)
          to label %bb36 unwind label %cleanup11

bb36:                                             ; preds = %bb35
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h598a848fad10f46eE(%"core::option::Option<serde_json::value::Value>"* align 8 dereferenceable(32) %_36)
          to label %bb37 unwind label %cleanup11

bb37:                                             ; preds = %bb36
  %92 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_26, i32 0, i32 1
  %93 = load i8, i8* %92, align 8, !range !15
  %94 = sub i8 %93, 6
  %95 = icmp ule i8 %94, 0
  %_63 = select i1 %95, i64 0, i64 1
  %96 = icmp eq i64 %_63, 1
  br i1 %96, label %bb71, label %bb72

bb38:                                             ; preds = %bb13
  %97 = bitcast %"serde_json::value::Value"* %_42 to %"serde_json::value::Value::Object"*
  %98 = getelementptr inbounds %"serde_json::value::Value::Object", %"serde_json::value::Value::Object"* %97, i32 0, i32 1
  %99 = bitcast %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %98 to i8*
  %100 = bitcast %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %_43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false)
  %101 = bitcast %"serde_json::value::Value"* %_42 to i8*
  store i8 5, i8* %101, align 8
  %102 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %103 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %102, i32 0, i32 1
  %104 = bitcast %"serde_json::value::Value"* %103 to i8*
  %105 = bitcast %"serde_json::value::Value"* %_42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 32, i1 false)
  %106 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %106, align 8
  br label %bb39

bb39:                                             ; preds = %bb38, %bb73
  %107 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to {}**
  %108 = load {}*, {}** %107, align 8
  %109 = icmp ule {}* %108, null
  %_67 = select i1 %109, i64 0, i64 1
  %110 = icmp eq i64 %_67, 1
  br i1 %110, label %bb79, label %bb81

bb40:                                             ; preds = %bb5
  %111 = load i8, i8* %_44, align 1, !range !4
  %112 = trunc i8 %111 to i1
  br i1 %112, label %bb41, label %bb3

bb41:                                             ; preds = %bb40
  store i8 0, i8* %_44, align 1
  %113 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"*
  %114 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"* %113, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hba940374fc5e954dE(%"core::option::Option<serde_json::value::de::KeyClass>"* align 8 dereferenceable(24) %114) #14
  br label %bb3

bb42:                                             ; preds = %bb5
  %115 = load i8, i8* %_45, align 1, !range !4
  %116 = trunc i8 %115 to i1
  br i1 %116, label %bb43, label %bb3

bb43:                                             ; preds = %bb42
  store i8 0, i8* %_45, align 1
  %117 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %118 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %117, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %118) #14
  br label %bb3

bb44:                                             ; preds = %bb45, %bb10
  store i8 0, i8* %_44, align 1
  store i8 0, i8* %_45, align 1
  store i8 0, i8* %_46, align 1
  br label %bb11

bb45:                                             ; preds = %bb10
  store i8 0, i8* %_44, align 1
  %119 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"*
  %120 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"* %119, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hba940374fc5e954dE(%"core::option::Option<serde_json::value::de::KeyClass>"* align 8 dereferenceable(24) %120)
          to label %bb44 unwind label %cleanup

bb46:                                             ; preds = %bb49
  %121 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to %"core::option::Option<serde_json::value::de::KeyClass>::Some"*
  %122 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>::Some"* %121 to %"serde_json::value::de::KeyClass::Map"*
  %123 = load i8, i8* %_46, align 1, !range !4
  %124 = trunc i8 %123 to i1
  br i1 %124, label %bb47, label %bb5

bb47:                                             ; preds = %bb46
  store i8 0, i8* %_46, align 1
  %125 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to %"core::option::Option<serde_json::value::de::KeyClass>::Some"*
  %126 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>::Some"* %125 to %"serde_json::value::de::KeyClass::Map"*
  %127 = bitcast %"serde_json::value::de::KeyClass::Map"* %126 to %"alloc::string::String"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %127) #14
  br label %bb5

bb48:                                             ; preds = %bb49
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hba940374fc5e954dE(%"core::option::Option<serde_json::value::de::KeyClass>"* align 8 dereferenceable(24) %_3) #14
  br label %bb5

bb49:                                             ; preds = %cleanup12, %bb50, %bb51
  %128 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to {}**
  %129 = load {}*, {}** %128, align 8
  %130 = icmp ule {}* %129, null
  %_53 = select i1 %130, i64 0, i64 1
  %131 = icmp eq i64 %_53, 1
  br i1 %131, label %bb46, label %bb48

bb50:                                             ; preds = %bb51
  store i8 0, i8* %_47, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %first_key) #14
  br label %bb49

bb51:                                             ; preds = %bb18, %cleanup4
  %132 = load i8, i8* %_47, align 1, !range !4
  %133 = trunc i8 %132 to i1
  br i1 %133, label %bb50, label %bb49

bb52:                                             ; preds = %bb22
  %134 = load i8, i8* %_49, align 1, !range !4
  %135 = trunc i8 %134 to i1
  br i1 %135, label %bb53, label %bb18

bb53:                                             ; preds = %bb52
  store i8 0, i8* %_49, align 1
  %136 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %137 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %136, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %137) #14
  br label %bb18

bb54:                                             ; preds = %bb22
  %138 = load i8, i8* %_48, align 1, !range !4
  %139 = trunc i8 %138 to i1
  br i1 %139, label %bb55, label %bb18

bb55:                                             ; preds = %bb54
  store i8 0, i8* %_48, align 1
  %140 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %141 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %140, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %141) #14
  br label %bb18

bb56:                                             ; preds = %bb57, %bb24
  store i8 0, i8* %_48, align 1
  store i8 0, i8* %_49, align 1
  br label %bb25

bb57:                                             ; preds = %bb24
  store i8 0, i8* %_49, align 1
  %142 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %143 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %142, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %143)
          to label %bb56 unwind label %cleanup8

bb58:                                             ; preds = %bb59, %bb60
  %144 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to i64*
  %_58 = load i64, i64* %144, align 8, !range !1
  %145 = icmp eq i64 %_58, 0
  br i1 %145, label %bb61, label %bb62

bb59:                                             ; preds = %bb26
  %146 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to %"core::option::Option<serde_json::value::de::KeyClass>::Some"*
  %147 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>::Some"* %146 to %"serde_json::value::de::KeyClass::Map"*
  br label %bb58

bb60:                                             ; preds = %bb26
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hba940374fc5e954dE(%"core::option::Option<serde_json::value::de::KeyClass>"* align 8 dereferenceable(24) %_3)
          to label %bb58 unwind label %cleanup3

bb61:                                             ; preds = %bb62, %bb58
  store i8 0, i8* %_44, align 1
  store i8 0, i8* %_45, align 1
  store i8 0, i8* %_46, align 1
  br label %bb11

bb62:                                             ; preds = %bb58
  store i8 0, i8* %_45, align 1
  %148 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %149 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %148, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %149)
          to label %bb61 unwind label %cleanup

bb63:                                             ; preds = %bb64, %bb65
  store i8 0, i8* %_48, align 1
  store i8 0, i8* %_49, align 1
  br label %bb28

bb64:                                             ; preds = %bb65
  store i8 0, i8* %_48, align 1
  %150 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %151 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %150, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %151)
          to label %bb63 unwind label %cleanup8

bb65:                                             ; preds = %bb27
  %152 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_20 to i64*
  %_59 = load i64, i64* %152, align 8, !range !1
  %153 = icmp eq i64 %_59, 0
  br i1 %153, label %bb63, label %bb64

bb66:                                             ; preds = %bb32
  %154 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"*
  %155 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"* %154, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %155) #14
  br label %bb18

bb67:                                             ; preds = %bb68, %bb33
  br label %bb25

bb68:                                             ; preds = %bb33
  %156 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok"*
  %157 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok"* %156, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hef849281d57fefd4E(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* align 8 dereferenceable(56) %157)
          to label %bb67 unwind label %cleanup8

bb69:                                             ; preds = %bb70
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hef849281d57fefd4E(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* align 8 dereferenceable(56) %_26) #14
  br label %bb32

bb70:                                             ; preds = %cleanup11
  %158 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_26, i32 0, i32 1
  %159 = load i8, i8* %158, align 8, !range !15
  %160 = sub i8 %159, 6
  %161 = icmp ule i8 %160, 0
  %_62 = select i1 %161, i64 0, i64 1
  %162 = icmp eq i64 %_62, 1
  br i1 %162, label %bb32, label %bb69

bb71:                                             ; preds = %bb72, %bb37
  %163 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to i64*
  %_65 = load i64, i64* %163, align 8, !range !1
  %164 = icmp eq i64 %_65, 0
  br i1 %164, label %bb76, label %bb77

bb72:                                             ; preds = %bb37
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hef849281d57fefd4E(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* align 8 dereferenceable(56) %_26)
          to label %bb71 unwind label %cleanup10

bb73:                                             ; preds = %bb74, %bb75
  %165 = bitcast %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %_41 to i8*
  %166 = bitcast %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %values to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 24, i1 false)
  %167 = bitcast %"serde_json::value::Value"* %_40 to %"serde_json::value::Value::Object"*
  %168 = getelementptr inbounds %"serde_json::value::Value::Object", %"serde_json::value::Value::Object"* %167, i32 0, i32 1
  %169 = bitcast %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %168 to i8*
  %170 = bitcast %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %_41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 24, i1 false)
  %171 = bitcast %"serde_json::value::Value"* %_40 to i8*
  store i8 5, i8* %171, align 8
  %172 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %173 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %172, i32 0, i32 1
  %174 = bitcast %"serde_json::value::Value"* %173 to i8*
  %175 = bitcast %"serde_json::value::Value"* %_40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 32, i1 false)
  %176 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %176, align 8
  store i8 0, i8* %_47, align 1
  br label %bb39

bb74:                                             ; preds = %bb75
  %177 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"*
  %178 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"* %177, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %178)
          to label %bb73 unwind label %cleanup8

bb75:                                             ; preds = %bb34
  %179 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to i64*
  %_64 = load i64, i64* %179, align 8, !range !1
  %180 = icmp eq i64 %_64, 0
  br i1 %180, label %bb73, label %bb74

bb76:                                             ; preds = %bb77, %bb71
  br label %bb28

bb77:                                             ; preds = %bb71
  %181 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %_27 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"*
  %182 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"* %181, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %182)
          to label %bb76 unwind label %cleanup8

bb78:                                             ; preds = %bb80, %bb79, %bb81
  %183 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to i64*
  %_68 = load i64, i64* %183, align 8, !range !1
  %184 = icmp eq i64 %_68, 0
  br i1 %184, label %bb82, label %bb83

bb79:                                             ; preds = %bb39
  %185 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to %"core::option::Option<serde_json::value::de::KeyClass>::Some"*
  %186 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>::Some"* %185 to %"serde_json::value::de::KeyClass::Map"*
  %187 = load i8, i8* %_46, align 1, !range !4
  %188 = trunc i8 %187 to i1
  br i1 %188, label %bb80, label %bb78

bb80:                                             ; preds = %bb79
  store i8 0, i8* %_46, align 1
  %189 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_3 to %"core::option::Option<serde_json::value::de::KeyClass>::Some"*
  %190 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>::Some"* %189 to %"serde_json::value::de::KeyClass::Map"*
  %191 = bitcast %"serde_json::value::de::KeyClass::Map"* %190 to %"alloc::string::String"*
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %191)
          to label %bb78 unwind label %cleanup3

bb81:                                             ; preds = %bb39
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hba940374fc5e954dE(%"core::option::Option<serde_json::value::de::KeyClass>"* align 8 dereferenceable(24) %_3)
          to label %bb78 unwind label %cleanup3

bb82:                                             ; preds = %bb83, %bb78
  store i8 0, i8* %_44, align 1
  store i8 0, i8* %_45, align 1
  store i8 0, i8* %_46, align 1
  br label %bb8

bb83:                                             ; preds = %bb78
  store i8 0, i8* %_45, align 1
  %192 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %_4 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %193 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %192, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %193)
          to label %bb82 unwind label %cleanup

cleanup:                                          ; preds = %bb83, %bb62, %bb45, %bb2, %start
  %194 = landingpad { i8*, i32 }
          cleanup
  %195 = extractvalue { i8*, i32 } %194, 0
  %196 = extractvalue { i8*, i32 } %194, 1
  %197 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %195, i8** %197, align 8
  %198 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %196, i32* %198, align 8
  br label %bb3

cleanup3:                                         ; preds = %bb80, %bb81, %bb60, %bb9, %bb7
  %199 = landingpad { i8*, i32 }
          cleanup
  %200 = extractvalue { i8*, i32 } %199, 0
  %201 = extractvalue { i8*, i32 } %199, 1
  %202 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %200, i8** %202, align 8
  %203 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %201, i32* %203, align 8
  br label %bb5

cleanup4:                                         ; preds = %bb25, %bb15
  %204 = landingpad { i8*, i32 }
          cleanup
  %205 = extractvalue { i8*, i32 } %204, 0
  %206 = extractvalue { i8*, i32 } %204, 1
  %207 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %205, i8** %207, align 8
  %208 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %206, i32* %208, align 8
  br label %bb51

cleanup5:                                         ; preds = %bb16
  %209 = landingpad { i8*, i32 }
          cleanup
  %210 = extractvalue { i8*, i32 } %209, 0
  %211 = extractvalue { i8*, i32 } %209, 1
  %212 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %210, i8** %212, align 8
  %213 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %211, i32* %213, align 8
  br label %bb19

cleanup7:                                         ; preds = %bb27, %bb21, %bb23
  %214 = landingpad { i8*, i32 }
          cleanup
  %215 = extractvalue { i8*, i32 } %214, 0
  %216 = extractvalue { i8*, i32 } %214, 1
  %217 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %215, i8** %217, align 8
  %218 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %216, i32* %218, align 8
  br label %bb22

cleanup8:                                         ; preds = %bb77, %bb74, %bb68, %bb28, %bb64, %bb57
  %219 = landingpad { i8*, i32 }
          cleanup
  %220 = extractvalue { i8*, i32 } %219, 0
  %221 = extractvalue { i8*, i32 } %219, 1
  %222 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %220, i8** %222, align 8
  %223 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %221, i32* %223, align 8
  br label %bb18

cleanup10:                                        ; preds = %bb72, %bb34
  %224 = landingpad { i8*, i32 }
          cleanup
  %225 = extractvalue { i8*, i32 } %224, 0
  %226 = extractvalue { i8*, i32 } %224, 1
  %227 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %225, i8** %227, align 8
  %228 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %226, i32* %228, align 8
  br label %bb32

cleanup11:                                        ; preds = %bb36, %bb35
  %229 = landingpad { i8*, i32 }
          cleanup
  %230 = extractvalue { i8*, i32 } %229, 0
  %231 = extractvalue { i8*, i32 } %229, 1
  %232 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %230, i8** %232, align 8
  %233 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %231, i32* %233, align 8
  br label %bb70

cleanup12:                                        ; preds = %bb13
  %234 = landingpad { i8*, i32 }
          cleanup
  %235 = extractvalue { i8*, i32 } %234, 0
  %236 = extractvalue { i8*, i32 } %234, 1
  %237 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %235, i8** %237, align 8
  %238 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %236, i32* %238, align 8
  br label %bb49
}

; <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_seq
; Function Attrs: inlinehint uwtable
define internal void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_seq17hb303b50fa17fe365E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), i64* align 8 dereferenceable(56), i1 zeroext) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_17 = alloca %"alloc::vec::Vec<serde_json::value::Value>", align 8
  %_16 = alloca %"serde_json::value::Value", align 8
  %_15 = alloca %"serde_json::value::Value", align 8
  %elem = alloca %"serde_json::value::Value", align 8
  %val = alloca %"core::option::Option<serde_json::value::Value>", align 8
  %_5 = alloca %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>", align 8
  %_4 = alloca %"core::option::Option<serde_json::value::Value>", align 8
  %vec = alloca %"alloc::vec::Vec<serde_json::value::Value>", align 8
  %visitor = alloca { i64*, i8 }, align 8
  %4 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %visitor, i32 0, i32 0
  store i64* %1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %visitor, i32 0, i32 1
  %6 = zext i1 %2 to i8
  store i8 %6, i8* %5, align 8
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hd3eccbe48c58c096E"(%"alloc::vec::Vec<serde_json::value::Value>"* noalias nocapture sret dereferenceable(24) %vec)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %7 = bitcast { i8*, i32 }* %3 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb2:                                              ; preds = %start
  br label %bb4

bb3:                                              ; preds = %bb5, %cleanup
  br label %bb1

bb4:                                              ; preds = %bb26, %bb2
; invoke serde::de::SeqAccess::next_element
  invoke void @_ZN5serde2de9SeqAccess12next_element17h6dd111915b61cf36E(%"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %_5, { i64*, i8 }* align 8 dereferenceable(16) %visitor)
          to label %bb6 unwind label %cleanup1

bb5:                                              ; preds = %bb16, %bb9, %cleanup1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h2b4f7159a46d5c41E(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %vec) #14
  br label %bb3

bb6:                                              ; preds = %bb4
  %13 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to i64*
  %_7 = load i64, i64* %13, align 8, !range !1
  switch i64 %_7, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb10
  ]

bb7:                                              ; preds = %bb6
  unreachable

bb8:                                              ; preds = %bb6
  %14 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok"* %14, i32 0, i32 1
  %16 = bitcast %"core::option::Option<serde_json::value::Value>"* %val to i8*
  %17 = bitcast %"core::option::Option<serde_json::value::Value>"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 32, i1 false)
  %18 = bitcast %"core::option::Option<serde_json::value::Value>"* %_4 to i8*
  %19 = bitcast %"core::option::Option<serde_json::value::Value>"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false)
  %20 = bitcast %"core::option::Option<serde_json::value::Value>"* %_4 to i8*
  %21 = load i8, i8* %20, align 8, !range !15
  %22 = sub i8 %21, 6
  %23 = icmp ule i8 %22, 0
  %_11 = select i1 %23, i64 0, i64 1
  %24 = icmp eq i64 %_11, 1
  br i1 %24, label %bb14, label %bb13

bb9:                                              ; preds = %bb19, %bb20, %cleanup2
  %25 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to i64*
  %_18 = load i64, i64* %25, align 8, !range !1
  %26 = icmp eq i64 %_18, 0
  br i1 %26, label %bb5, label %bb16

bb10:                                             ; preds = %bb6
  %27 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %27, i32 0, i32 1
  %err = load i64*, i64** %28, align 8, !nonnull !2
  %29 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %30 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %29, i32 0, i32 1
  store i64* %err, i64** %30, align 8
  %31 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %31, align 8
  %32 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to i64*
  %_19 = load i64, i64* %32, align 8, !range !1
  %33 = icmp eq i64 %_19, 0
  br i1 %33, label %bb18, label %bb17

bb11:                                             ; preds = %bb23, %bb12
  ret void

bb12:                                             ; preds = %bb17
  br label %bb11

bb13:                                             ; preds = %bb8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h598a848fad10f46eE(%"core::option::Option<serde_json::value::Value>"* align 8 dereferenceable(32) %_4)
          to label %bb25 unwind label %cleanup2

bb14:                                             ; preds = %bb8
  %34 = bitcast %"core::option::Option<serde_json::value::Value>"* %_4 to %"core::option::Option<serde_json::value::Value>::Some"*
  %35 = bitcast %"core::option::Option<serde_json::value::Value>::Some"* %34 to %"serde_json::value::Value"*
  %36 = bitcast %"serde_json::value::Value"* %elem to i8*
  %37 = bitcast %"serde_json::value::Value"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 32, i1 false)
  %38 = bitcast %"serde_json::value::Value"* %_15 to i8*
  %39 = bitcast %"serde_json::value::Value"* %elem to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 32, i1 false)
; invoke alloc::vec::Vec<T>::push
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$4push17h66c29a1ebe7b1591E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %vec, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_15)
          to label %bb15 unwind label %cleanup3

bb15:                                             ; preds = %bb14
  %40 = bitcast %"core::option::Option<serde_json::value::Value>"* %_4 to i8*
  %41 = load i8, i8* %40, align 8, !range !15
  %42 = sub i8 %41, 6
  %43 = icmp ule i8 %42, 0
  %_21 = select i1 %43, i64 0, i64 1
  %44 = icmp eq i64 %_21, 1
  br i1 %44, label %bb21, label %bb22

bb16:                                             ; preds = %bb9
  %45 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %46 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %45, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %46) #14
  br label %bb5

bb17:                                             ; preds = %bb18, %bb10
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h2b4f7159a46d5c41E(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %vec)
          to label %bb12 unwind label %cleanup

bb18:                                             ; preds = %bb10
  %47 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok"*
  %48 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok"* %47, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h598a848fad10f46eE(%"core::option::Option<serde_json::value::Value>"* align 8 dereferenceable(32) %48)
          to label %bb17 unwind label %cleanup1

bb19:                                             ; preds = %bb20
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h598a848fad10f46eE(%"core::option::Option<serde_json::value::Value>"* align 8 dereferenceable(32) %_4) #14
  br label %bb9

bb20:                                             ; preds = %cleanup3
  %49 = bitcast %"core::option::Option<serde_json::value::Value>"* %_4 to i8*
  %50 = load i8, i8* %49, align 8, !range !15
  %51 = sub i8 %50, 6
  %52 = icmp ule i8 %51, 0
  %_20 = select i1 %52, i64 0, i64 1
  %53 = icmp eq i64 %_20, 1
  br i1 %53, label %bb9, label %bb19

bb21:                                             ; preds = %bb22, %bb15
  %54 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to i64*
  %_23 = load i64, i64* %54, align 8, !range !1
  %55 = icmp eq i64 %_23, 0
  br i1 %55, label %bb26, label %bb27

bb22:                                             ; preds = %bb15
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h598a848fad10f46eE(%"core::option::Option<serde_json::value::Value>"* align 8 dereferenceable(32) %_4)
          to label %bb21 unwind label %cleanup2

bb23:                                             ; preds = %bb24, %bb25
  %56 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %_17 to i8*
  %57 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %vec to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false)
  %58 = bitcast %"serde_json::value::Value"* %_16 to %"serde_json::value::Value::Array"*
  %59 = getelementptr inbounds %"serde_json::value::Value::Array", %"serde_json::value::Value::Array"* %58, i32 0, i32 1
  %60 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %59 to i8*
  %61 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %_17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false)
  %62 = bitcast %"serde_json::value::Value"* %_16 to i8*
  store i8 4, i8* %62, align 8
  %63 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %64 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %63, i32 0, i32 1
  %65 = bitcast %"serde_json::value::Value"* %64 to i8*
  %66 = bitcast %"serde_json::value::Value"* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 32, i1 false)
  %67 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %67, align 8
  br label %bb11

bb24:                                             ; preds = %bb25
  %68 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %69 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %68, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %69)
          to label %bb23 unwind label %cleanup1

bb25:                                             ; preds = %bb13
  %70 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to i64*
  %_22 = load i64, i64* %70, align 8, !range !1
  %71 = icmp eq i64 %_22, 0
  br i1 %71, label %bb23, label %bb24

bb26:                                             ; preds = %bb27, %bb21
  br label %bb4

bb27:                                             ; preds = %bb21
  %72 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %73 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %72, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %73)
          to label %bb26 unwind label %cleanup1

cleanup:                                          ; preds = %bb17, %start
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  %76 = extractvalue { i8*, i32 } %74, 1
  %77 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %75, i8** %77, align 8
  %78 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %76, i32* %78, align 8
  br label %bb3

cleanup1:                                         ; preds = %bb27, %bb24, %bb18, %bb4
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  %81 = extractvalue { i8*, i32 } %79, 1
  %82 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %80, i8** %82, align 8
  %83 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %81, i32* %83, align 8
  br label %bb5

cleanup2:                                         ; preds = %bb22, %bb13
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = extractvalue { i8*, i32 } %84, 0
  %86 = extractvalue { i8*, i32 } %84, 1
  %87 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %85, i8** %87, align 8
  %88 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %86, i32* %88, align 8
  br label %bb9

cleanup3:                                         ; preds = %bb14
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  %91 = extractvalue { i8*, i32 } %89, 1
  %92 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %90, i8** %92, align 8
  %93 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %91, i32* %93, align 8
  br label %bb20
}

; <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_str
; Function Attrs: inlinehint uwtable
define internal void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_str17h093b57885c99cd41E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), [0 x i8]* noalias nonnull readonly align 1 %value.0, i64 %value.1) unnamed_addr #0 {
start:
  %_4 = alloca %"alloc::string::String", align 8
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h772b472e2b9dfe64E"(%"alloc::string::String"* noalias nocapture sret dereferenceable(24) %_4, [0 x i8]* noalias nonnull readonly align 1 %value.0, i64 %value.1)
  br label %bb1

bb1:                                              ; preds = %start
; call <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_string
  call void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$12visit_string17h6005262e9b1fe1efE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_u64
; Function Attrs: inlinehint uwtable
define internal void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_u6417hbe2bc3a34e0cab04E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), i64 %value) unnamed_addr #0 {
start:
  %_4 = alloca %"serde_json::number::Number", align 8
  %_3 = alloca %"serde_json::value::Value", align 8
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h235be50887a5eb84E"(%"serde_json::number::Number"* noalias nocapture sret dereferenceable(16) %_4, i64 %value)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"serde_json::value::Value"* %_3 to %"serde_json::value::Value::Number"*
  %2 = getelementptr inbounds %"serde_json::value::Value::Number", %"serde_json::value::Value::Number"* %1, i32 0, i32 1
  %3 = bitcast %"serde_json::number::Number"* %2 to i8*
  %4 = bitcast %"serde_json::number::Number"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast %"serde_json::value::Value"* %_3 to i8*
  store i8 2, i8* %5, align 8
  %6 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %7 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %6, i32 0, i32 1
  %8 = bitcast %"serde_json::value::Value"* %7 to i8*
  %9 = bitcast %"serde_json::value::Value"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %10, align 8
  ret void
}

; std::rt::lang_start
; Function Attrs: uwtable
define hidden i64 @_ZN3std2rt10lang_start17h13fec0213b3556eaE(void ()* nonnull %main, i64 %argc, i8** %argv) unnamed_addr #1 {
start:
  %_7 = alloca i8*, align 8
  %0 = bitcast i8** %_7 to void ()**
  store void ()* %main, void ()** %0, align 8
  %_4.0 = bitcast i8** %_7 to {}*
; call std::rt::lang_start_internal
  %1 = call i64 @_ZN3std2rt19lang_start_internal17hf6b4b5e300467e14E({}* nonnull align 1 %_4.0, [3 x i64]* noalias readonly align 8 dereferenceable(24) bitcast ({ void (i8**)*, i64, i64, i32 (i8**)*, i32 (i8**)*, i32 (i8**)* }* @vtable.2 to [3 x i64]*), i64 %argc, i8** %argv)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; std::rt::lang_start::{{closure}}
; Function Attrs: uwtable
define internal i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h841fc13b70591440E"(i8** noalias readonly align 8 dereferenceable(8) %_1) unnamed_addr #1 {
start:
  %0 = bitcast i8** %_1 to void ()**
  %_3 = load void ()*, void ()** %0, align 8, !nonnull !2
  call void %_3()
  br label %bb1

bb1:                                              ; preds = %start
; call <() as std::process::Termination>::report
  %1 = call i32 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hbda010211023c6f4E"()
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %1
}

; std::sys::unix::process::process_common::ExitCode::as_i32
; Function Attrs: inlinehint uwtable
define internal i32 @_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217hdbfdfe33d3566313E(i8* noalias readonly align 1 dereferenceable(1) %self) unnamed_addr #0 {
start:
  %_2 = load i8, i8* %self, align 1
  %0 = zext i8 %_2 to i32
  ret i32 %0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb5b5687cdfcb6179E"(i64** noalias readonly align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(96) %f) unnamed_addr #1 {
start:
  %_4 = load i64*, i64** %self, align 8, !nonnull !2
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17he0c6b63112294443E"(i64* noalias readonly align 8 dereferenceable(8) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(96) %f)
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; <usize as core::iter::range::Step>::add_usize
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h311e53f77de93869E"(i64* noalias readonly align 8 dereferenceable(8) %self, i64 %n) unnamed_addr #0 {
start:
  %_3 = alloca i64, align 8
; call <T as core::convert::TryFrom<U>>::try_from
  %0 = call i64 @"_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17ha5e215db105e8a79E"(i64 %n)
  store i64 %0, i64* %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %n_as_t = load i64, i64* %_3, align 8
  %_6 = load i64, i64* %self, align 8
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h993a87cd7fb4ce2fE"(i64 %_6, i64 %n_as_t)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h07ea2f73c29f8f57E(i8* %src, i8* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h508132dae9fdf55fE(i8* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h508132dae9fdf55fE(i8* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17h920cbe7ac548d0ebE(i8* %src, i8* %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 1, %count
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h1b2cc26ce522cdc8E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hed8d2ed3bd74fb1fE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hed8d2ed3bd74fb1fE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17h7185003335b91c3bE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 32, %count
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %dst to i8*
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h869d3940e07c0879E({ i64*, i64 }* %src, { i64*, i64 }* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h8b0ce3c0fcad0a5dE({ i64*, i64 }* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h8b0ce3c0fcad0a5dE({ i64*, i64 }* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17h7a5daa36be11a4e8E({ i64*, i64 }* %src, { i64*, i64 }* %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 16, %count
  %4 = bitcast { i64*, i64 }* %dst to i8*
  %5 = bitcast { i64*, i64 }* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h8b40b3ed5c86d23eE(i8** %src, i8** %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39c06f0e9dd74373E(i8** %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39c06f0e9dd74373E(i8** %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17hd4008adfb11c00d9E(i8** %src, i8** %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 8, %count
  %4 = bitcast i8** %dst to i8*
  %5 = bitcast i8** %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h966176bded6ad95dE(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %src, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h64ea43dd6881de20E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h64ea43dd6881de20E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17h1dc6db36aad6f817E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %src, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 24, %count
  %4 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %dst to i8*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17h9a21893c837f888bE(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %src, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h3505a12176644ee8E(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h3505a12176644ee8E(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17h2bdeab252546098fE(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %src, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 24, %count
  %4 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %dst to i8*
  %5 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17hc6d747709a791745E(%"alloc::string::String"* %src, %"alloc::string::String"* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha574f2b6cf2de5eaE(%"alloc::string::String"* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha574f2b6cf2de5eaE(%"alloc::string::String"* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17hf350cfaecb44f4dfE(%"alloc::string::String"* %src, %"alloc::string::String"* %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 24, %count
  %4 = bitcast %"alloc::string::String"* %dst to i8*
  %5 = bitcast %"alloc::string::String"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17hddb4b2d55463b6dfE(%"serde_json::value::Value"* %src, %"serde_json::value::Value"* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5bffdb0aa97c26a4E(%"serde_json::value::Value"* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5bffdb0aa97c26a4E(%"serde_json::value::Value"* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17h5c9598d295167465E(%"serde_json::value::Value"* %src, %"serde_json::value::Value"* %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 32, %count
  %4 = bitcast %"serde_json::value::Value"* %dst to i8*
  %5 = bitcast %"serde_json::value::Value"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17hea16c0c79b8fb67eE(i64* %src, i64* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39af2041551873f7E(i64* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39af2041551873f7E(i64* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17h295114d877306e36E(i64* %src, i64* %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 8, %count
  %4 = bitcast i64* %dst to i8*
  %5 = bitcast i64* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics19copy_nonoverlapping17hffd794e67061478aE(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %src, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hb5ec4fd97aa9a1bbE(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @6 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hb5ec4fd97aa9a1bbE(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @8 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  br i1 false, label %bb11, label %bb15

bb11:                                             ; preds = %bb10
; call core::intrinsics::overlaps
  %2 = call zeroext i1 @_ZN4core10intrinsics8overlaps17h29f5533a3a06e710E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %src, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %dst, i64 %count)
  br label %bb12

bb12:                                             ; preds = %bb11
  %_23 = xor i1 %2, true
  %_22 = xor i1 %_23, true
  br i1 %_22, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb15

bb14:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [37 x i8] }>* @9 to [0 x i8]*), i64 37, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @10 to %"core::panic::Location"*))
  unreachable

bb15:                                             ; preds = %bb13, %bb10
  %3 = mul i64 24, %count
  %4 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %dst to i8*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 %3, i1 false)
  br label %bb16

bb16:                                             ; preds = %bb15
  ret void
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h3505a12176644ee8E(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8a472e5d922df33dE"(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39af2041551873f7E(i64* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h40f509df58231089E"(i64* %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint i64* %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h39c06f0e9dd74373E(i8** %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf2b569eecb85168aE"(i8** %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint i8** %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h508132dae9fdf55fE(i8* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h59711f8087130b82E"(i8* %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint i8* %ptr to i64
  store i64 1, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5bffdb0aa97c26a4E(%"serde_json::value::Value"* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h90ed7f44ae421f3dE"(%"serde_json::value::Value"* %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint %"serde_json::value::Value"* %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h64ea43dd6881de20E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h19da00cc791d35baE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h8b0ce3c0fcad0a5dE({ i64*, i64 }* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8a2684e4ba6c0b24E"({ i64*, i64 }* %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint { i64*, i64 }* %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha574f2b6cf2de5eaE(%"alloc::string::String"* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf12685b955243de4E"(%"alloc::string::String"* %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint %"alloc::string::String"* %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hb5ec4fd97aa9a1bbE(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h038c4d054976d0b9E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hed8d2ed3bd74fb1fE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd069110e0f84be1aE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::is_aligned_and_not_null
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf8b7aa1147d444ceE(i64** %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb69ed7bf947cc278E"(i64** %ptr)
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %1, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb5
  store i8 0, i8* %1, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_7 = ptrtoint i64** %ptr to i64
  store i64 8, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %1, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %start
  %_2 = xor i1 %2, true
  br i1 %_2, label %bb3, label %bb2

bb6:                                              ; preds = %bb3
  %_10 = icmp eq i64 %3, 0
  %6 = call i1 @llvm.expect.i1(i1 %_10, i1 false)
  br i1 %6, label %panic, label %bb7

bb7:                                              ; preds = %bb6
  %_6 = urem i64 %_7, %3
  %_5 = icmp eq i64 %_6, 0
  br i1 %_5, label %bb1, label %bb2

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([57 x i8]* @str.3 to [0 x i8]*), i64 57, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @12 to %"core::panic::Location"*))
  unreachable
}

; core::intrinsics::copy
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics4copy17h1888414c24a4a289E(%"serde_json::value::Value"* %src, %"serde_json::value::Value"* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5bffdb0aa97c26a4E(%"serde_json::value::Value"* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @13 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5bffdb0aa97c26a4E(%"serde_json::value::Value"* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @14 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  %2 = mul i64 32, %count
  %3 = bitcast %"serde_json::value::Value"* %dst to i8*
  %4 = bitcast %"serde_json::value::Value"* %src to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 %2, i1 false)
  br label %bb11

bb11:                                             ; preds = %bb10
  ret void
}

; core::intrinsics::copy
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics4copy17h51161418077ba506E(i64** %src, i64** %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf8b7aa1147d444ceE(i64** %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @13 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf8b7aa1147d444ceE(i64** %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @14 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  %2 = mul i64 8, %count
  %3 = bitcast i64** %dst to i8*
  %4 = bitcast i64** %src to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 %2, i1 false)
  br label %bb11

bb11:                                             ; preds = %bb10
  ret void
}

; core::intrinsics::copy
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core10intrinsics4copy17h71309211d53b7ea6E(%"alloc::string::String"* %src, %"alloc::string::String"* %dst, i64 %count) unnamed_addr #0 {
start:
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %0 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha574f2b6cf2de5eaE(%"alloc::string::String"* %src)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [46 x i8] }>* @4 to [0 x i8]*), i64 46, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @13 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha574f2b6cf2de5eaE(%"alloc::string::String"* %dst)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_13 = xor i1 %1, true
  br i1 %_13, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @7 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @14 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb8, %bb5
  %2 = mul i64 24, %count
  %3 = bitcast %"alloc::string::String"* %dst to i8*
  %4 = bitcast %"alloc::string::String"* %src to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 %2, i1 false)
  br label %bb11

bb11:                                             ; preds = %bb10
  ret void
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17h1dc6db36aad6f817E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %src, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %src to i64
  %dst_usize = ptrtoint %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %dst to i64
  store i64 24, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17h295114d877306e36E(i64* %src, i64* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint i64* %src to i64
  %dst_usize = ptrtoint i64* %dst to i64
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17h29f5533a3a06e710E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %src, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %src to i64
  %dst_usize = ptrtoint %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %dst to i64
  store i64 24, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17h2bdeab252546098fE(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %src, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %src to i64
  %dst_usize = ptrtoint %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %dst to i64
  store i64 24, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17h5c9598d295167465E(%"serde_json::value::Value"* %src, %"serde_json::value::Value"* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint %"serde_json::value::Value"* %src to i64
  %dst_usize = ptrtoint %"serde_json::value::Value"* %dst to i64
  store i64 32, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17h7185003335b91c3bE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src to i64
  %dst_usize = ptrtoint %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %dst to i64
  store i64 32, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17h7a5daa36be11a4e8E({ i64*, i64 }* %src, { i64*, i64 }* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint { i64*, i64 }* %src to i64
  %dst_usize = ptrtoint { i64*, i64 }* %dst to i64
  store i64 16, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17h920cbe7ac548d0ebE(i8* %src, i8* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint i8* %src to i64
  %dst_usize = ptrtoint i8* %dst to i64
  store i64 1, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17hd4008adfb11c00d9E(i8** %src, i8** %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint i8** %src to i64
  %dst_usize = ptrtoint i8** %dst to i64
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::intrinsics::overlaps
; Function Attrs: uwtable
define internal zeroext i1 @_ZN4core10intrinsics8overlaps17hf350cfaecb44f4dfE(%"alloc::string::String"* %src, %"alloc::string::String"* %dst, i64 %count) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %diff = alloca i64, align 8
  %src_usize = ptrtoint %"alloc::string::String"* %src to i64
  %dst_usize = ptrtoint %"alloc::string::String"* %dst to i64
  store i64 24, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %1, i64 %count)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap
  %_20 = call i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64 %3, i64 %4)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_13 = icmp ugt i64 %src_usize, %dst_usize
  br i1 %_13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %5 = sub i64 %dst_usize, %src_usize
  store i64 %5, i64* %diff, align 8
  br label %bb6

bb5:                                              ; preds = %bb3
  %6 = sub i64 %src_usize, %dst_usize
  store i64 %6, i64* %diff, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_21 = load i64, i64* %diff, align 8
  %7 = icmp ugt i64 %_20, %_21
  ret i1 %7
}

; core::cmp::Ord::max
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core3cmp3Ord3max17haa3ccee5ad1a55f5E(i64 %self, i64 %other) unnamed_addr #0 {
start:
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17ha1d44411ee67531aE(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::Ord::min
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core3cmp3Ord3min17h8962d9a48c11c42cE(i64 %self, i64 %other) unnamed_addr #0 {
start:
; call core::cmp::min_by
  %0 = call i64 @_ZN4core3cmp6min_by17h19fd44ced6725cc5E(i64 %self, i64 %other)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::max
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core3cmp3max17he9d11212e0f33ea6E(i64 %v1, i64 %v2) unnamed_addr #0 {
start:
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17haa3ccee5ad1a55f5E(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::min
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core3cmp3min17h97a6caddf1d2d13cE(i64 %v1, i64 %v2) unnamed_addr #0 {
start:
; call core::cmp::Ord::min
  %0 = call i64 @_ZN4core3cmp3Ord3min17h8962d9a48c11c42cE(i64 %v1, i64 %v2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h442379464eedd660E"(i64* noalias readonly align 8 dereferenceable(8) %self, i64* noalias readonly align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_4 = load i64, i64* %self, align 8
  %_5 = load i64, i64* %other, align 8
  %_3 = icmp ult i64 %_4, %_5
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8
  %_8 = load i64, i64* %other, align 8
  %_6 = icmp eq i64 %_7, %_8
  br i1 %_6, label %bb4, label %bb3

bb2:                                              ; preds = %start
  store i8 -1, i8* %0, align 1
  br label %bb6

bb3:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1
  br label %bb5

bb4:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %1 = load i8, i8* %0, align 1, !range !16
  ret i8 %1
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h384838f30ff32f46E"(i64* noalias readonly align 8 dereferenceable(8) %self, i64* noalias readonly align 8 dereferenceable(8) %other) unnamed_addr #0 {
start:
  %_3 = load i64, i64* %self, align 8
  %_4 = load i64, i64* %other, align 8
  %0 = icmp ult i64 %_3, %_4
  ret i1 %0
}

; core::cmp::max_by
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core3cmp6max_by17ha1d44411ee67531aE(i64, i64) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !2
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !2
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17hef471100d87370afE(i64* noalias readonly align 8 dereferenceable(8) %7, i64* noalias readonly align 8 dereferenceable(8) %9)
          to label %bb2 unwind label %cleanup, !range !16

bb1:                                              ; preds = %bb11, %bb3
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb2:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %17 = load i8, i8* %_4, align 1, !range !16
  %_11 = sext i8 %17 to i64
  switch i64 %_11, label %bb6 [
    i64 -1, label %bb7
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb4
  %18 = load i8, i8* %_12, align 1, !range !4
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb11, label %bb1

bb4:                                              ; preds = %cleanup
  store i8 0, i8* %_13, align 1
  br label %bb3

bb5:                                              ; preds = %bb2
  store i8 0, i8* %_12, align 1
  %20 = load i64, i64* %v1, align 8
  store i64 %20, i64* %3, align 8
  br label %bb8

bb6:                                              ; preds = %bb2
  unreachable

bb7:                                              ; preds = %bb2, %bb2
  store i8 0, i8* %_13, align 1
  %21 = load i64, i64* %v2, align 8
  store i64 %21, i64* %3, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %22 = load i8, i8* %_13, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb12, label %bb9

bb9:                                              ; preds = %bb12, %bb8
  %24 = load i8, i8* %_12, align 1, !range !4
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb13, label %bb10

bb10:                                             ; preds = %bb13, %bb9
  %26 = load i64, i64* %3, align 8
  ret i64 %26

bb11:                                             ; preds = %bb3
  store i8 0, i8* %_12, align 1
  br label %bb1

bb12:                                             ; preds = %bb8
  store i8 0, i8* %_13, align 1
  br label %bb9

bb13:                                             ; preds = %bb9
  store i8 0, i8* %_12, align 1
  br label %bb10

cleanup:                                          ; preds = %start
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb4
}

; core::cmp::min_by
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core3cmp6min_by17h19fd44ced6725cc5E(i64, i64) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %3 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %4 = bitcast { i64*, i64* }* %_6 to i64**
  store i64* %v1, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  store i64* %v2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !2
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8, !nonnull !2
; invoke core::ops::function::FnOnce::call_once
  %10 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17hef471100d87370afE(i64* noalias readonly align 8 dereferenceable(8) %7, i64* noalias readonly align 8 dereferenceable(8) %9)
          to label %bb2 unwind label %cleanup, !range !16

bb1:                                              ; preds = %bb11, %bb3
  %11 = bitcast { i8*, i32 }* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb2:                                              ; preds = %start
  store i8 %10, i8* %_4, align 1
  %17 = load i8, i8* %_4, align 1, !range !16
  %_11 = sext i8 %17 to i64
  switch i64 %_11, label %bb6 [
    i64 -1, label %bb7
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb4
  %18 = load i8, i8* %_12, align 1, !range !4
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb11, label %bb1

bb4:                                              ; preds = %cleanup
  store i8 0, i8* %_13, align 1
  br label %bb3

bb5:                                              ; preds = %bb2
  store i8 0, i8* %_13, align 1
  %20 = load i64, i64* %v2, align 8
  store i64 %20, i64* %3, align 8
  br label %bb8

bb6:                                              ; preds = %bb2
  unreachable

bb7:                                              ; preds = %bb2, %bb2
  store i8 0, i8* %_12, align 1
  %21 = load i64, i64* %v1, align 8
  store i64 %21, i64* %3, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %22 = load i8, i8* %_13, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb12, label %bb9

bb9:                                              ; preds = %bb12, %bb8
  %24 = load i8, i8* %_12, align 1, !range !4
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb13, label %bb10

bb10:                                             ; preds = %bb13, %bb9
  %26 = load i64, i64* %3, align 8
  ret i64 %26

bb11:                                             ; preds = %bb3
  store i8 0, i8* %_12, align 1
  br label %bb1

bb12:                                             ; preds = %bb8
  store i8 0, i8* %_13, align 1
  br label %bb9

bb13:                                             ; preds = %bb9
  store i8 0, i8* %_12, align 1
  br label %bb10

cleanup:                                          ; preds = %start
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb4
}

; core::f64::<impl f64>::abs_private
; Function Attrs: inlinehint uwtable
define internal double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$11abs_private17h6f829a90b1b23c40E"(double %self) unnamed_addr #0 {
start:
; call core::f64::<impl f64>::to_bits
  %0 = call i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hb92a4451971526e9E"(double %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = and i64 %0, 9223372036854775807
; call core::f64::<impl f64>::from_bits
  %1 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17h77fdb01d77b24aa6E"(i64 %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double %1
}

; core::f64::<impl f64>::is_infinite
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$11is_infinite17h30643d1eb9d48562E"(double %self) unnamed_addr #0 {
start:
; call core::f64::<impl f64>::abs_private
  %0 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$11abs_private17h6f829a90b1b23c40E"(double %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = fcmp oeq double %0, 0x7FF0000000000000
  ret i1 %1
}

; core::f64::<impl f64>::to_bits
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$7to_bits17hb92a4451971526e9E"(double %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast i64* %0 to double*
  store double %self, double* %1, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::f64::<impl f64>::from_bits
; Function Attrs: inlinehint uwtable
define internal double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9from_bits17h77fdb01d77b24aa6E"(i64 %v) unnamed_addr #0 {
start:
  %0 = alloca double, align 8
  %1 = bitcast double* %0 to i64*
  store i64 %v, i64* %1, align 8
  %2 = load double, double* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret double %2
}

; core::f64::<impl f64>::is_finite
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3f6421_$LT$impl$u20$f64$GT$9is_finite17h1397b05ce16fb738E"(double %self) unnamed_addr #0 {
start:
; call core::f64::<impl f64>::abs_private
  %0 = call double @"_ZN4core3f6421_$LT$impl$u20$f64$GT$11abs_private17h6f829a90b1b23c40E"(double %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = fcmp olt double %0, 0x7FF0000000000000
  ret i1 %1
}

; core::fmt::ArgumentV1::new
; Function Attrs: uwtable
define internal { i8*, i8* } @_ZN4core3fmt10ArgumentV13new17h158d5be3aaefe6f4E(i64** noalias readonly align 8 dereferenceable(8) %x, i1 (i64**, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Void"*, align 8
  %1 = alloca i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i8* }, align 8
  %3 = bitcast i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)** %1 to i1 (i64**, %"core::fmt::Formatter"*)**
  store i1 (i64**, %"core::fmt::Formatter"*)* %f, i1 (i64**, %"core::fmt::Formatter"*)** %3, align 8
  %4 = load i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !2
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::fmt::Void"** %0 to i64***
  store i64** %x, i64*** %5, align 8
  %6 = load %"core::fmt::Void"*, %"core::fmt::Void"** %0, align 8, !nonnull !2
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = bitcast { i8*, i8* }* %2 to %"core::fmt::Void"**
  store %"core::fmt::Void"* %6, %"core::fmt::Void"** %7, align 8
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %9 = bitcast i8** %8 to i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)* %4, i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !2
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8, !nonnull !2
  %14 = insertvalue { i8*, i8* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i8* } %14, i8* %13, 1
  ret { i8*, i8* } %15
}

; core::fmt::ArgumentV1::new
; Function Attrs: uwtable
define internal { i8*, i8* } @_ZN4core3fmt10ArgumentV13new17h35f79c12d3e3a572E(%"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32) %x, i1 (%"serde_json::value::Value"*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Void"*, align 8
  %1 = alloca i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i8* }, align 8
  %3 = bitcast i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)** %1 to i1 (%"serde_json::value::Value"*, %"core::fmt::Formatter"*)**
  store i1 (%"serde_json::value::Value"*, %"core::fmt::Formatter"*)* %f, i1 (%"serde_json::value::Value"*, %"core::fmt::Formatter"*)** %3, align 8
  %4 = load i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !2
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::fmt::Void"** %0 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %x, %"serde_json::value::Value"** %5, align 8
  %6 = load %"core::fmt::Void"*, %"core::fmt::Void"** %0, align 8, !nonnull !2
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = bitcast { i8*, i8* }* %2 to %"core::fmt::Void"**
  store %"core::fmt::Void"* %6, %"core::fmt::Void"** %7, align 8
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %9 = bitcast i8** %8 to i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)* %4, i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !2
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8, !nonnull !2
  %14 = insertvalue { i8*, i8* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i8* } %14, i8* %13, 1
  ret { i8*, i8* } %15
}

; core::fmt::ArgumentV1::new
; Function Attrs: uwtable
define internal { i8*, i8* } @_ZN4core3fmt10ArgumentV13new17hafb5b738f66ff23aE(%"core::fmt::Arguments"* noalias readonly align 8 dereferenceable(48) %x, i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* nonnull %f) unnamed_addr #1 {
start:
  %0 = alloca %"core::fmt::Void"*, align 8
  %1 = alloca i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)*, align 8
  %2 = alloca { i8*, i8* }, align 8
  %3 = bitcast i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)** %1 to i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* %f, i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)** %3, align 8
  %4 = load i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)** %1, align 8, !nonnull !2
  br label %bb1

bb1:                                              ; preds = %start
  %5 = bitcast %"core::fmt::Void"** %0 to %"core::fmt::Arguments"**
  store %"core::fmt::Arguments"* %x, %"core::fmt::Arguments"** %5, align 8
  %6 = load %"core::fmt::Void"*, %"core::fmt::Void"** %0, align 8, !nonnull !2
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = bitcast { i8*, i8* }* %2 to %"core::fmt::Void"**
  store %"core::fmt::Void"* %6, %"core::fmt::Void"** %7, align 8
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %9 = bitcast i8** %8 to i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)**
  store i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)* %4, i1 (%"core::fmt::Void"*, %"core::fmt::Formatter"*)** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !2
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8, !nonnull !2
  %14 = insertvalue { i8*, i8* } undef, i8* %11, 0
  %15 = insertvalue { i8*, i8* } %14, i8* %13, 1
  ret { i8*, i8* } %15
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17he0c6b63112294443E"(i64* noalias readonly align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(96) %f) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
; call core::fmt::Formatter::debug_lower_hex
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h90bd9b6eeff0d48aE(%"core::fmt::Formatter"* noalias readonly align 8 dereferenceable(96) %f)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %1, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %2 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h62a07b91be28651eE(%"core::fmt::Formatter"* noalias readonly align 8 dereferenceable(96) %f)
  br label %bb5

bb3:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %3 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h22354132e712f8deE"(i64* noalias readonly align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(96) %f)
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3
  br label %bb11

bb5:                                              ; preds = %bb2
  br i1 %2, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h7face90fc68d4b82E"(i64* noalias readonly align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(96) %f)
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %0, align 1
  br label %bb9

bb7:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h816df81b6117ada5E"(i64* noalias readonly align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(96) %f)
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb10

bb9:                                              ; preds = %bb6
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb4
  %9 = load i8, i8* %0, align 1, !range !4
  %10 = trunc i8 %9 to i1
  ret i1 %10
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h051a28c28e177c3eE(%"core::fmt::Arguments"* noalias nocapture sret dereferenceable(48), [0 x { [0 x i8]*, i64 }]* noalias nonnull readonly align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i8* }]* noalias nonnull readonly align 8 %args.0, i64 %args.1) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %1 = bitcast { i64*, i64 }* %_4 to {}**
  store {}* null, {}** %1, align 8
  %2 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %2, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %2, i32 0, i32 1
  store i64 %pieces.1, i64* %4, align 8
  %5 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 3
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %5, i32 0, i32 0
  store i64* %7, i64** %10, align 8
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %5, i32 0, i32 1
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 5
  %13 = getelementptr inbounds { [0 x { i8*, i8* }]*, i64 }, { [0 x { i8*, i8* }]*, i64 }* %12, i32 0, i32 0
  store [0 x { i8*, i8* }]* %args.0, [0 x { i8*, i8* }]** %13, align 8
  %14 = getelementptr inbounds { [0 x { i8*, i8* }]*, i64 }, { [0 x { i8*, i8* }]*, i64 }* %12, i32 0, i32 1
  store i64 %args.1, i64* %14, align 8
  ret void
}

; core::mem::needs_drop
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @_ZN4core3mem10needs_drop17h31d0057b544fa456E() unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  store i8 0, i8* %0, align 1
  %1 = load i8, i8* %0, align 1, !range !4
  %2 = trunc i8 %1 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %2
}

; core::mem::drop
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3mem4drop17h4cdf0a3e3e40b7a7E(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* noalias nocapture dereferenceable(72) %_x) unnamed_addr #0 {
start:
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hc51585cd83908081E(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72) %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::drop
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3mem4drop17h679ae7ecf8868ad3E({ [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* noalias nocapture dereferenceable(56) %_x) unnamed_addr #0 {
start:
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hcf3573a1642759c0E({ [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* align 8 dereferenceable(56) %_x)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::swap
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3mem4swap17h50a8aacfb63a3675E(i64* align 8 dereferenceable(8) %x, i64* align 8 dereferenceable(8) %y) unnamed_addr #0 {
start:
; call core::ptr::swap_nonoverlapping_one
  call void @_ZN4core3ptr23swap_nonoverlapping_one17h9839fdf89e09ad9eE(i64* %x, i64* %y)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::swap
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3mem4swap17hc1a237230401d0a3E(%"serde_json::value::Value"* align 8 dereferenceable(32) %x, %"serde_json::value::Value"* align 8 dereferenceable(32) %y) unnamed_addr #0 {
start:
; call core::ptr::swap_nonoverlapping_one
  call void @_ZN4core3ptr23swap_nonoverlapping_one17hfcb135908b6e21dfE(%"serde_json::value::Value"* %x, %"serde_json::value::Value"* %y)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3mem6forget17h7b9416a6430bef4eE(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* noalias nocapture dereferenceable(24) %t) unnamed_addr #0 {
start:
  %_2.i = alloca %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", align 8
  %_3 = alloca %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", align 8
  %_2 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>", align 8
  %0 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %_3 to i8*
  %1 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  %2 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %_2.i to i8*
  %3 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !noalias !17
  %4 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %_2 to %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*
  %5 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %_2.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !noalias !20
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3mem6forget17h9d730f8dd4ca169aE(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(632) %t) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"**
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %t, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %1, align 8, !noalias !22
  %2 = load i64*, i64** %0, align 8, !noalias !22, !nonnull !2
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::forget
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3mem6forget17hade2db9dd77e4124E(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %t) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %t, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %1, align 8, !noalias !25
  %2 = load i64*, i64** %0, align 8, !noalias !25, !nonnull !2
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::mem::replace
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3mem7replace17h567324519328cb70E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32), %"serde_json::value::Value"* align 8 dereferenceable(32) %dest, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
; invoke core::mem::swap
  invoke void @_ZN4core3mem4swap17hc1a237230401d0a3E(%"serde_json::value::Value"* align 8 dereferenceable(32) %dest, %"serde_json::value::Value"* align 8 dereferenceable(32) %src)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = bitcast %"serde_json::value::Value"* %0 to i8*
  %9 = bitcast %"serde_json::value::Value"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  ret void

bb3:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %src) #14
  br label %bb1

cleanup:                                          ; preds = %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3
}

; core::num::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core3num12NonZeroUsize13new_unchecked17h2263a40fd8c4d657E(i64 %n) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 %n, i64* %0, align 8
  %1 = load i64, i64* %0, align 8, !range !28
  ret i64 %1
}

; core::num::NonZeroUsize::get
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core3num12NonZeroUsize3get17hfb0f2c1a07a6cba4E(i64 %self) unnamed_addr #0 {
start:
  ret i64 %self
}

; core::num::<impl i32>::wrapping_abs
; Function Attrs: inlinehint uwtable
define internal i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_abs17hd60904074f74e421E"(i32 %self) unnamed_addr #0 {
start:
  %sign = ashr i32 %self, 31
  %_5 = xor i32 %self, %sign
; call core::num::<impl i32>::wrapping_sub
  %0 = call i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_sub17ha0572a7d925de5faE"(i32 %_5, i32 %sign)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; core::num::<impl i32>::wrapping_sub
; Function Attrs: inlinehint uwtable
define internal i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_sub17ha0572a7d925de5faE"(i32 %self, i32 %rhs) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = sub i32 %self, %rhs
  store i32 %1, i32* %0, align 4
  %2 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; core::num::<impl i32>::saturating_add
; Function Attrs: inlinehint uwtable
define internal i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$14saturating_add17h68629e871c7c6c0eE"(i32 %self, i32 %rhs) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = call i32 @llvm.sadd.sat.i32(i32 %self, i32 %rhs)
  store i32 %1, i32* %0, align 4
  %2 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; core::num::<impl i32>::saturating_sub
; Function Attrs: inlinehint uwtable
define internal i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$14saturating_sub17h462f20001e041eabE"(i32 %self, i32 %rhs) unnamed_addr #0 {
start:
  %0 = alloca i32, align 4
  %1 = call i32 @llvm.ssub.sat.i32(i32 %self, i32 %rhs)
  store i32 %1, i32* %0, align 4
  %2 = load i32, i32* %0, align 4
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %2
}

; core::num::<impl i64>::wrapping_add
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core3num21_$LT$impl$u20$i64$GT$12wrapping_add17h02562b4d59baa712E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = add i64 %self, %rhs
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::num::<impl i64>::wrapping_neg
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core3num21_$LT$impl$u20$i64$GT$12wrapping_neg17h28bb4a02d4eb7217E"(i64 %self) unnamed_addr #0 {
start:
; call core::num::<impl i64>::overflowing_neg
  %0 = call { i64, i8 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$15overflowing_neg17h73cec7ede8cdf352E"(i64 %self)
  %1 = extractvalue { i64, i8 } %0, 0
  %2 = extractvalue { i64, i8 } %0, 1
  %3 = trunc i8 %2 to i1
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::num::<impl i64>::overflowing_neg
; Function Attrs: inlinehint uwtable
define internal { i64, i8 } @"_ZN4core3num21_$LT$impl$u20$i64$GT$15overflowing_neg17h73cec7ede8cdf352E"(i64 %self) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %_3 = xor i64 %self, -1
; call core::num::<impl i64>::wrapping_add
  %1 = call i64 @"_ZN4core3num21_$LT$impl$u20$i64$GT$12wrapping_add17h02562b4d59baa712E"(i64 %_3, i64 1)
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp eq i64 %self, -9223372036854775808
  %2 = bitcast { i64, i8 }* %0 to i64*
  store i64 %1, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %4 = zext i1 %_5 to i8
  store i8 %4, i8* %3, align 8
  %5 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i8
  %11 = insertvalue { i64, i8 } undef, i64 %6, 0
  %12 = insertvalue { i64, i8 } %11, i8 %10, 1
  ret { i64, i8 } %12
}

; core::num::<impl usize>::count_ones
; Function Attrs: inlinehint uwtable
define internal i32 @"_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hc970f90c2341df8bE"(i64 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = call i64 @llvm.ctpop.i64(i64 %self)
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h993a87cd7fb4ce2fE"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::num::<impl usize>::overflowing_add
  %1 = call { i64, i8 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hdb6035a47ab26b96E"(i64 %self, i64 %rhs)
  %a = extractvalue { i64, i8 } %1, 0
  %2 = extractvalue { i64, i8 } %1, 1
  %b = trunc i8 %2 to i1
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %b, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %3, i32 0, i32 1
  store i64 %a, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %5, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %6 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %6, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !range !1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::num::<impl usize>::overflowing_mul
  %1 = call { i64, i8 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h56814a3ec3038d5eE"(i64 %self, i64 %rhs)
  %a = extractvalue { i64, i8 } %1, 0
  %2 = extractvalue { i64, i8 } %1, 1
  %b = trunc i8 %2 to i1
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %b, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %0 to %"core::option::Option<usize>::Some"*
  %4 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %3, i32 0, i32 1
  store i64 %a, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %0 to i64*
  store i64 1, i64* %5, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %6 = bitcast { i64, i64 }* %0 to i64*
  store i64 0, i64* %6, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !range !1
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; core::num::<impl usize>::wrapping_add
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17h01a27fc2f5a3bbd9E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = add i64 %self, %rhs
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::num::<impl usize>::wrapping_sub
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h38504eb62fe2ddbeE"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = sub i64 %self, %rhs
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %2
}

; core::num::<impl usize>::saturating_mul
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17ha5a86de0800d1c3cE"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
; call core::num::<impl usize>::checked_mul
  %0 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %self, i64 %rhs)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::unwrap_or
  %3 = call i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h87e236fad7116e6cE"(i64 %1, i64 %2, i64 -1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64 %3
}

; core::num::<impl usize>::is_power_of_two
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h842bf3a7439d2e8bE"(i64 %self) unnamed_addr #0 {
start:
; call core::num::<impl usize>::count_ones
  %0 = call i32 @"_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17hc970f90c2341df8bE"(i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = icmp eq i32 %0, 1
  ret i1 %1
}

; core::num::<impl usize>::overflowing_add
; Function Attrs: inlinehint uwtable
define internal { i64, i8 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17hdb6035a47ab26b96E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %3 = extractvalue { i64, i1 } %2, 0
  %4 = extractvalue { i64, i1 } %2, 1
  %5 = zext i1 %4 to i8
  %6 = bitcast { i64, i8 }* %0 to i64*
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %5, i8* %7, align 8
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %a = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !4
  %b = trunc i8 %10 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %11 = bitcast { i64, i8 }* %1 to i64*
  store i64 %a, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %13 = zext i1 %b to i8
  store i8 %13, i8* %12, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i8
  %20 = insertvalue { i64, i8 } undef, i64 %15, 0
  %21 = insertvalue { i64, i8 } %20, i8 %19, 1
  ret { i64, i8 } %21
}

; core::num::<impl usize>::overflowing_mul
; Function Attrs: inlinehint uwtable
define internal { i64, i8 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h56814a3ec3038d5eE"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca { i64, i8 }, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs)
  %3 = extractvalue { i64, i1 } %2, 0
  %4 = extractvalue { i64, i1 } %2, 1
  %5 = zext i1 %4 to i8
  %6 = bitcast { i64, i8 }* %0 to i64*
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 %5, i8* %7, align 8
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %a = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !4
  %b = trunc i8 %10 to i1
  br label %bb1

bb1:                                              ; preds = %start
  %11 = bitcast { i64, i8 }* %1 to i64*
  store i64 %a, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %13 = zext i1 %b to i8
  store i8 %13, i8* %12, align 8
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = trunc i8 %17 to i1
  %19 = zext i1 %18 to i8
  %20 = insertvalue { i64, i8 } undef, i64 %15, 0
  %21 = insertvalue { i64, i8 } %20, i8 %19, 1
  ret { i64, i8 } %21
}

; core::num::<impl core::convert::From<u16> for usize>::from
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17hf6b8b0ad292da3b7E"(i16 %small) unnamed_addr #0 {
start:
  %0 = zext i16 %small to i64
  ret i64 %0
}

; core::ops::function::FnMut::call_mut
; Function Attrs: uwtable
define internal void @_ZN4core3ops8function5FnMut8call_mut17he6483d2d0ed5844bE({}* nonnull align 1 %_1, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* noalias nocapture dereferenceable(56)) unnamed_addr #1 {
start:
  %_2 = alloca { [0 x i64], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }, align 8
  %1 = bitcast { [0 x i64], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_2 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %2 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %1 to i8*
  %3 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 56, i1 false)
  %4 = bitcast { [0 x i64], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_2 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
; call core::mem::drop
  call void @_ZN4core3mem4drop17h679ae7ecf8868ad3E({ [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* noalias nocapture dereferenceable(56) %4)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: uwtable
define internal i32 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hc2a9e62f9b7d09cdE"(i8** %_1) unnamed_addr #1 {
start:
  %_2 = alloca {}, align 1
  %0 = load i8*, i8** %_1, align 8, !nonnull !2
; call core::ops::function::FnOnce::call_once
  %1 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h47111142f3acdf45E(i8* nonnull %0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; core::ops::function::FnOnce::call_once
; Function Attrs: uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h2028852fdecb53cdE(%"core::option::Option<serde_json::value::de::KeyClass>"* noalias nocapture sret dereferenceable(24), %"serde_json::value::de::KeyClass::Map"* noalias nocapture dereferenceable(24)) unnamed_addr #1 {
start:
  %_2 = alloca { [0 x i64], %"serde_json::value::de::KeyClass::Map", [0 x i64] }, align 8
  %2 = bitcast { [0 x i64], %"serde_json::value::de::KeyClass::Map", [0 x i64] }* %_2 to %"serde_json::value::de::KeyClass::Map"*
  %3 = bitcast %"serde_json::value::de::KeyClass::Map"* %2 to i8*
  %4 = bitcast %"serde_json::value::de::KeyClass::Map"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast { [0 x i64], %"serde_json::value::de::KeyClass::Map", [0 x i64] }* %_2 to %"serde_json::value::de::KeyClass::Map"*
; call core::option::Option::Some
  call void @_ZN4core6option6Option4Some17h2523eded959c5a46E(%"core::option::Option<serde_json::value::de::KeyClass>"* noalias nocapture sret dereferenceable(24) %0, %"serde_json::value::de::KeyClass::Map"* noalias nocapture dereferenceable(24) %5)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h47111142f3acdf45E(i8* nonnull) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca i8*, align 8
  store i8* %0, i8** %_1, align 8
; invoke std::rt::lang_start::{{closure}}
  %2 = invoke i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h841fc13b70591440E"(i8** align 8 dereferenceable(8) %_1)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i32 %2

bb3:                                              ; preds = %cleanup
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb3
}

; core::ops::function::FnOnce::call_once
; Function Attrs: uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h870f634522eb8bb0E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32), %"serde_json::number::Number"* noalias nocapture dereferenceable(16)) unnamed_addr #1 {
start:
  %_2 = alloca { [0 x i64], %"serde_json::number::Number", [0 x i64] }, align 8
  %2 = bitcast { [0 x i64], %"serde_json::number::Number", [0 x i64] }* %_2 to %"serde_json::number::Number"*
  %3 = bitcast %"serde_json::number::Number"* %2 to i8*
  %4 = bitcast %"serde_json::number::Number"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast { [0 x i64], %"serde_json::number::Number", [0 x i64] }* %_2 to %"serde_json::number::Number"*
; call serde_json::value::Value::Number
  call void @_ZN10serde_json5value5Value6Number17h2bfe5d5abfb2853fE(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %0, %"serde_json::number::Number"* noalias nocapture dereferenceable(16) %5)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hcec0eeb707454cfbE(%"core::option::Option<alloc::string::String>"* noalias nocapture sret dereferenceable(24), %"alloc::string::String"* noalias nocapture dereferenceable(24)) unnamed_addr #1 {
start:
  %_2 = alloca { [0 x i64], %"alloc::string::String", [0 x i64] }, align 8
  %2 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64] }* %_2 to %"alloc::string::String"*
  %3 = bitcast %"alloc::string::String"* %2 to i8*
  %4 = bitcast %"alloc::string::String"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64] }* %_2 to %"alloc::string::String"*
; call core::option::Option::Some
  call void @_ZN4core6option6Option4Some17h19daef10bc9152f1E(%"core::option::Option<alloc::string::String>"* noalias nocapture sret dereferenceable(24) %0, %"alloc::string::String"* noalias nocapture dereferenceable(24) %5)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17hef471100d87370afE(i64* noalias readonly align 8 dereferenceable(8), i64* noalias readonly align 8 dereferenceable(8)) unnamed_addr #1 {
start:
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_2 to i64**
  %5 = load i64*, i64** %4, align 8, !nonnull !2
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8, !nonnull !2
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h442379464eedd660E"(i64* noalias readonly align 8 dereferenceable(8) %5, i64* noalias readonly align 8 dereferenceable(8) %7), !range !16
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %8
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h0ac5538f70fbdd71E(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** align 8 dereferenceable(8)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_1 = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**, align 8
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %0, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*** %_1, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb3:                                              ; preds = %start
  %8 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*** %_1, align 8, !nonnull !2
  %9 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %8 to i64**
  %10 = load i64*, i64** %9, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17haf65effeee696eebE(i64* nonnull %10)
  br label %bb1

bb4:                                              ; No predecessors!
  %11 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*** %_1, align 8, !nonnull !2
  %12 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %11 to i64**
  %13 = load i64*, i64** %12, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17haf65effeee696eebE(i64* nonnull %13) #14
  br label %bb2
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h0bc1e67eb0e9aa9eE(%"serde_json::value::de::KeyClass::Map"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_1 = alloca %"serde_json::value::de::KeyClass::Map"*, align 8
  store %"serde_json::value::de::KeyClass::Map"* %0, %"serde_json::value::de::KeyClass::Map"** %_1, align 8
  %1 = load %"serde_json::value::de::KeyClass::Map"*, %"serde_json::value::de::KeyClass::Map"** %_1, align 8, !nonnull !2
  %2 = load %"serde_json::value::de::KeyClass::Map"*, %"serde_json::value::de::KeyClass::Map"** %_1, align 8, !nonnull !2
  %3 = bitcast %"serde_json::value::de::KeyClass::Map"* %2 to %"alloc::string::String"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h11ddbfeb9fbe884aE(%"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(64)) unnamed_addr #1 {
start:
  %_1 = alloca %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"*, align 8
  store %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %0, %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"** %_1, align 8
  %1 = load %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"** %_1, align 8, !nonnull !2
  %2 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %1 to %"alloc::string::String"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h15bcacccb083e06bE({ [0 x i8]*, i64 }* align 8 dereferenceable(16)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_1 = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %_1, align 8
  br label %bb3

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb3:                                              ; preds = %start
  %8 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %_1, align 8, !nonnull !2
  %9 = bitcast { [0 x i8]*, i64 }* %8 to { i8*, i64 }*
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !nonnull !2
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h1b8b080570ed8314E(i8* nonnull %11, i64 %13)
  br label %bb1

bb4:                                              ; No predecessors!
  %14 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %_1, align 8, !nonnull !2
  %15 = bitcast { [0 x i8]*, i64 }* %14 to { i8*, i64 }*
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !nonnull !2
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h1b8b080570ed8314E(i8* nonnull %17, i64 %19) #14
  br label %bb2
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h164d76c7649c96aaE(%"core::result::Result<f64, serde_json::error::Error>"* align 8 dereferenceable(16)) unnamed_addr #1 {
start:
  %_1 = alloca %"core::result::Result<f64, serde_json::error::Error>"*, align 8
  store %"core::result::Result<f64, serde_json::error::Error>"* %0, %"core::result::Result<f64, serde_json::error::Error>"** %_1, align 8
  %1 = load %"core::result::Result<f64, serde_json::error::Error>"*, %"core::result::Result<f64, serde_json::error::Error>"** %_1, align 8, !nonnull !2
  %2 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %1 to i64*
  %_2 = load i64, i64* %2, align 8, !range !1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %4 = load %"core::result::Result<f64, serde_json::error::Error>"*, %"core::result::Result<f64, serde_json::error::Error>"** %_1, align 8, !nonnull !2
  %5 = bitcast %"core::result::Result<f64, serde_json::error::Error>"* %4 to %"core::result::Result<f64, serde_json::error::Error>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<f64, serde_json::error::Error>::Err", %"core::result::Result<f64, serde_json::error::Error>::Err"* %5, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %6)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h1c19845aec3eeb70E(%"std::io::error::Custom"** align 8 dereferenceable(8)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_1 = alloca %"std::io::error::Custom"**, align 8
  store %"std::io::error::Custom"** %0, %"std::io::error::Custom"*** %_1, align 8
  %2 = load %"std::io::error::Custom"**, %"std::io::error::Custom"*** %_1, align 8, !nonnull !2
  %3 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %2, align 8, !nonnull !2
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbe6d2c49d595ed03E(%"std::io::error::Custom"* align 8 dereferenceable(24) %3)
          to label %bb3 unwind label %cleanup

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %4 = bitcast { i8*, i32 }* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb3:                                              ; preds = %start
  %10 = load %"std::io::error::Custom"**, %"std::io::error::Custom"*** %_1, align 8, !nonnull !2
  %11 = bitcast %"std::io::error::Custom"** %10 to i64**
  %12 = load i64*, i64** %11, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h284aa316ff9e6a63E(i64* nonnull %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = load %"std::io::error::Custom"**, %"std::io::error::Custom"*** %_1, align 8, !nonnull !2
  %14 = bitcast %"std::io::error::Custom"** %13 to i64**
  %15 = load i64*, i64** %14, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h284aa316ff9e6a63E(i64* nonnull %15) #14
  br label %bb2

cleanup:                                          ; preds = %start
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb4
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h1c670304e478fd14E({ i64*, i64 }* align 8 dereferenceable(16) %_1) unnamed_addr #1 {
start:
; call <alloc::vec::SetLenOnDrop as core::ops::drop::Drop>::drop
  call void @"_ZN66_$LT$alloc..vec..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf176bf106cc533abE"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h2b4f7159a46d5c41E(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_1 = alloca %"alloc::vec::Vec<serde_json::value::Value>"*, align 8
  store %"alloc::vec::Vec<serde_json::value::Value>"* %0, %"alloc::vec::Vec<serde_json::value::Value>"** %_1, align 8
  %_2 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %_1, align 8, !nonnull !2
; invoke <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
  invoke void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h52dda619c4a96fefE"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %_2)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %8 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %_1, align 8, !nonnull !2
  %9 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %8 to { i64*, i64 }*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hc17b956e9bcf49b9E({ i64*, i64 }* align 8 dereferenceable(16) %9) #14
  br label %bb1

bb4:                                              ; preds = %start
  %10 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %_1, align 8, !nonnull !2
  %11 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %10 to { i64*, i64 }*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hc17b956e9bcf49b9E({ i64*, i64 }* align 8 dereferenceable(16) %11)
  br label %bb2

cleanup:                                          ; preds = %start
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb3
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h2f282bef83329322E(%"std::io::error::Repr"* align 8 dereferenceable(16)) unnamed_addr #1 {
start:
  %_1 = alloca %"std::io::error::Repr"*, align 8
  store %"std::io::error::Repr"* %0, %"std::io::error::Repr"** %_1, align 8
  %1 = load %"std::io::error::Repr"*, %"std::io::error::Repr"** %_1, align 8, !nonnull !2
  %2 = bitcast %"std::io::error::Repr"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !29
  %_2 = zext i8 %3 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %bb2, %start, %start
  ret void

bb2:                                              ; preds = %start
  %4 = load %"std::io::error::Repr"*, %"std::io::error::Repr"** %_1, align 8, !nonnull !2
  %5 = bitcast %"std::io::error::Repr"* %4 to %"std::io::error::Repr::Custom"*
  %6 = getelementptr inbounds %"std::io::error::Repr::Custom", %"std::io::error::Repr::Custom"* %5, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h1c19845aec3eeb70E(%"std::io::error::Custom"** align 8 dereferenceable(8) %6)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_1 = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %0, %"alloc::string::String"** %_1, align 8
  %1 = load %"alloc::string::String"*, %"alloc::string::String"** %_1, align 8, !nonnull !2
  %2 = bitcast %"alloc::string::String"* %1 to %"alloc::vec::Vec<u8>"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17haafb84759d87e45dE(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h40ee9357664d7dc0E(%"serde_json::error::ErrorImpl"** align 8 dereferenceable(8)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_1 = alloca %"serde_json::error::ErrorImpl"**, align 8
  store %"serde_json::error::ErrorImpl"** %0, %"serde_json::error::ErrorImpl"*** %_1, align 8
  %2 = load %"serde_json::error::ErrorImpl"**, %"serde_json::error::ErrorImpl"*** %_1, align 8, !nonnull !2
  %3 = load %"serde_json::error::ErrorImpl"*, %"serde_json::error::ErrorImpl"** %2, align 8, !nonnull !2
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h80e1eadc6ba0f8f7E(%"serde_json::error::ErrorImpl"* align 8 dereferenceable(40) %3)
          to label %bb3 unwind label %cleanup

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %4 = bitcast { i8*, i32 }* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb3:                                              ; preds = %start
  %10 = load %"serde_json::error::ErrorImpl"**, %"serde_json::error::ErrorImpl"*** %_1, align 8, !nonnull !2
  %11 = bitcast %"serde_json::error::ErrorImpl"** %10 to i64**
  %12 = load i64*, i64** %11, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h2dc0fdec5dcc27f8E(i64* nonnull %12)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %13 = load %"serde_json::error::ErrorImpl"**, %"serde_json::error::ErrorImpl"*** %_1, align 8, !nonnull !2
  %14 = bitcast %"serde_json::error::ErrorImpl"** %13 to i64**
  %15 = load i64*, i64** %14, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h2dc0fdec5dcc27f8E(i64* nonnull %15) #14
  br label %bb2

cleanup:                                          ; preds = %start
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb4
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h4ac5e5cd794556ddE(%"core::alloc::LayoutErr"* nonnull align 1 %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h52a3dcad0a6096bfE(i8** align 8 dereferenceable(8) %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h5538adda2a3dd408E(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %_1) unnamed_addr #1 {
start:
; call <alloc::collections::btree::map::BTreeMap<K,V> as core::ops::drop::Drop>::drop
  call void @"_ZN95_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfc297fa4412931e7E"(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h598a848fad10f46eE(%"core::option::Option<serde_json::value::Value>"* align 8 dereferenceable(32)) unnamed_addr #1 {
start:
  %_1 = alloca %"core::option::Option<serde_json::value::Value>"*, align 8
  store %"core::option::Option<serde_json::value::Value>"* %0, %"core::option::Option<serde_json::value::Value>"** %_1, align 8
  %1 = load %"core::option::Option<serde_json::value::Value>"*, %"core::option::Option<serde_json::value::Value>"** %_1, align 8, !nonnull !2
  %2 = bitcast %"core::option::Option<serde_json::value::Value>"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !15
  %4 = sub i8 %3, 6
  %5 = icmp ule i8 %4, 0
  %_2 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_2, 0
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %7 = load %"core::option::Option<serde_json::value::Value>"*, %"core::option::Option<serde_json::value::Value>"** %_1, align 8, !nonnull !2
  %8 = bitcast %"core::option::Option<serde_json::value::Value>"* %7 to %"core::option::Option<serde_json::value::Value>::Some"*
  %9 = bitcast %"core::option::Option<serde_json::value::Value>::Some"* %8 to %"serde_json::value::Value"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %9)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h61d59176afeb8a22E(%"serde_json::error::ErrorCode"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_1 = alloca %"serde_json::error::ErrorCode"*, align 8
  store %"serde_json::error::ErrorCode"* %0, %"serde_json::error::ErrorCode"** %_1, align 8
  %1 = load %"serde_json::error::ErrorCode"*, %"serde_json::error::ErrorCode"** %_1, align 8, !nonnull !2
  %2 = bitcast %"serde_json::error::ErrorCode"* %1 to i64*
  %_2 = load i64, i64* %2, align 8, !range !30
  switch i64 %_2, label %bb1 [
    i64 0, label %bb2
    i64 1, label %bb3
    i64 2, label %bb1
    i64 3, label %bb1
    i64 4, label %bb1
    i64 5, label %bb1
    i64 6, label %bb1
    i64 7, label %bb1
    i64 8, label %bb1
    i64 9, label %bb1
    i64 10, label %bb1
    i64 11, label %bb1
    i64 12, label %bb1
    i64 13, label %bb1
    i64 14, label %bb1
    i64 15, label %bb1
    i64 16, label %bb1
    i64 17, label %bb1
    i64 18, label %bb1
    i64 19, label %bb1
    i64 20, label %bb1
    i64 21, label %bb1
    i64 22, label %bb1
  ]

bb1:                                              ; preds = %bb2, %bb3, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start, %start
  ret void

bb2:                                              ; preds = %start
  %3 = load %"serde_json::error::ErrorCode"*, %"serde_json::error::ErrorCode"** %_1, align 8, !nonnull !2
  %4 = bitcast %"serde_json::error::ErrorCode"* %3 to %"serde_json::error::ErrorCode::Message"*
  %5 = getelementptr inbounds %"serde_json::error::ErrorCode::Message", %"serde_json::error::ErrorCode::Message"* %4, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h15bcacccb083e06bE({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %5)
  br label %bb1

bb3:                                              ; preds = %start
  %6 = load %"serde_json::error::ErrorCode"*, %"serde_json::error::ErrorCode"** %_1, align 8, !nonnull !2
  %7 = bitcast %"serde_json::error::ErrorCode"* %6 to %"serde_json::error::ErrorCode::Io"*
  %8 = getelementptr inbounds %"serde_json::error::ErrorCode::Io", %"serde_json::error::ErrorCode::Io"* %7, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h769090433d633d89E(%"std::io::error::Error"* align 8 dereferenceable(16) %8)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h6ab0cad95da20374E(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56)) unnamed_addr #1 {
start:
  %_1 = alloca %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, align 8
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %_1, align 8
  %1 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %_1, align 8, !nonnull !2
  %2 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %1, i32 0, i32 3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17haafb84759d87e45dE(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h7479a83b6311fd5fE({ [0 x i8] }* nonnull align 1 %_1) unnamed_addr #1 {
start:
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h769090433d633d89E(%"std::io::error::Error"* align 8 dereferenceable(16)) unnamed_addr #1 {
start:
  %_1 = alloca %"std::io::error::Error"*, align 8
  store %"std::io::error::Error"* %0, %"std::io::error::Error"** %_1, align 8
  %1 = load %"std::io::error::Error"*, %"std::io::error::Error"** %_1, align 8, !nonnull !2
  %2 = bitcast %"std::io::error::Error"* %1 to %"std::io::error::Repr"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h2f282bef83329322E(%"std::io::error::Repr"* align 8 dereferenceable(16) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h80e1eadc6ba0f8f7E(%"serde_json::error::ErrorImpl"* align 8 dereferenceable(40)) unnamed_addr #1 {
start:
  %_1 = alloca %"serde_json::error::ErrorImpl"*, align 8
  store %"serde_json::error::ErrorImpl"* %0, %"serde_json::error::ErrorImpl"** %_1, align 8
  %1 = load %"serde_json::error::ErrorImpl"*, %"serde_json::error::ErrorImpl"** %_1, align 8, !nonnull !2
  %2 = bitcast %"serde_json::error::ErrorImpl"* %1 to %"serde_json::error::ErrorCode"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h61d59176afeb8a22E(%"serde_json::error::ErrorCode"* align 8 dereferenceable(24) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h90442ee43651c791E({}* nonnull align 1 %_1.0, [3 x i64]* noalias readonly align 8 dereferenceable(24) %_1.1) unnamed_addr #1 {
start:
  %0 = bitcast [3 x i64]* %_1.1 to void ({}*)**
  %1 = getelementptr inbounds void ({}*)*, void ({}*)** %0, i64 0
  %2 = load void ({}*)*, void ({}*)** %1, align 8, !invariant.load !2, !nonnull !2
  call void %2({}* align 1 %_1.0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8)) unnamed_addr #1 {
start:
  %_1 = alloca i64**, align 8
  store i64** %0, i64*** %_1, align 8
  %1 = load i64**, i64*** %_1, align 8, !nonnull !2
  %2 = bitcast i64** %1 to %"serde_json::error::ErrorImpl"**
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h40ee9357664d7dc0E(%"serde_json::error::ErrorImpl"** align 8 dereferenceable(8) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17haafb84759d87e45dE(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %_1, align 8
  %_2 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_1, align 8, !nonnull !2
; invoke <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
  invoke void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7e6fb18267436a41E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_2)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %8 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_1, align 8, !nonnull !2
  %9 = bitcast %"alloc::vec::Vec<u8>"* %8 to { i8*, i64 }*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hc7411755b6bb1620E({ i8*, i64 }* align 8 dereferenceable(16) %9) #14
  br label %bb1

bb4:                                              ; preds = %start
  %10 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %_1, align 8, !nonnull !2
  %11 = bitcast %"alloc::vec::Vec<u8>"* %10 to { i8*, i64 }*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hc7411755b6bb1620E({ i8*, i64 }* align 8 dereferenceable(16) %11)
  br label %bb2

cleanup:                                          ; preds = %start
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb3
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hb3f050d7616e3382E(%"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_1 = alloca %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"*, align 8
  store %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %0, %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"** %_1, align 8
  %1 = load %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"*, %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"** %_1, align 8, !nonnull !2
  %2 = bitcast %"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* %1 to %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h5538adda2a3dd408E(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hba940374fc5e954dE(%"core::option::Option<serde_json::value::de::KeyClass>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_1 = alloca %"core::option::Option<serde_json::value::de::KeyClass>"*, align 8
  store %"core::option::Option<serde_json::value::de::KeyClass>"* %0, %"core::option::Option<serde_json::value::de::KeyClass>"** %_1, align 8
  %1 = load %"core::option::Option<serde_json::value::de::KeyClass>"*, %"core::option::Option<serde_json::value::de::KeyClass>"** %_1, align 8, !nonnull !2
  %2 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %1 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp ule {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %6 = load %"core::option::Option<serde_json::value::de::KeyClass>"*, %"core::option::Option<serde_json::value::de::KeyClass>"** %_1, align 8, !nonnull !2
  %7 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %6 to %"core::option::Option<serde_json::value::de::KeyClass>::Some"*
  %8 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>::Some"* %7 to %"serde_json::value::de::KeyClass::Map"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h0bc1e67eb0e9aa9eE(%"serde_json::value::de::KeyClass::Map"* align 8 dereferenceable(24) %8)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16)) unnamed_addr #1 {
start:
  %_1 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"*, align 8
  store %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %0, %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"** %_1, align 8
  %1 = load %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"*, %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"** %_1, align 8, !nonnull !2
  %2 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %6 = load %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"*, %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"** %_1, align 8, !nonnull !2
  %7 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %6 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %8 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %7, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %8)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hbe6d2c49d595ed03E(%"std::io::error::Custom"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_1 = alloca %"std::io::error::Custom"*, align 8
  store %"std::io::error::Custom"* %0, %"std::io::error::Custom"** %_1, align 8
  %1 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %_1, align 8, !nonnull !2
  %2 = bitcast %"std::io::error::Custom"* %1 to { {}*, [3 x i64]* }*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17he239720239f596d4E({ {}*, [3 x i64]* }* align 8 dereferenceable(16) %2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hc17b956e9bcf49b9E({ i64*, i64 }* align 8 dereferenceable(16) %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hcbd769255ba4170dE"({ i64*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hc51585cd83908081E(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72) %_1) unnamed_addr #1 {
start:
; call <alloc::collections::btree::map::IntoIter<K,V> as core::ops::drop::Drop>::drop
  call void @"_ZN95_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1e867d2fc2e6db12E"(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hc7411755b6bb1620E({ i8*, i64 }* align 8 dereferenceable(16) %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524dc311f454e1b9E"({ i8*, i64 }* align 8 dereferenceable(16) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hc9bb483e6409be7bE(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* align 8 dereferenceable(40)) unnamed_addr #1 {
start:
  %_1 = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*, align 8
  store %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0, %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"** %_1, align 8
  %1 = load %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*, %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"** %_1, align 8, !nonnull !2
  %2 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %1 to i64*
  %_2 = load i64, i64* %2, align 8, !range !1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb2, label %bb3

bb1:                                              ; preds = %bb2, %bb3
  ret void

bb2:                                              ; preds = %start
  %4 = load %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*, %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"** %_1, align 8, !nonnull !2
  %5 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %4 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %6 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %5, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %6)
  br label %bb1

bb3:                                              ; preds = %start
  %7 = load %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*, %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"** %_1, align 8, !nonnull !2
  %8 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %7 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %9 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %8, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %9)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hcf3573a1642759c0E({ [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* align 8 dereferenceable(56)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_1 = alloca { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*, align 8
  store { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %0, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }** %_1, align 8
  %2 = load { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }** %_1, align 8, !nonnull !2
  %3 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %2 to %"alloc::string::String"*
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %3)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %4 = bitcast { i8*, i32 }* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb2:                                              ; preds = %bb4
  ret void

bb3:                                              ; preds = %cleanup
  %10 = load { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }** %_1, align 8, !nonnull !2
  %11 = getelementptr inbounds { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %10, i32 0, i32 3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %11) #14
  br label %bb1

bb4:                                              ; preds = %start
  %12 = load { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }** %_1, align 8, !nonnull !2
  %13 = getelementptr inbounds { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %12, i32 0, i32 3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %13)
  br label %bb2

cleanup:                                          ; preds = %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb3
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hda2544e7c0eb7314E(%"core::result::Result<u8, serde_json::error::Error>"* align 8 dereferenceable(16)) unnamed_addr #1 {
start:
  %_1 = alloca %"core::result::Result<u8, serde_json::error::Error>"*, align 8
  store %"core::result::Result<u8, serde_json::error::Error>"* %0, %"core::result::Result<u8, serde_json::error::Error>"** %_1, align 8
  %1 = load %"core::result::Result<u8, serde_json::error::Error>"*, %"core::result::Result<u8, serde_json::error::Error>"** %_1, align 8, !nonnull !2
  %2 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = trunc i8 %3 to i1
  %_2 = zext i1 %4 to i64
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %6 = load %"core::result::Result<u8, serde_json::error::Error>"*, %"core::result::Result<u8, serde_json::error::Error>"** %_1, align 8, !nonnull !2
  %7 = bitcast %"core::result::Result<u8, serde_json::error::Error>"* %6 to %"core::result::Result<u8, serde_json::error::Error>::Err"*
  %8 = getelementptr inbounds %"core::result::Result<u8, serde_json::error::Error>::Err", %"core::result::Result<u8, serde_json::error::Error>::Err"* %7, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %8)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17he239720239f596d4E({ {}*, [3 x i64]* }* align 8 dereferenceable(16)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_1 = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %0, { {}*, [3 x i64]* }** %_1, align 8
  %2 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_1, align 8, !nonnull !2
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0
  %4 = load {}*, {}** %3, align 8, !nonnull !2
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !nonnull !2
  %7 = bitcast [3 x i64]* %6 to void ({}*)**
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !invariant.load !2, !nonnull !2
  invoke void %9({}* align 1 %4)
          to label %bb3 unwind label %cleanup

bb1:                                              ; preds = %bb3
  ret void

bb2:                                              ; preds = %bb4
  %10 = bitcast { i8*, i32 }* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb3:                                              ; preds = %start
  %16 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_1, align 8, !nonnull !2
  %17 = bitcast { {}*, [3 x i64]* }* %16 to { i8*, i64* }*
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !nonnull !2
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %17, i32 0, i32 1
  %21 = load i64*, i64** %20, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hbe0df5002b0d92c2E(i8* nonnull %19, i64* noalias readonly align 8 dereferenceable(24) %21)
  br label %bb1

bb4:                                              ; preds = %cleanup
  %22 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_1, align 8, !nonnull !2
  %23 = bitcast { {}*, [3 x i64]* }* %22 to { i8*, i64* }*
  %24 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %23, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !nonnull !2
  %26 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %23, i32 0, i32 1
  %27 = load i64*, i64** %26, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hbe0df5002b0d92c2E(i8* nonnull %25, i64* noalias readonly align 8 dereferenceable(24) %27) #14
  br label %bb2

cleanup:                                          ; preds = %start
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb4
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17he919cbe3bcefc60cE(%"core::option::Option<alloc::string::String>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_1 = alloca %"core::option::Option<alloc::string::String>"*, align 8
  store %"core::option::Option<alloc::string::String>"* %0, %"core::option::Option<alloc::string::String>"** %_1, align 8
  %1 = load %"core::option::Option<alloc::string::String>"*, %"core::option::Option<alloc::string::String>"** %_1, align 8, !nonnull !2
  %2 = bitcast %"core::option::Option<alloc::string::String>"* %1 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp ule {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %6 = load %"core::option::Option<alloc::string::String>"*, %"core::option::Option<alloc::string::String>"** %_1, align 8, !nonnull !2
  %7 = bitcast %"core::option::Option<alloc::string::String>"* %6 to %"core::option::Option<alloc::string::String>::Some"*
  %8 = bitcast %"core::option::Option<alloc::string::String>::Some"* %7 to %"alloc::string::String"*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %8)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hef849281d57fefd4E(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* align 8 dereferenceable(56)) unnamed_addr #1 {
start:
  %_1 = alloca %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"*, align 8
  store %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %0, %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"** %_1, align 8
  %1 = load %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"*, %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"** %_1, align 8, !nonnull !2
  %2 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %1, i32 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !15
  %4 = sub i8 %3, 6
  %5 = icmp ule i8 %4, 0
  %_2 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_2, 0
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %7 = load %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"*, %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"** %_1, align 8, !nonnull !2
  %8 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %7 to %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"*
  %9 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"* %8 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hcf3573a1642759c0E({ [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* align 8 dereferenceable(56) %9)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hf24f43d2f47b4e17E([0 x %"serde_json::value::Value"]* nonnull align 8, i64) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_10 = alloca %"serde_json::value::Value"*, align 8
  %_9 = alloca %"serde_json::value::Value"*, align 8
  %_4 = alloca i64, align 8
  %_1 = alloca { [0 x %"serde_json::value::Value"]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 0
  store [0 x %"serde_json::value::Value"]* %0, [0 x %"serde_json::value::Value"]** %3, align 8
  %4 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 0
  %6 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %5, align 8, !nonnull !2
  %7 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 1
  %_3 = load i64, i64* %7, align 8
  br i1 false, label %bb7, label %bb12

bb1:                                              ; preds = %bb6, %bb11
  ret void

bb2:                                              ; preds = %bb4, %bb9
  %8 = bitcast { i8*, i32 }* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb3:                                              ; preds = %bb4
  %14 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 0
  %15 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %14, align 8, !nonnull !2
  %16 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %_4, align 8
  %_5 = getelementptr inbounds [0 x %"serde_json::value::Value"], [0 x %"serde_json::value::Value"]* %15, i64 0, i64 %18
  %19 = load i64, i64* %_4, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %_4, align 8
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %_5) #14
  br label %bb4

bb4:                                              ; preds = %bb3, %cleanup1
  %21 = load i64, i64* %_4, align 8
  %_6 = icmp eq i64 %21, %_3
  br i1 %_6, label %bb2, label %bb3

bb5:                                              ; preds = %bb6
  %22 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 0
  %23 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %22, align 8, !nonnull !2
  %24 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* %_4, align 8
  %_7 = getelementptr inbounds [0 x %"serde_json::value::Value"], [0 x %"serde_json::value::Value"]* %23, i64 0, i64 %26
  %27 = load i64, i64* %_4, align 8
  %28 = add i64 %27, 1
  store i64 %28, i64* %_4, align 8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %_7)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5, %bb7
  %29 = load i64, i64* %_4, align 8
  %_8 = icmp eq i64 %29, %_3
  br i1 %_8, label %bb1, label %bb5

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8
  br label %bb6

bb8:                                              ; preds = %bb9
  %_11 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_9, align 8
  %30 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_9, align 8
  %31 = getelementptr inbounds %"serde_json::value::Value", %"serde_json::value::Value"* %30, i64 1
  store %"serde_json::value::Value"* %31, %"serde_json::value::Value"** %_9, align 8
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %_11) #14
  br label %bb9

bb9:                                              ; preds = %bb8, %cleanup
  %32 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_9, align 8
  %33 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_10, align 8
  %_12 = icmp eq %"serde_json::value::Value"* %32, %33
  br i1 %_12, label %bb2, label %bb8

bb10:                                             ; preds = %bb11
  %_13 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_9, align 8
  %34 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_9, align 8
  %35 = getelementptr inbounds %"serde_json::value::Value", %"serde_json::value::Value"* %34, i64 1
  store %"serde_json::value::Value"* %35, %"serde_json::value::Value"** %_9, align 8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %_13)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10, %bb12
  %36 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_9, align 8
  %37 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_10, align 8
  %_14 = icmp eq %"serde_json::value::Value"* %36, %37
  br i1 %_14, label %bb1, label %bb10

bb12:                                             ; preds = %start
  %38 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 0
  %_15.0 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %38, align 8, !nonnull !2
  %39 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %_1, i32 0, i32 1
  %_15.1 = load i64, i64* %39, align 8
  %40 = bitcast [0 x %"serde_json::value::Value"]* %_15.0 to %"serde_json::value::Value"*
  store %"serde_json::value::Value"* %40, %"serde_json::value::Value"** %_9, align 8
  %41 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_9, align 8
  %42 = getelementptr inbounds %"serde_json::value::Value", %"serde_json::value::Value"* %41, i64 %_3
  store %"serde_json::value::Value"* %42, %"serde_json::value::Value"** %_10, align 8
  br label %bb11

cleanup:                                          ; preds = %bb10
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  %45 = extractvalue { i8*, i32 } %43, 1
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %45, i32* %47, align 8
  br label %bb9

cleanup1:                                         ; preds = %bb5
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = extractvalue { i8*, i32 } %48, 1
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  br label %bb4
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32)) unnamed_addr #1 {
start:
  %_1 = alloca %"serde_json::value::Value"*, align 8
  store %"serde_json::value::Value"* %0, %"serde_json::value::Value"** %_1, align 8
  %1 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_1, align 8, !nonnull !2
  %2 = bitcast %"serde_json::value::Value"* %1 to i8*
  %3 = load i8, i8* %2, align 8, !range !31
  %_2 = zext i8 %3 to i64
  switch i64 %_2, label %bb4 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
    i64 3, label %bb2
    i64 4, label %bb3
  ]

bb1:                                              ; preds = %bb2, %bb3, %bb4, %start, %start, %start
  ret void

bb2:                                              ; preds = %start
  %4 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_1, align 8, !nonnull !2
  %5 = bitcast %"serde_json::value::Value"* %4 to %"serde_json::value::Value::String"*
  %6 = getelementptr inbounds %"serde_json::value::Value::String", %"serde_json::value::Value::String"* %5, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %6)
  br label %bb1

bb3:                                              ; preds = %start
  %7 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_1, align 8, !nonnull !2
  %8 = bitcast %"serde_json::value::Value"* %7 to %"serde_json::value::Value::Array"*
  %9 = getelementptr inbounds %"serde_json::value::Value::Array", %"serde_json::value::Value::Array"* %8, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h2b4f7159a46d5c41E(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %9)
  br label %bb1

bb4:                                              ; preds = %start
  %10 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %_1, align 8, !nonnull !2
  %11 = bitcast %"serde_json::value::Value"* %10 to %"serde_json::value::Value::Object"*
  %12 = getelementptr inbounds %"serde_json::value::Value::Object", %"serde_json::value::Value::Object"* %11, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hb3f050d7616e3382E(%"serde_json::map::Map<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %12)
  br label %bb1
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hf7950030576194d1E(%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(104)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_1 = alloca %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %_1, align 8
  %2 = load %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %_1, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8, !range !1
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb2, label %bb5

bb1:                                              ; preds = %bb3
  %5 = bitcast { i8*, i32 }* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %bb4, %start
  ret void

bb3:                                              ; preds = %cleanup
  %11 = load %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %_1, align 8, !nonnull !2
  %12 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %11 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %13 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %12, i32 0, i32 5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %13) #14
  br label %bb1

bb4:                                              ; preds = %bb5
  %14 = load %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %_1, align 8, !nonnull !2
  %15 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %14 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %16 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %15, i32 0, i32 5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %16)
  br label %bb2

bb5:                                              ; preds = %start
  %17 = load %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %_1, align 8, !nonnull !2
  %18 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %17 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %19 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %18, i32 0, i32 3
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %19)
          to label %bb4 unwind label %cleanup

cleanup:                                          ; preds = %bb5
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb3
}

; core::ptr::real_drop_in_place
; Function Attrs: uwtable
define internal void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8)) unnamed_addr #1 {
start:
  %_1 = alloca i64**, align 8
  store i64** %0, i64*** %_1, align 8
  %1 = load i64**, i64*** %_1, align 8, !nonnull !2
  %2 = bitcast i64** %1 to {}**
  %3 = load {}*, {}** %2, align 8
  %4 = icmp ule {}* %3, null
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %6 = load i64**, i64*** %_1, align 8, !nonnull !2
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %6)
  br label %bb1
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr19swap_nonoverlapping17h8938be9dd645b3dfE(i64* %x, i64* %y, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %x1 = bitcast i64* %x to i8*
  %y2 = bitcast i64* %y to i8*
  store i64 8, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %len = mul i64 %1, %count
; call core::ptr::swap_nonoverlapping_bytes
  call void @_ZN4core3ptr25swap_nonoverlapping_bytes17ha203792b44046ebdE(i8* %x1, i8* %y2, i64 %len)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr19swap_nonoverlapping17h9642ae25dba67750E(%"serde_json::value::Value"* %x, %"serde_json::value::Value"* %y, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %x1 = bitcast %"serde_json::value::Value"* %x to i8*
  %y2 = bitcast %"serde_json::value::Value"* %y to i8*
  store i64 32, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %len = mul i64 %1, %count
; call core::ptr::swap_nonoverlapping_bytes
  call void @_ZN4core3ptr25swap_nonoverlapping_bytes17ha203792b44046ebdE(i8* %x1, i8* %y2, i64 %len)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h3f6283f676733e3fE(%"alloc::string::String"* %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %_3 = alloca %"core::ptr::Repr<alloc::string::String>", align 8
  %0 = bitcast { i64*, i64 }* %_4 to %"alloc::string::String"**
  store %"alloc::string::String"* %data, %"alloc::string::String"** %0, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8
  %2 = bitcast %"core::ptr::Repr<alloc::string::String>"* %_3 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %4, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::Repr<alloc::string::String>"* %_3 to { [0 x %"alloc::string::String"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %11, 0
  %15 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %15
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h870249d18a2b2e43E(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::Repr<u8>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to i8**
  store i8* %data, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8
  %2 = bitcast %"core::ptr::Repr<u8>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::Repr<u8>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hf375c166e050924bE(%"serde_json::value::Value"* %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %_3 = alloca %"core::ptr::Repr<serde_json::value::Value>", align 8
  %0 = bitcast { i64*, i64 }* %_4 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %data, %"serde_json::value::Value"** %0, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8
  %2 = bitcast %"core::ptr::Repr<serde_json::value::Value>"* %_3 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %4, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::Repr<serde_json::value::Value>"* %_3 to { [0 x %"serde_json::value::Value"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %11, 0
  %15 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %15
}

; core::ptr::swap_nonoverlapping_one
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr23swap_nonoverlapping_one17h9839fdf89e09ad9eE(i64* %x, i64* %y) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  store i8 0, i8* %_18, align 1
  store i64 8, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb2

bb1:                                              ; preds = %bb10, %bb11
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  %_3 = icmp ult i64 %2, 32
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h8938be9dd645b3dfE(i64* %x, i64* %y, i64 1)
  br label %bb8

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_18, align 1
; call core::ptr::read
  %_14 = call i64 @_ZN4core3ptr4read17h787e0e103a226df8E(i64* %x)
  br label %bb5

bb5:                                              ; preds = %bb4
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17hea16c0c79b8fb67eE(i64* %y, i64* %x, i64 1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_18, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h0751b26afdd110b5E(i64* %y, i64 %_14)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_18, align 1
  br label %bb9

bb8:                                              ; preds = %bb3
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  ret void

bb10:                                             ; preds = %bb11
  store i8 0, i8* %_18, align 1
  br label %bb1

bb11:                                             ; preds = %cleanup
  %9 = load i8, i8* %_18, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb10, label %bb1

cleanup:                                          ; preds = %bb6, %bb5
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb11
}

; core::ptr::swap_nonoverlapping_one
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr23swap_nonoverlapping_one17hfcb135908b6e21dfE(%"serde_json::value::Value"* %x, %"serde_json::value::Value"* %y) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_18 = alloca i8, align 1
  %_14 = alloca %"serde_json::value::Value", align 8
  %z = alloca %"serde_json::value::Value", align 8
  store i8 0, i8* %_18, align 1
  store i64 32, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb2

bb1:                                              ; preds = %bb10, %bb11
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  %_3 = icmp ult i64 %2, 32
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
; call core::ptr::swap_nonoverlapping
  call void @_ZN4core3ptr19swap_nonoverlapping17h9642ae25dba67750E(%"serde_json::value::Value"* %x, %"serde_json::value::Value"* %y, i64 1)
  br label %bb8

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_18, align 1
; call core::ptr::read
  call void @_ZN4core3ptr4read17h0429cf43aa8c9b66E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %z, %"serde_json::value::Value"* %x)
  br label %bb5

bb5:                                              ; preds = %bb4
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17hddb4b2d55463b6dfE(%"serde_json::value::Value"* %y, %"serde_json::value::Value"* %x, i64 1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_18, align 1
  %9 = bitcast %"serde_json::value::Value"* %_14 to i8*
  %10 = bitcast %"serde_json::value::Value"* %z to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hf1a244efc178a16cE(%"serde_json::value::Value"* %y, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_14)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_18, align 1
  br label %bb9

bb8:                                              ; preds = %bb3
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  ret void

bb10:                                             ; preds = %bb11
  store i8 0, i8* %_18, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %z) #14
  br label %bb1

bb11:                                             ; preds = %cleanup
  %11 = load i8, i8* %_18, align 1, !range !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb10, label %bb1

cleanup:                                          ; preds = %bb6, %bb5
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb11
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h66dc1378abbdebbcE(%"serde_json::value::Value"* %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %_3 = alloca %"core::ptr::Repr<serde_json::value::Value>", align 8
  %0 = bitcast { i64*, i64 }* %_4 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %data, %"serde_json::value::Value"** %0, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8
  %2 = bitcast %"core::ptr::Repr<serde_json::value::Value>"* %_3 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %4, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::Repr<serde_json::value::Value>"* %_3 to { [0 x %"serde_json::value::Value"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %11, 0
  %15 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %15
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i64*]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h941274697d1fd162E(i64** %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %_3 = alloca %"core::ptr::Repr<alloc::collections::btree::node::BoxedNode<alloc::string::String, serde_json::value::Value>>", align 8
  %0 = bitcast { i64*, i64 }* %_4 to i64***
  store i64** %data, i64*** %0, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8
  %2 = bitcast %"core::ptr::Repr<alloc::collections::btree::node::BoxedNode<alloc::string::String, serde_json::value::Value>>"* %_3 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %4, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::Repr<alloc::collections::btree::node::BoxedNode<alloc::string::String, serde_json::value::Value>>"* %_3 to { [0 x i64*]*, i64 }*
  %10 = getelementptr inbounds { [0 x i64*]*, i64 }, { [0 x i64*]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i64*]*, [0 x i64*]** %10, align 8
  %12 = getelementptr inbounds { [0 x i64*]*, i64 }, { [0 x i64*]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i64*]*, i64 } undef, [0 x i64*]* %11, 0
  %15 = insertvalue { [0 x i64*]*, i64 } %14, i64 %13, 1
  ret { [0 x i64*]*, i64 } %15
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hcc14581184651ec1E(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::Repr<u8>", align 8
  %0 = bitcast { i8*, i64 }* %_4 to i8**
  store i8* %data, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8
  %2 = bitcast %"core::ptr::Repr<u8>"* %_3 to { i8*, i64 }*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::Repr<u8>"* %_3 to { [0 x i8]*, i64 }*
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1
  ret { [0 x i8]*, i64 } %15
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hcce529bcfc50630fE(%"alloc::string::String"* %data, i64 %len) unnamed_addr #0 {
start:
  %_4 = alloca { i64*, i64 }, align 8
  %_3 = alloca %"core::ptr::Repr<alloc::string::String>", align 8
  %0 = bitcast { i64*, i64 }* %_4 to %"alloc::string::String"**
  store %"alloc::string::String"* %data, %"alloc::string::String"** %0, align 8
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  store i64 %len, i64* %1, align 8
  %2 = bitcast %"core::ptr::Repr<alloc::string::String>"* %_3 to { i64*, i64 }*
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0
  store i64* %4, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"core::ptr::Repr<alloc::string::String>"* %_3 to { [0 x %"alloc::string::String"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %9, i32 0, i32 0
  %11 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %10, align 8
  %12 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %9, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %11, 0
  %15 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %14, i64 %13, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %15
}

; core::ptr::swap_nonoverlapping_bytes
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr25swap_nonoverlapping_bytes17ha203792b44046ebdE(i8* %x, i8* %y, i64 %len) unnamed_addr #0 {
start:
  %self.i.i4 = alloca %"core::mem::manually_drop::ManuallyDrop<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"*, align 8
  %self.i5 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"*, align 8
  %self.i.i = alloca <4 x i64>*, align 8
  %self.i = alloca <4 x i64>*, align 8
  %0 = alloca i64, align 8
  %t1 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>", align 8
  %t = alloca <4 x i64>, align 32
  %i = alloca i64, align 8
  store i64 32, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 0, i64* %i, align 8
  br label %bb2

bb2:                                              ; preds = %bb11, %bb1
  %_8 = load i64, i64* %i, align 8
  %_7 = add i64 %_8, %1
  %_6 = icmp ule i64 %_7, %len
  br i1 %_6, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %_38 = load i64, i64* %i, align 8
  %_37 = icmp ult i64 %_38, %len
  br i1 %_37, label %bb12, label %bb20

bb4:                                              ; preds = %bb2
  %2 = bitcast <4 x i64>* %t to {}*
  br label %bb5

bb5:                                              ; preds = %bb4
  store <4 x i64>* %t, <4 x i64>** %self.i, align 8
  %_5.i = load <4 x i64>*, <4 x i64>** %self.i, align 8, !nonnull !2
  store <4 x i64>* %_5.i, <4 x i64>** %self.i.i, align 8
  %_3.i.i = load <4 x i64>*, <4 x i64>** %self.i.i, align 8, !nonnull !2
  br label %bb6

bb6:                                              ; preds = %bb5
  %t2 = bitcast <4 x i64>* %_3.i.i to i8*
  %_17 = load i64, i64* %i, align 8
; call core::ptr::<impl *mut T>::add
  %_23 = call i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h53a1d84ce18af2b4E"(i8* %x, i64 %_17)
  br label %bb7

bb7:                                              ; preds = %bb6
  %_20 = load i64, i64* %i, align 8
; call core::ptr::<impl *mut T>::add
  %_28 = call i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h53a1d84ce18af2b4E"(i8* %y, i64 %_20)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h07ea2f73c29f8f57E(i8* %_23, i8* %t2, i64 %1)
  br label %bb9

bb9:                                              ; preds = %bb8
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h07ea2f73c29f8f57E(i8* %_28, i8* %_23, i64 %1)
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h07ea2f73c29f8f57E(i8* %t2, i8* %_28, i64 %1)
  br label %bb11

bb11:                                             ; preds = %bb10
  %3 = load i64, i64* %i, align 8
  %4 = add i64 %3, %1
  store i64 %4, i64* %i, align 8
  br label %bb2

bb12:                                             ; preds = %bb3
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"* %t1 to {}*
  br label %bb13

bb13:                                             ; preds = %bb12
  %_43 = load i64, i64* %i, align 8
  %rem = sub i64 %len, %_43
  store %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"* %t1, %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"** %self.i5, align 8
  %6 = load %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"*, %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"** %self.i5, align 8, !nonnull !2
  %_5.i6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"* %6 to %"core::mem::manually_drop::ManuallyDrop<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"*
  store %"core::mem::manually_drop::ManuallyDrop<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"* %_5.i6, %"core::mem::manually_drop::ManuallyDrop<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"** %self.i.i4, align 8
  %7 = load %"core::mem::manually_drop::ManuallyDrop<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"*, %"core::mem::manually_drop::ManuallyDrop<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"** %self.i.i4, align 8, !nonnull !2
  %_3.i.i7 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ptr::swap_nonoverlapping_bytes::UnalignedBlock>"* %7 to %"core::ptr::swap_nonoverlapping_bytes::UnalignedBlock"*
  br label %bb14

bb14:                                             ; preds = %bb13
  %t3 = bitcast %"core::ptr::swap_nonoverlapping_bytes::UnalignedBlock"* %_3.i.i7 to i8*
  %_49 = load i64, i64* %i, align 8
; call core::ptr::<impl *mut T>::add
  %_55 = call i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h53a1d84ce18af2b4E"(i8* %x, i64 %_49)
  br label %bb15

bb15:                                             ; preds = %bb14
  %_52 = load i64, i64* %i, align 8
; call core::ptr::<impl *mut T>::add
  %_60 = call i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h53a1d84ce18af2b4E"(i8* %y, i64 %_52)
  br label %bb16

bb16:                                             ; preds = %bb15
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h07ea2f73c29f8f57E(i8* %_55, i8* %t3, i64 %rem)
  br label %bb17

bb17:                                             ; preds = %bb16
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h07ea2f73c29f8f57E(i8* %_60, i8* %_55, i64 %rem)
  br label %bb18

bb18:                                             ; preds = %bb17
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h07ea2f73c29f8f57E(i8* %t3, i8* %_60, i64 %rem)
  br label %bb19

bb19:                                             ; preds = %bb18
  br label %bb20

bb20:                                             ; preds = %bb19, %bb3
  ret void
}

; core::ptr::eq
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @_ZN4core3ptr2eq17hb76f3c93c1503c8bE(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %a, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %b) unnamed_addr #0 {
start:
  %0 = icmp eq %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %a, %b
  ret i1 %0
}

; core::ptr::<impl *mut T>::add
; Function Attrs: inlinehint uwtable
define internal %"alloc::string::String"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h10566c4c19fd26e7E"(%"alloc::string::String"* %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *mut T>::offset
  %0 = call %"alloc::string::String"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h1113c1d581a91b9dE"(%"alloc::string::String"* %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %0
}

; core::ptr::<impl *mut T>::add
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h53a1d84ce18af2b4E"(i8* %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *mut T>::offset
  %0 = call i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h16cc69566f64fda6E"(i8* %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::ptr::<impl *mut T>::add
; Function Attrs: inlinehint uwtable
define internal i8** @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h65b87f21ad58b38eE"(i8** %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *mut T>::offset
  %0 = call i8** @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfaaede8119fa33c9E"(i8** %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %0
}

; core::ptr::<impl *mut T>::add
; Function Attrs: inlinehint uwtable
define internal i64** @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha47e4df4b4683d70E"(i64** %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *mut T>::offset
  %0 = call i64** @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb357bde0f44beb1bE"(i64** %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64** %0
}

; core::ptr::<impl *mut T>::add
; Function Attrs: inlinehint uwtable
define internal %"serde_json::value::Value"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb6153962084a15b9E"(%"serde_json::value::Value"* %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *mut T>::offset
  %0 = call %"serde_json::value::Value"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h24a853cc53918bd9E"(%"serde_json::value::Value"* %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"serde_json::value::Value"* %0
}

; core::ptr::<impl *mut T>::offset
; Function Attrs: inlinehint uwtable
define internal %"alloc::string::String"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h1113c1d581a91b9dE"(%"alloc::string::String"* %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca %"alloc::string::String"*, align 8
  %1 = getelementptr inbounds %"alloc::string::String", %"alloc::string::String"* %self, i64 %count
  store %"alloc::string::String"* %1, %"alloc::string::String"** %0, align 8
  %2 = load %"alloc::string::String"*, %"alloc::string::String"** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %2
}

; core::ptr::<impl *mut T>::offset
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h16cc69566f64fda6E"(i8* %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = getelementptr inbounds i8, i8* %self, i64 %count
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %2
}

; core::ptr::<impl *mut T>::offset
; Function Attrs: inlinehint uwtable
define internal %"serde_json::value::Value"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h24a853cc53918bd9E"(%"serde_json::value::Value"* %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca %"serde_json::value::Value"*, align 8
  %1 = getelementptr inbounds %"serde_json::value::Value", %"serde_json::value::Value"* %self, i64 %count
  store %"serde_json::value::Value"* %1, %"serde_json::value::Value"** %0, align 8
  %2 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret %"serde_json::value::Value"* %2
}

; core::ptr::<impl *mut T>::offset
; Function Attrs: inlinehint uwtable
define internal i64** @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb357bde0f44beb1bE"(i64** %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i64**, align 8
  %1 = getelementptr inbounds i64*, i64** %self, i64 %count
  store i64** %1, i64*** %0, align 8
  %2 = load i64**, i64*** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64** %2
}

; core::ptr::<impl *mut T>::offset
; Function Attrs: inlinehint uwtable
define internal i8** @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfaaede8119fa33c9E"(i8** %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8**, align 8
  %1 = getelementptr inbounds i8*, i8** %self, i64 %count
  store i8** %1, i8*** %0, align 8
  %2 = load i8**, i8*** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %2
}

; core::ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h12419e701c54d1b6E"(%"serde_json::value::Value"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"serde_json::value::Value"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h30853d363a242cd3E"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %self, null
  ret i1 %0
}

; core::ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17heb6a7f8476861c41E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::wrapping_add
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h006e727c5252faefE"(i8* %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *const T>::wrapping_offset
  %0 = call i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h1369b89de64dbe6eE"(i8* %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::ptr::<impl *const T>::wrapping_offset
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h1369b89de64dbe6eE"(i8* %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = getelementptr i8, i8* %self, i64 %count
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %2
}

; core::ptr::<impl *const T>::add
; Function Attrs: inlinehint uwtable
define internal i64** @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h194619f715a87265E"(i64** %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *const T>::offset
  %0 = call i64** @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd77126b33be6e7b2E"(i64** %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64** %0
}

; core::ptr::<impl *const T>::add
; Function Attrs: inlinehint uwtable
define internal %"serde_json::value::Value"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h664c60febf91f948E"(%"serde_json::value::Value"* %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *const T>::offset
  %0 = call %"serde_json::value::Value"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4f3f0fc903ce597fE"(%"serde_json::value::Value"* %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"serde_json::value::Value"* %0
}

; core::ptr::<impl *const T>::add
; Function Attrs: inlinehint uwtable
define internal i8** @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h86c7da1fa93f3d1dE"(i8** %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *const T>::offset
  %0 = call i8** @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0af7bdcbab49acdcE"(i8** %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %0
}

; core::ptr::<impl *const T>::add
; Function Attrs: inlinehint uwtable
define internal double* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h89655a67050a8002E"(double* %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *const T>::offset
  %0 = call double* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h38e6059f9a1d3c8cE"(double* %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret double* %0
}

; core::ptr::<impl *const T>::add
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17ha8ce4781bed18733E"(i8* %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *const T>::offset
  %0 = call i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb3a00527ca698b6dE"(i8* %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; core::ptr::<impl *const T>::add
; Function Attrs: inlinehint uwtable
define internal %"alloc::string::String"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd82359365f97e9b2E"(%"alloc::string::String"* %self, i64 %count) unnamed_addr #0 {
start:
; call core::ptr::<impl *const T>::offset
  %0 = call %"alloc::string::String"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd59981924b6b8198E"(%"alloc::string::String"* %self, i64 %count)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %0
}

; core::ptr::<impl *const T>::offset
; Function Attrs: inlinehint uwtable
define internal i8** @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0af7bdcbab49acdcE"(i8** %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8**, align 8
  %1 = getelementptr inbounds i8*, i8** %self, i64 %count
  store i8** %1, i8*** %0, align 8
  %2 = load i8**, i8*** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %2
}

; core::ptr::<impl *const T>::offset
; Function Attrs: inlinehint uwtable
define internal double* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h38e6059f9a1d3c8cE"(double* %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca double*, align 8
  %1 = getelementptr inbounds double, double* %self, i64 %count
  store double* %1, double** %0, align 8
  %2 = load double*, double** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret double* %2
}

; core::ptr::<impl *const T>::offset
; Function Attrs: inlinehint uwtable
define internal %"serde_json::value::Value"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h4f3f0fc903ce597fE"(%"serde_json::value::Value"* %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca %"serde_json::value::Value"*, align 8
  %1 = getelementptr inbounds %"serde_json::value::Value", %"serde_json::value::Value"* %self, i64 %count
  store %"serde_json::value::Value"* %1, %"serde_json::value::Value"** %0, align 8
  %2 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret %"serde_json::value::Value"* %2
}

; core::ptr::<impl *const T>::offset
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb3a00527ca698b6dE"(i8* %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %1 = getelementptr inbounds i8, i8* %self, i64 %count
  store i8* %1, i8** %0, align 8
  %2 = load i8*, i8** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %2
}

; core::ptr::<impl *const T>::offset
; Function Attrs: inlinehint uwtable
define internal %"alloc::string::String"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd59981924b6b8198E"(%"alloc::string::String"* %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca %"alloc::string::String"*, align 8
  %1 = getelementptr inbounds %"alloc::string::String", %"alloc::string::String"* %self, i64 %count
  store %"alloc::string::String"* %1, %"alloc::string::String"** %0, align 8
  %2 = load %"alloc::string::String"*, %"alloc::string::String"** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %2
}

; core::ptr::<impl *const T>::offset
; Function Attrs: inlinehint uwtable
define internal i64** @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd77126b33be6e7b2E"(i64** %self, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i64**, align 8
  %1 = getelementptr inbounds i64*, i64** %self, i64 %count
  store i64** %1, i64*** %0, align 8
  %2 = load i64**, i64*** %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  ret i64** %2
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h038c4d054976d0b9E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h19da00cc791d35baE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h40f509df58231089E"(i64* %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h59711f8087130b82E"(i8* %self) unnamed_addr #0 {
start:
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %self, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8a2684e4ba6c0b24E"({ i64*, i64 }* %self) unnamed_addr #0 {
start:
  %_2 = bitcast { i64*, i64 }* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h8a472e5d922df33dE"(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h90ed7f44ae421f3dE"(%"serde_json::value::Value"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"serde_json::value::Value"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hb69ed7bf947cc278E"(i64** %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64** %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd069110e0f84be1aE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf12685b955243de4E"(%"alloc::string::String"* %self) unnamed_addr #0 {
start:
  %_2 = bitcast %"alloc::string::String"* %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::<impl *const T>::is_null
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf2b569eecb85168aE"(i8** %self) unnamed_addr #0 {
start:
  %_2 = bitcast i8** %self to i8*
  br label %bb1

bb1:                                              ; preds = %start
  %0 = icmp eq i8* %_2, null
  ret i1 %0
}

; core::ptr::read
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr4read17h0019ecb6f850fbbeE(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %src) unnamed_addr #0 {
start:
  %self.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"*, align 8
  %self.i = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"*, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>", align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"** %self.i, align 8
  %2 = load %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"*, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"** %self.i, align 8, !nonnull !2
  %_5.i = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %2 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"*
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %_5.i, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"** %self.i.i, align 8
  %3 = load %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"*, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"** %self.i.i, align 8, !nonnull !2
  %_3.i.i = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %3 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hffd794e67061478aE(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %src, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_3.i.i, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %_7 to i8*
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %_7 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"*
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %_3.i to i8*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !noalias !32
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %_3.i to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to i8*
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !alias.scope !35, !noalias !39
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr4read17h0429cf43aa8c9b66E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32), %"serde_json::value::Value"* %src) unnamed_addr #0 {
start:
  %self.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"*, align 8
  %self.i = alloca %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"*, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>", align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  store %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"** %self.i, align 8
  %2 = load %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"*, %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"** %self.i, align 8, !nonnull !2
  %_5.i = bitcast %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %2 to %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"*
  store %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"* %_5.i, %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"** %self.i.i, align 8
  %3 = load %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"*, %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"** %self.i.i, align 8, !nonnull !2
  %_3.i.i = bitcast %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"* %3 to %"serde_json::value::Value"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hddb4b2d55463b6dfE(%"serde_json::value::Value"* %src, %"serde_json::value::Value"* %_3.i.i, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %_7 to i8*
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false)
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %_7 to %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"*
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"* %_3.i to i8*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !noalias !41
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<serde_json::value::Value>"* %_3.i to %"serde_json::value::Value"*
  %10 = bitcast %"serde_json::value::Value"* %0 to i8*
  %11 = bitcast %"serde_json::value::Value"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false), !alias.scope !44, !noalias !48
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr4read17h0babe39685e982c8E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %src) unnamed_addr #0 {
start:
  %self.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"*, align 8
  %self.i = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"*, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>", align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"** %self.i, align 8
  %2 = load %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"*, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"** %self.i, align 8, !nonnull !2
  %_5.i = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %2 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"*
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_5.i, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"** %self.i.i, align 8
  %3 = load %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"*, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"** %self.i.i, align 8, !nonnull !2
  %_3.i.i = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %3 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h966176bded6ad95dE(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %src, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_3.i.i, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_7 to i8*
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_7 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"*
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_3.i to i8*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !noalias !50
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_3.i to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to i8*
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !alias.scope !53, !noalias !57
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint uwtable
define internal { i64*, i64 } @_ZN4core3ptr4read17h41d3e3c3373d74c5E({ i64*, i64 }* %src) unnamed_addr #0 {
start:
  %self.i.i = alloca { i64*, i64 }*, align 8
  %self.i = alloca { i8*, i64 }*, align 8
  %0 = alloca { i8*, i64 }, align 8
  %tmp = alloca { i8*, i64 }, align 8
  %1 = bitcast { i8*, i64 }* %0 to {}*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8*, i64 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i64 } %6, i64 %5, 1
  store { i8*, i64 } %7, { i8*, i64 }* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store { i8*, i64 }* %tmp, { i8*, i64 }** %self.i, align 8
  %8 = load { i8*, i64 }*, { i8*, i64 }** %self.i, align 8, !nonnull !2
  %_5.i = bitcast { i8*, i64 }* %8 to { i64*, i64 }*
  store { i64*, i64 }* %_5.i, { i64*, i64 }** %self.i.i, align 8
  %_3.i.i = load { i64*, i64 }*, { i64*, i64 }** %self.i.i, align 8, !nonnull !2
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h869d3940e07c0879E({ i64*, i64 }* %src, { i64*, i64 }* %_3.i.i, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 0
  %_7.0 = load i8*, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmp, i32 0, i32 1
  %_7.1 = load i64, i64* %10, align 8
  %_3.0.i = bitcast i8* %_7.0 to i64*
  %11 = insertvalue { i64*, i64 } undef, i64* %_3.0.i, 0
  %12 = insertvalue { i64*, i64 } %11, i64 %_7.1, 1
  %13 = insertvalue { i64*, i64 } undef, i64* %_3.0.i, 0
  %14 = insertvalue { i64*, i64 } %13, i64 %_7.1, 1
  %15 = extractvalue { i64*, i64 } %14, 0
  %16 = extractvalue { i64*, i64 } %14, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %17 = insertvalue { i64*, i64 } undef, i64* %15, 0
  %18 = insertvalue { i64*, i64 } %17, i64 %16, 1
  ret { i64*, i64 } %18
}

; core::ptr::read
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core3ptr4read17h787e0e103a226df8E(i64* %src) unnamed_addr #0 {
start:
  %self.i.i = alloca i64*, align 8
  %self.i = alloca i64*, align 8
  %0 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %1 = bitcast i64* %0 to {}*
  %2 = load i64, i64* %0, align 8
  store i64 %2, i64* %tmp, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %tmp, i64** %self.i, align 8
  %_5.i = load i64*, i64** %self.i, align 8, !nonnull !2
  store i64* %_5.i, i64** %self.i.i, align 8
  %_3.i.i = load i64*, i64** %self.i.i, align 8, !nonnull !2
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hea16c0c79b8fb67eE(i64* %src, i64* %_3.i.i, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_7 = load i64, i64* %tmp, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i64 %_7
}

; core::ptr::read
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr4read17h8d34a8e0c038c5faE(%"alloc::string::String"* noalias nocapture sret dereferenceable(24), %"alloc::string::String"* %src) unnamed_addr #0 {
start:
  %self.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"*, align 8
  %self.i = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"*, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>", align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"** %self.i, align 8
  %2 = load %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"*, %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"** %self.i, align 8, !nonnull !2
  %_5.i = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %2 to %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"*
  store %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %_5.i, %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"** %self.i.i, align 8
  %3 = load %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"*, %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"** %self.i.i, align 8, !nonnull !2
  %_3.i.i = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %3 to %"alloc::string::String"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17hc6d747709a791745E(%"alloc::string::String"* %src, %"alloc::string::String"* %_3.i.i, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %_7 to i8*
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %_7 to %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"*
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %_3.i to i8*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !noalias !59
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::string::String>"* %_3.i to %"alloc::string::String"*
  %10 = bitcast %"alloc::string::String"* %0 to i8*
  %11 = bitcast %"alloc::string::String"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !alias.scope !62, !noalias !66
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr4read17hd838438999768719E(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %src) unnamed_addr #0 {
start:
  %self.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"*, align 8
  %self.i = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"*, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>", align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"** %self.i, align 8
  %2 = load %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"*, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"** %self.i, align 8, !nonnull !2
  %_5.i = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %2 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"*
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %_5.i, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"** %self.i.i, align 8
  %3 = load %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"*, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"** %self.i.i, align 8, !nonnull !2
  %_3.i.i = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %3 to %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h9a21893c837f888bE(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %src, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %_3.i.i, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %_7 to i8*
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %_7 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"*
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %_3.i to i8*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !noalias !68
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>>"* %_3.i to %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*
  %10 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %0 to i8*
  %11 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !alias.scope !71, !noalias !75
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::read
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr4read17he78c334b89e3473eE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src) unnamed_addr #0 {
start:
  %self.i.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*, align 8
  %self.i = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*, align 8
  %_3.i = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_7 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to {}*
  br label %bb1

bb1:                                              ; preds = %start
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"** %self.i, align 8
  %2 = load %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"** %self.i, align 8, !nonnull !2
  %_5.i = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %2 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_5.i, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"** %self.i.i, align 8
  %3 = load %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"** %self.i.i, align 8, !nonnull !2
  %_3.i.i = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %3 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h1b2cc26ce522cdc8E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_3.i.i, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_7 to i8*
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false)
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_7 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_3.i to i8*
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !noalias !77
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_3.i to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to i8*
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false), !alias.scope !80, !noalias !84
  br label %bb4

bb4:                                              ; preds = %bb3
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr5write17h0751b26afdd110b5E(i64* %dst, i64 %src) unnamed_addr #0 {
start:
  store i64 %src, i64* %dst, align 8
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr5write17h735e5e4a6169e780E(i64** %dst, i64* nonnull %src) unnamed_addr #0 {
start:
  store i64* %src, i64** %dst, align 8
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr5write17hbfac23d297b9d7d3E(%"alloc::string::String"* %dst, %"alloc::string::String"* noalias nocapture dereferenceable(24) %src) unnamed_addr #0 {
start:
  %0 = bitcast %"alloc::string::String"* %dst to i8*
  %1 = bitcast %"alloc::string::String"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  ret void
}

; core::ptr::write
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core3ptr5write17hf1a244efc178a16cE(%"serde_json::value::Value"* %dst, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %src) unnamed_addr #0 {
start:
  %0 = bitcast %"serde_json::value::Value"* %dst to i8*
  %1 = bitcast %"serde_json::value::Value"* %src to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 32, i1 false)
  ret void
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0fc94f61e1d6af3cE"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %ptr) unnamed_addr #0 {
start:
  %_5 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>>", align 1
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %ptr, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %1, align 8
  %2 = bitcast i64** %0 to %"core::marker::PhantomData<alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>>"*
  %3 = load i64*, i64** %0, align 8, !nonnull !2
  ret i64* %3
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5b6b636cdc5f8cc5E"(%"serde_json::value::Value"* %ptr) unnamed_addr #0 {
start:
  %_5 = alloca %"core::marker::PhantomData<serde_json::value::Value>", align 1
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %ptr, %"serde_json::value::Value"** %1, align 8
  %2 = bitcast i64** %0 to %"core::marker::PhantomData<serde_json::value::Value>"*
  %3 = load i64*, i64** %0, align 8, !nonnull !2
  ret i64* %3
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbbe03009970db42dE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %ptr) unnamed_addr #0 {
start:
  %_5 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>>", align 1
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"**
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %ptr, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %1, align 8
  %2 = bitcast i64** %0 to %"core::marker::PhantomData<alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>>"*
  %3 = load i64*, i64** %0, align 8, !nonnull !2
  ret i64* %3
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint uwtable
define internal nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hebb26786d11a1a0dE"(i8* %ptr) unnamed_addr #0 {
start:
  %_5 = alloca %"core::marker::PhantomData<u8>", align 1
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = bitcast i8** %0 to %"core::marker::PhantomData<u8>"*
  %2 = load i8*, i8** %0, align 8, !nonnull !2
  ret i8* %2
}

; core::ptr::unique::Unique<T>::as_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(632) %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_mut17h17738d4634fa16feE"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_5 = load i64*, i64** %self, align 8, !nonnull !2
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd4bc0c0e7c063ec1E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_3
}

; core::ptr::unique::Unique<T>::as_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_mut17heb78ac564543efc8E"(i64** align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_5 = load i64*, i64** %self, align 8, !nonnull !2
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h3d9c5e2b1907df05E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_3
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"serde_json::value::Value"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h05f232026ed3a42cE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"serde_json::value::Value"*
  ret %"serde_json::value::Value"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h3d9c5e2b1907df05E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*
  ret %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha28c77819d6299ccE"(i8* nonnull %self.0, i64* noalias readonly align 8 dereferenceable(24) %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to {}*
  %_2.1 = bitcast i64* %self.1 to [3 x i64]*
  %0 = insertvalue { {}*, [3 x i64]* } undef, {}* %_2.0, 0
  %1 = insertvalue { {}*, [3 x i64]* } %0, [3 x i64]* %_2.1, 1
  ret { {}*, [3 x i64]* } %1
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha970c2ca3f55878cE"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"serde_json::error::ErrorImpl"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb147840082b3164dE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"serde_json::error::ErrorImpl"*
  ret %"serde_json::error::ErrorImpl"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb886e99a86fb960bE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"std::io::error::Custom"*
  ret %"std::io::error::Custom"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd4bc0c0e7c063ec1E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
  ret %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_2
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17heb62f1aa527caa9eE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %self.1, 1
  ret { [0 x i8]*, i64 } %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0af8cab70beb15b2E"(%"serde_json::value::Value"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %ptr, %"serde_json::value::Value"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !2
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint uwtable
define internal nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1ad10f6baeaaf316E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %0, align 8
  %1 = load i8*, i8** %0, align 8, !nonnull !2
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h7074b409b6c7cbceE"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %ptr, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !2
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hac6f653e8a5f70e3E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
  %1 = bitcast i64** %0 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"**
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %ptr, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %1, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !2
  ret i64* %2
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint uwtable
define internal i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h99e69bed8aa25602E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
; call core::ptr::<impl *mut T>::is_null
  %1 = call zeroext i1 @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17heb6a7f8476861c41E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %1, true
  br i1 %_2, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hac6f653e8a5f70e3E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %ptr)
  br label %bb4

bb4:                                              ; preds = %bb3
  store i64* %3, i64** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %4 = load i64*, i64** %0, align 8
  ret i64* %4
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hef1830c074812806E"(i8* %ptr) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
; call core::ptr::<impl *mut T>::is_null
  %1 = call zeroext i1 @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h30853d363a242cd3E"(i8* %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = xor i1 %1, true
  br i1 %_2, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i8** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1ad10f6baeaaf316E"(i8* %ptr)
  br label %bb4

bb4:                                              ; preds = %bb3
  store i8* %3, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %4 = load i8*, i8** %0, align 8
  ret i8* %4
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint uwtable
define internal nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h24d17ea4d71aafd7E"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %0 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1ad10f6baeaaf316E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h44e0a131ff9f5c12E"(i8* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h82dd1e7d1718a41dE"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast i8* %0 to %"serde_json::value::Value"*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0af8cab70beb15b2E"(%"serde_json::value::Value"* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint uwtable
define internal nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6f90f88bb419c9daE"(i64* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call %"serde_json::value::Value"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h56333427f3e1963bE"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast %"serde_json::value::Value"* %0 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1ad10f6baeaaf316E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %1
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint uwtable
define internal nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h704a5e13d3777f84E"(i8* nonnull %self) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h82dd1e7d1718a41dE"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1ad10f6baeaaf316E"(i8* %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %0
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4ee35685b99b38fdE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*
  ret %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"serde_json::value::Value"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h56333427f3e1963bE"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"serde_json::value::Value"*
  ret %"serde_json::value::Value"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h82dd1e7d1718a41dE"(i8* nonnull %self) unnamed_addr #0 {
start:
  ret i8* %self
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %self) unnamed_addr #0 {
start:
  %_2 = bitcast i64* %self to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
  ret %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_2
}

; core::ptr::non_null::NonNull<T>::as_ref
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(632) %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hc3fcbb6e915cb933E"(i64** noalias readonly align 8 dereferenceable(8) %self) unnamed_addr #0 {
start:
  %_4 = load i64*, i64** %self, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_2 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_4)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_2
}

; core::ptr::non_null::NonNull<T>::dangling
; Function Attrs: inlinehint uwtable
define internal nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h3a1268a6073a01bfE"() unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  store i64 1, i64* %0, align 8
  %1 = load i64, i64* %0, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %ptr = inttoptr i64 %1 to i8*
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %2 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1ad10f6baeaaf316E"(i8* %ptr)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8* %2
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he5daec5ffae6a45aE"({ i64, i64 }* align 8 dereferenceable(16)) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_15 = alloca i8, align 1
  %n = alloca i64, align 8
  %_5 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %0, { i64, i64 }** %self, align 8
  store i8 0, i8* %_15, align 1
  %3 = load { i64, i64 }*, { i64, i64 }** %self, align 8, !nonnull !2
  %_3 = bitcast { i64, i64 }* %3 to i64*
  %4 = load { i64, i64 }*, { i64, i64 }** %self, align 8, !nonnull !2
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %5 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h384838f30ff32f46E"(i64* noalias readonly align 8 dereferenceable(8) %_3, i64* noalias readonly align 8 dereferenceable(8) %_4)
  br label %bb2

bb1:                                              ; preds = %bb12, %bb9
  %6 = bitcast { i8*, i32 }* %1 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

bb2:                                              ; preds = %start
  br i1 %5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %12 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %12, align 8
  br label %bb11

bb4:                                              ; preds = %bb2
  %13 = load { i64, i64 }*, { i64, i64 }** %self, align 8, !nonnull !2
  %_6 = bitcast { i64, i64 }* %13 to i64*
  store i8 1, i8* %_15, align 1
; call <usize as core::iter::range::Step>::add_usize
  %14 = call { i64, i64 } @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$9add_usize17h311e53f77de93869E"(i64* noalias readonly align 8 dereferenceable(8) %_6, i64 1)
  store { i64, i64 } %14, { i64, i64 }* %_5, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %15 = bitcast { i64, i64 }* %_5 to i64*
  %_7 = load i64, i64* %15, align 8, !range !1
  %16 = icmp eq i64 %_7, 1
  br i1 %16, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  %17 = bitcast { i64, i64 }* %2 to i64*
  store i64 0, i64* %17, align 8
  br label %bb17

bb7:                                              ; preds = %bb5
  store i8 0, i8* %_15, align 1
  %18 = bitcast { i64, i64 }* %_5 to %"core::option::Option<usize>::Some"*
  %19 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %18, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %n, align 8
  %21 = load { i64, i64 }*, { i64, i64 }** %self, align 8, !nonnull !2
  %_13 = bitcast { i64, i64 }* %21 to i64*
; invoke core::mem::swap
  invoke void @_ZN4core3mem4swap17h50a8aacfb63a3675E(i64* align 8 dereferenceable(8) %n, i64* align 8 dereferenceable(8) %_13)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %_14 = load i64, i64* %n, align 8
  %22 = bitcast { i64, i64 }* %2 to %"core::option::Option<usize>::Some"*
  %23 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %22, i32 0, i32 1
  store i64 %_14, i64* %23, align 8
  %24 = bitcast { i64, i64 }* %2 to i64*
  store i64 1, i64* %24, align 8
  br label %bb17

bb9:                                              ; preds = %bb10
  %25 = bitcast { i64, i64 }* %_5 to i64*
  %_16 = load i64, i64* %25, align 8, !range !1
  %26 = icmp eq i64 %_16, 1
  br i1 %26, label %bb1, label %bb12

bb10:                                             ; preds = %cleanup
  br label %bb9

bb11:                                             ; preds = %bb3, %bb13
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !range !1
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1
  ret { i64, i64 } %32

bb12:                                             ; preds = %bb9
  br label %bb1

bb13:                                             ; preds = %bb15, %bb14, %bb16
  store i8 0, i8* %_15, align 1
  br label %bb11

bb14:                                             ; preds = %bb17
  %33 = load i8, i8* %_15, align 1, !range !4
  %34 = trunc i8 %33 to i1
  br i1 %34, label %bb15, label %bb13

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_15, align 1
  br label %bb13

bb16:                                             ; preds = %bb17
  br label %bb13

bb17:                                             ; preds = %bb8, %bb6
  %35 = bitcast { i64, i64 }* %_5 to i64*
  %_17 = load i64, i64* %35, align 8, !range !1
  %36 = icmp eq i64 %_17, 1
  br i1 %36, label %bb14, label %bb16

cleanup:                                          ; preds = %bb7
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb10
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core4iter6traits8iterator8Iterator4fold17h7e1e0eef31cbac97E(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72)) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %self = alloca %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, align 8
  store %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %0, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8
  store i8 0, i8* %_9, align 1
  store i8 1, i8* %_9, align 1
; invoke core::iter::traits::iterator::Iterator::fold::ok
  invoke void @_ZN4core4iter6traits8iterator8Iterator4fold2ok17h7c8282163d627a37E()
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
; invoke core::iter::traits::iterator::Iterator::try_fold
  invoke void @_ZN4core4iter6traits8iterator8Iterator8try_fold17h4e52189ab6fbbed6E(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** align 8 dereferenceable(8) %self)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup1, %bb7, %bb8
  br label %bb1

bb4:                                              ; preds = %bb2
  store i8 0, i8* %_9, align 1
; invoke core::result::Result<T,E>::unwrap
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf0703a271c3ba43fE"()
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb5
  ret void

bb7:                                              ; preds = %bb8
  store i8 0, i8* %_9, align 1
  br label %bb3

bb8:                                              ; preds = %cleanup
  %8 = load i8, i8* %_9, align 1, !range !4
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb7, label %bb3

cleanup:                                          ; preds = %bb2, %start
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb8

cleanup1:                                         ; preds = %bb4
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb3
}

; core::iter::traits::iterator::Iterator::fold::ok
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core4iter6traits8iterator8Iterator4fold2ok17h7c8282163d627a37E() unnamed_addr #0 {
start:
  %0 = alloca %"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>", align 1
  %1 = bitcast %"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>"* %0 to %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"*
  ret void
}

; core::iter::traits::iterator::Iterator::fold::ok::{{closure}}
; Function Attrs: uwtable
define internal void @"_ZN4core4iter6traits8iterator8Iterator4fold2ok28_$u7b$$u7b$closure$u7d$$u7d$17h1e35ad7168b761beE"(%"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>"* nonnull align 1, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* noalias nocapture dereferenceable(56) %x) unnamed_addr #1 {
start:
  %_8 = alloca { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, align 8
  %_6 = alloca { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }, align 8
  %1 = alloca %"core::result::Result<(), !>::Ok", align 1
  %_1 = alloca %"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>"*, align 8
  store %"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>"* %0, %"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>"** %_1, align 8
  %2 = load %"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>"*, %"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>"** %_1, align 8, !nonnull !2
  %_5 = bitcast %"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>"* %2 to %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"*
  %3 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_8 to i8*
  %4 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false)
  %5 = bitcast { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_6 to {}*
  %6 = bitcast { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_6 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %7 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %6 to i8*
  %8 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 56, i1 false)
  %9 = bitcast { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_6 to {}*
  %10 = bitcast { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_6 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hcfa8d4b6767128d9E"(%"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"* nonnull align 1 %_5, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* noalias nocapture dereferenceable(56) %10)
  br label %bb1

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<(), !>::Ok"* %1 to {}*
  ret void
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core4iter6traits8iterator8Iterator8for_each17h705acdaa44546b7eE(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_5 = alloca {}, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_8, align 1
; invoke core::iter::traits::iterator::Iterator::for_each::call
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h1b177babb7e38ce4E()
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
; invoke core::iter::traits::iterator::Iterator::fold
  invoke void @_ZN4core4iter6traits8iterator8Iterator4fold17h7e1e0eef31cbac97E(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72) %self)
          to label %bb3 unwind label %cleanup

bb2:                                              ; preds = %bb4, %bb5
  %1 = bitcast { i8*, i32 }* %0 to i8**
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1
  resume { i8*, i32 } %6

bb3:                                              ; preds = %bb1
  store i8 0, i8* %_8, align 1
  ret void

bb4:                                              ; preds = %bb5
  store i8 0, i8* %_8, align 1
  br label %bb2

bb5:                                              ; preds = %cleanup
  %7 = load i8, i8* %_8, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb4, label %bb2

cleanup:                                          ; preds = %bb1, %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb5
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h1b177babb7e38ce4E() unnamed_addr #0 {
start:
  %0 = alloca %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>", align 1
  %1 = bitcast %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"* %0 to {}*
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: uwtable
define internal void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hcfa8d4b6767128d9E"(%"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"* nonnull align 1, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* noalias nocapture dereferenceable(56) %item) unnamed_addr #1 {
start:
  %_6 = alloca { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, align 8
  %_5 = alloca { [0 x i64], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }, align 8
  %_1 = alloca %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"*, align 8
  store %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"* %0, %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"** %_1, align 8
  %1 = load %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"*, %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"** %_1, align 8, !nonnull !2
  %_4 = bitcast %"core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>"* %1 to {}*
  %2 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_6 to i8*
  %3 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %item to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 56, i1 false)
  %4 = bitcast { [0 x i64], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_5 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %5 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %4 to i8*
  %6 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 56, i1 false)
  %7 = bitcast { [0 x i64], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_5 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
; call core::ops::function::FnMut::call_mut
  call void @_ZN4core3ops8function5FnMut8call_mut17he6483d2d0ed5844bE({}* nonnull align 1 %_4, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* noalias nocapture dereferenceable(56) %7)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core4iter6traits8iterator8Iterator8try_fold17h4e52189ab6fbbed6E(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** align 8 dereferenceable(8) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_22 = alloca i8, align 1
  %_15 = alloca { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, align 8
  %_13 = alloca { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }, align 8
  %_10 = alloca %"core::result::Result<(), !>::Ok", align 1
  %x = alloca { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, align 8
  %_5 = alloca %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", align 8
  %accum = alloca {}, align 1
  %1 = alloca %"core::result::Result<(), !>::Ok", align 1
  %f = alloca %"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>", align 1
  store i8 0, i8* %_22, align 1
  store i8 1, i8* %_22, align 1
  br label %bb1

bb1:                                              ; preds = %bb29, %start
; invoke <&mut I as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha7bb255971442199E"(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* noalias nocapture sret dereferenceable(56) %_5, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** align 8 dereferenceable(8) %self)
          to label %bb4 unwind label %cleanup

bb2:                                              ; preds = %bb3
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb3:                                              ; preds = %bb18, %bb19
  br label %bb2

bb4:                                              ; preds = %bb1
  %8 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_5, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !15
  %10 = sub i8 %9, 6
  %11 = icmp ule i8 %10, 0
  %_7 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_7, 1
  br i1 %12, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hef849281d57fefd4E(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* align 8 dereferenceable(56) %_5)
          to label %bb16 unwind label %cleanup

bb6:                                              ; preds = %bb4
  %13 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_5 to %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"*
  %14 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"* %13 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %15 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %x to i8*
  %16 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 56, i1 false)
  store i8 0, i8* %_22, align 1
  %17 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_15 to i8*
  %18 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 56, i1 false)
  %19 = bitcast { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_13 to {}*
  %20 = bitcast { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_13 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %21 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %20 to i8*
  %22 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 56, i1 false)
  %23 = bitcast { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_13 to {}*
  %24 = bitcast { [0 x i8], {}, [0 x i8], { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, [0 x i64] }* %_13 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
; invoke core::iter::traits::iterator::Iterator::fold::ok::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator4fold2ok28_$u7b$$u7b$closure$u7d$$u7d$17h1e35ad7168b761beE"(%"core::iter::traits::iterator::Iterator::fold::ok::{{closure}}<(), (alloc::string::String, serde_json::value::Value), core::iter::traits::iterator::Iterator::for_each::call::{{closure}}<(alloc::string::String, serde_json::value::Value), fn((alloc::string::String, serde_json::value::Value))>>"* nonnull align 1 %f, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* noalias nocapture dereferenceable(56) %24)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
; invoke <core::result::Result<T,E> as core::ops::try::Try>::into_result
  invoke void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h3d21edfd5305a091E"()
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  switch i64 0, label %bb10 [
    i64 0, label %bb15
    i64 1, label %bb11
  ]

bb9:                                              ; preds = %cleanup2
  br i1 true, label %bb22, label %bb21

bb10:                                             ; preds = %bb8
  unreachable

bb11:                                             ; preds = %bb8
; invoke <T as core::convert::From<T>>::from
  invoke void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3d7eb24ab8521340E"()
          to label %bb13 unwind label %cleanup2

bb12:                                             ; preds = %bb25, %bb17
  ret void

bb13:                                             ; preds = %bb11
; invoke <core::result::Result<T,E> as core::ops::try::Try>::from_error
  invoke void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h32722bd17c6c8988E"()
          to label %bb14 unwind label %cleanup2

bb14:                                             ; preds = %bb13
  br i1 true, label %bb24, label %bb23

bb15:                                             ; preds = %bb8
  store i8 1, i8* %_22, align 1
  br i1 true, label %bb27, label %bb28

bb16:                                             ; preds = %bb5
  store i8 0, i8* %_22, align 1
; invoke <core::result::Result<T,E> as core::ops::try::Try>::from_ok
  invoke void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$7from_ok17hc0bebcbab08ea2c7E"()
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  store i8 0, i8* %_22, align 1
  br label %bb12

bb18:                                             ; preds = %bb19
  store i8 0, i8* %_22, align 1
  br label %bb3

bb19:                                             ; preds = %bb20, %bb21, %cleanup
  %25 = load i8, i8* %_22, align 1, !range !4
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb18, label %bb3

bb20:                                             ; preds = %bb21
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hef849281d57fefd4E(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* align 8 dereferenceable(56) %_5) #14
  br label %bb19

bb21:                                             ; preds = %bb22, %bb9, %cleanup1
  %27 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_5, i32 0, i32 1
  %28 = load i8, i8* %27, align 8, !range !15
  %29 = sub i8 %28, 6
  %30 = icmp ule i8 %29, 0
  %_23 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_23, 1
  br i1 %31, label %bb19, label %bb20

bb22:                                             ; preds = %bb9
  br label %bb21

bb23:                                             ; preds = %bb24, %bb14
  %32 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_5, i32 0, i32 1
  %33 = load i8, i8* %32, align 8, !range !15
  %34 = sub i8 %33, 6
  %35 = icmp ule i8 %34, 0
  %_26 = select i1 %35, i64 0, i64 1
  %36 = icmp eq i64 %_26, 1
  br i1 %36, label %bb25, label %bb26

bb24:                                             ; preds = %bb14
  br label %bb23

bb25:                                             ; preds = %bb26, %bb23
  store i8 0, i8* %_22, align 1
  br label %bb12

bb26:                                             ; preds = %bb23
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hef849281d57fefd4E(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* align 8 dereferenceable(56) %_5)
          to label %bb25 unwind label %cleanup

bb27:                                             ; preds = %bb28, %bb15
  %37 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_5, i32 0, i32 1
  %38 = load i8, i8* %37, align 8, !range !15
  %39 = sub i8 %38, 6
  %40 = icmp ule i8 %39, 0
  %_28 = select i1 %40, i64 0, i64 1
  %41 = icmp eq i64 %_28, 1
  br i1 %41, label %bb29, label %bb30

bb28:                                             ; preds = %bb15
  br label %bb27

bb29:                                             ; preds = %bb30, %bb27
  br label %bb1

bb30:                                             ; preds = %bb27
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hef849281d57fefd4E(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* align 8 dereferenceable(56) %_5)
          to label %bb29 unwind label %cleanup

cleanup:                                          ; preds = %bb30, %bb26, %bb16, %bb5, %bb1
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  %44 = extractvalue { i8*, i32 } %42, 1
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %44, i32* %46, align 8
  br label %bb19

cleanup1:                                         ; preds = %bb7, %bb6
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb21

cleanup2:                                         ; preds = %bb13, %bb11
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %54, i32* %56, align 8
  br label %bb9
}

; core::iter::traits::iterator::Iterator::enumerate
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h953b107c14c52446E(%"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* noalias nocapture sret dereferenceable(24), i64* %self.0, i64* %self.1) unnamed_addr #0 {
start:
; call core::iter::adapters::Enumerate<I>::new
  call void @"_ZN4core4iter8adapters18Enumerate$LT$I$GT$3new17hbe02565aaac29112E"(%"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* noalias nocapture sret dereferenceable(24) %0, i64* %self.0, i64* %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; core::iter::adapters::Enumerate<I>::new
; Function Attrs: uwtable
define internal void @"_ZN4core4iter8adapters18Enumerate$LT$I$GT$3new17hbe02565aaac29112E"(%"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* noalias nocapture sret dereferenceable(24), i64* %iter.0, i64* %iter.1) unnamed_addr #1 {
start:
  %1 = bitcast %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %0 to { i64*, i64* }*
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 0
  store i64* %iter.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 1
  store i64* %iter.1, i64** %3, align 8
  %4 = getelementptr inbounds %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>", %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %0, i32 0, i32 3
  store i64 0, i64* %4, align 8
  ret void
}

; core::alloc::size_align
; Function Attrs: uwtable
define internal { i64, i64 } @_ZN4core5alloc10size_align17h23d5ede2b1115a44E() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 632, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 8, i64* %0, align 8
  %4 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64, i64 }* %2 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; core::alloc::size_align
; Function Attrs: uwtable
define internal { i64, i64 } @_ZN4core5alloc10size_align17h4055ba19054d734cE() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 728, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 8, i64* %0, align 8
  %4 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64, i64 }* %2 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; core::alloc::size_align
; Function Attrs: uwtable
define internal { i64, i64 } @_ZN4core5alloc10size_align17h7e1547c9e8db63fdE() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 1, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8
  %4 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64, i64 }* %2 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; core::alloc::size_align
; Function Attrs: uwtable
define internal { i64, i64 } @_ZN4core5alloc10size_align17hacee3c9dd4ac79e5E() unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 32, i64* %1, align 8
  %3 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  store i64 8, i64* %0, align 8
  %4 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64, i64 }* %2 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; core::alloc::Layout::from_size_align
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @_ZN4core5alloc6Layout15from_size_align17h0adef352dbe7f645E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %_14 = alloca {}, align 1
  %_13 = alloca %"core::alloc::LayoutErr", align 1
  %_7 = alloca {}, align 1
  %_6 = alloca %"core::alloc::LayoutErr", align 1
  %0 = alloca { i64, i64 }, align 8
; call core::num::<impl usize>::is_power_of_two
  %1 = call zeroext i1 @"_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h842bf3a7439d2e8bE"(i64 %align)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = xor i1 %1, true
  br i1 %_3, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %_11 = sub i64 %align, 1
  %_10 = sub i64 -1, %_11
  %_8 = icmp ugt i64 %size, %_10
  br i1 %_8, label %bb6, label %bb5

bb3:                                              ; preds = %bb1
  %2 = bitcast %"core::alloc::LayoutErr"* %_6 to {}*
  %3 = bitcast { i64, i64 }* %0 to %"core::result::Result<core::alloc::Layout, core::alloc::LayoutErr>::Err"*
  %4 = bitcast %"core::result::Result<core::alloc::Layout, core::alloc::LayoutErr>::Err"* %3 to %"core::alloc::LayoutErr"*
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  br label %bb4

bb4:                                              ; preds = %bb7, %bb6, %bb3
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11

bb5:                                              ; preds = %bb2
; call core::alloc::Layout::from_size_align_unchecked
  %12 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %size, i64 %align)
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  br label %bb7

bb6:                                              ; preds = %bb2
  %15 = bitcast %"core::alloc::LayoutErr"* %_13 to {}*
  %16 = bitcast { i64, i64 }* %0 to %"core::result::Result<core::alloc::Layout, core::alloc::LayoutErr>::Err"*
  %17 = bitcast %"core::result::Result<core::alloc::Layout, core::alloc::LayoutErr>::Err"* %16 to %"core::alloc::LayoutErr"*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %18, align 8
  br label %bb4

bb7:                                              ; preds = %bb5
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %13, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %14, i64* %20, align 8
  br label %bb4
}

; core::alloc::Layout::padding_needed_for
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core5alloc6Layout18padding_needed_for17h10f5dc627ff40265E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %self, i64 %align) unnamed_addr #0 {
start:
; call core::alloc::Layout::size
  %_8 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::num::<impl usize>::wrapping_add
  %0 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17h01a27fc2f5a3bbd9E"(i64 %_8, i64 %align)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::num::<impl usize>::wrapping_sub
  %1 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h38504eb62fe2ddbeE"(i64 %0, i64 1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::num::<impl usize>::wrapping_sub
  %2 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h38504eb62fe2ddbeE"(i64 %align, i64 1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_10 = xor i64 %2, -1
  %len_rounded_up = and i64 %1, %_10
; call core::num::<impl usize>::wrapping_sub
  %3 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h38504eb62fe2ddbeE"(i64 %len_rounded_up, i64 %_8)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret i64 %3
}

; core::alloc::Layout::from_size_align_unchecked
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %0 = alloca { i64, i64 }, align 8
; call core::num::NonZeroUsize::new_unchecked
  %1 = call i64 @_ZN4core3num12NonZeroUsize13new_unchecked17h2263a40fd8c4d657E(i64 %align), !range !28
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %0 to i64*
  store i64 %size, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !range !28
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; core::alloc::Layout::new
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @_ZN4core5alloc6Layout3new17h240cace8b9520f9cE() unnamed_addr #0 {
start:
  %_8 = alloca { i64, i64 }, align 8
; call core::alloc::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc10size_align17hacee3c9dd4ac79e5E()
  %size = extractvalue { i64, i64 } %0, 0
  %align = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  br i1 false, label %bb2, label %bb7

bb2:                                              ; preds = %bb1
; call core::alloc::Layout::from_size_align
  %1 = call { i64, i64 } @_ZN4core5alloc6Layout15from_size_align17h0adef352dbe7f645E(i64 %size, i64 %align)
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::is_ok
  %2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h3ee6cbdb081302d1E"({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_5 = xor i1 %2, true
  br i1 %_5, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb7

bb6:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [62 x i8] }>* @15 to [0 x i8]*), i64 62, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @17 to %"core::panic::Location"*))
  unreachable

bb7:                                              ; preds = %bb5, %bb1
; call core::alloc::Layout::from_size_align_unchecked
  %3 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %size, i64 %align)
  %4 = extractvalue { i64, i64 } %3, 0
  %5 = extractvalue { i64, i64 } %3, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %6 = insertvalue { i64, i64 } undef, i64 %4, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; core::alloc::Layout::new
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @_ZN4core5alloc6Layout3new17h80f01b2d0050d162E() unnamed_addr #0 {
start:
  %_8 = alloca { i64, i64 }, align 8
; call core::alloc::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc10size_align17h23d5ede2b1115a44E()
  %size = extractvalue { i64, i64 } %0, 0
  %align = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  br i1 false, label %bb2, label %bb7

bb2:                                              ; preds = %bb1
; call core::alloc::Layout::from_size_align
  %1 = call { i64, i64 } @_ZN4core5alloc6Layout15from_size_align17h0adef352dbe7f645E(i64 %size, i64 %align)
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::is_ok
  %2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h3ee6cbdb081302d1E"({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_5 = xor i1 %2, true
  br i1 %_5, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb7

bb6:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [62 x i8] }>* @15 to [0 x i8]*), i64 62, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @17 to %"core::panic::Location"*))
  unreachable

bb7:                                              ; preds = %bb5, %bb1
; call core::alloc::Layout::from_size_align_unchecked
  %3 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %size, i64 %align)
  %4 = extractvalue { i64, i64 } %3, 0
  %5 = extractvalue { i64, i64 } %3, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %6 = insertvalue { i64, i64 } undef, i64 %4, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; core::alloc::Layout::new
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @_ZN4core5alloc6Layout3new17h974705507a0a41b2E() unnamed_addr #0 {
start:
  %_8 = alloca { i64, i64 }, align 8
; call core::alloc::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc10size_align17h4055ba19054d734cE()
  %size = extractvalue { i64, i64 } %0, 0
  %align = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  br i1 false, label %bb2, label %bb7

bb2:                                              ; preds = %bb1
; call core::alloc::Layout::from_size_align
  %1 = call { i64, i64 } @_ZN4core5alloc6Layout15from_size_align17h0adef352dbe7f645E(i64 %size, i64 %align)
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::is_ok
  %2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h3ee6cbdb081302d1E"({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_5 = xor i1 %2, true
  br i1 %_5, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb7

bb6:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [62 x i8] }>* @15 to [0 x i8]*), i64 62, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @17 to %"core::panic::Location"*))
  unreachable

bb7:                                              ; preds = %bb5, %bb1
; call core::alloc::Layout::from_size_align_unchecked
  %3 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %size, i64 %align)
  %4 = extractvalue { i64, i64 } %3, 0
  %5 = extractvalue { i64, i64 } %3, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %6 = insertvalue { i64, i64 } undef, i64 %4, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; core::alloc::Layout::new
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @_ZN4core5alloc6Layout3new17hcc0299efa4c4f622E() unnamed_addr #0 {
start:
  %_8 = alloca { i64, i64 }, align 8
; call core::alloc::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc10size_align17h7e1547c9e8db63fdE()
  %size = extractvalue { i64, i64 } %0, 0
  %align = extractvalue { i64, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  br i1 false, label %bb2, label %bb7

bb2:                                              ; preds = %bb1
; call core::alloc::Layout::from_size_align
  %1 = call { i64, i64 } @_ZN4core5alloc6Layout15from_size_align17h0adef352dbe7f645E(i64 %size, i64 %align)
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::result::Result<T,E>::is_ok
  %2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h3ee6cbdb081302d1E"({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
  %_5 = xor i1 %2, true
  br i1 %_5, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb7

bb6:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [62 x i8] }>* @15 to [0 x i8]*), i64 62, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @17 to %"core::panic::Location"*))
  unreachable

bb7:                                              ; preds = %bb5, %bb1
; call core::alloc::Layout::from_size_align_unchecked
  %3 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %size, i64 %align)
  %4 = extractvalue { i64, i64 } %3, 0
  %5 = extractvalue { i64, i64 } %3, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %6 = insertvalue { i64, i64 } undef, i64 %4, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; core::alloc::Layout::size
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = bitcast { i64, i64 }* %self to i64*
  %1 = load i64, i64* %0, align 8
  ret i64 %1
}

; core::alloc::Layout::align
; Function Attrs: inlinehint uwtable
define internal i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %0, align 8, !range !28
; call core::num::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num12NonZeroUsize3get17hfb0f2c1a07a6cba4E(i64 %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %1
}

; core::alloc::Layout::array
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @_ZN4core5alloc6Layout5array17h5f8fefd61ec91d02E(i64 %n) unnamed_addr #0 {
start:
  %_6 = alloca %"core::alloc::{{impl}}::array::{{closure}}<serde_json::value::Value>", align 1
  %_4 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>", align 8
; call core::alloc::Layout::new
  %0 = call { i64, i64 } @_ZN4core5alloc6Layout3new17h240cace8b9520f9cE()
  store { i64, i64 } %0, { i64, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::Layout::repeat
  call void @_ZN4core5alloc6Layout6repeat17h917bf655f7210497E(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture sret dereferenceable(24) %_2, { i64, i64 }* noalias readonly align 8 dereferenceable(16) %_4, i64 %n)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::map
  %1 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$3map17ha16f148b12a6caf0E"(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture dereferenceable(24) %_2)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::Layout::array
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @_ZN4core5alloc6Layout5array17heb5ebc3b1eca02deE(i64 %n) unnamed_addr #0 {
start:
  %_6 = alloca %"core::alloc::{{impl}}::array::{{closure}}<u8>", align 1
  %_4 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>", align 8
; call core::alloc::Layout::new
  %0 = call { i64, i64 } @_ZN4core5alloc6Layout3new17hcc0299efa4c4f622E()
  store { i64, i64 } %0, { i64, i64 }* %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::Layout::repeat
  call void @_ZN4core5alloc6Layout6repeat17h917bf655f7210497E(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture sret dereferenceable(24) %_2, { i64, i64 }* noalias readonly align 8 dereferenceable(16) %_4, i64 %n)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::result::Result<T,E>::map
  %1 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hba7287be0f5483f6E"(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture dereferenceable(24) %_2)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; core::alloc::Layout::array::{{closure}}
; Function Attrs: uwtable
define internal { i64, i64 } @"_ZN4core5alloc6Layout5array28_$u7b$$u7b$closure$u7d$$u7d$17h277077b08b63bbcfE"({ [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* noalias nocapture dereferenceable(24) %_2) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_2 to { i64, i64 }*
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %k.0 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %k.1 = load i64, i64* %3, align 8, !range !28
  %4 = getelementptr inbounds { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_2, i32 0, i32 3
  %offs = load i64, i64* %4, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8
  %5 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = icmp eq i64 %offs, %5
  %_6 = xor i1 %_7, true
  br i1 %_6, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [45 x i8] }>* @18 to [0 x i8]*), i64 45, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @19 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %6 = insertvalue { i64, i64 } undef, i64 %k.0, 0
  %7 = insertvalue { i64, i64 } %6, i64 %k.1, 1
  ret { i64, i64 } %7
}

; core::alloc::Layout::array::{{closure}}
; Function Attrs: uwtable
define internal { i64, i64 } @"_ZN4core5alloc6Layout5array28_$u7b$$u7b$closure$u7d$$u7d$17h96ddcf59755616e8E"({ [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* noalias nocapture dereferenceable(24) %_2) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_2 to { i64, i64 }*
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %k.0 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %k.1 = load i64, i64* %3, align 8, !range !28
  %4 = getelementptr inbounds { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_2, i32 0, i32 3
  %offs = load i64, i64* %4, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
  store i64 32, i64* %0, align 8
  %5 = load i64, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %_7 = icmp eq i64 %offs, %5
  %_6 = xor i1 %_7, true
  br i1 %_6, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [45 x i8] }>* @18 to [0 x i8]*), i64 45, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @19 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %6 = insertvalue { i64, i64 } undef, i64 %k.0, 0
  %7 = insertvalue { i64, i64 } %6, i64 %k.1, 1
  ret { i64, i64 } %7
}

; core::alloc::Layout::repeat
; Function Attrs: inlinehint uwtable
define internal void @_ZN4core5alloc6Layout6repeat17h917bf655f7210497E(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture sret dereferenceable(24), { i64, i64 }* noalias readonly align 8 dereferenceable(16) %self, i64 %n) unnamed_addr #0 {
start:
  %_33 = alloca { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, align 8
  %_27 = alloca {}, align 1
  %_26 = alloca %"core::alloc::LayoutErr", align 1
  %_21 = alloca { i64, i64 }, align 8
  %_14 = alloca {}, align 1
  %_13 = alloca %"core::alloc::LayoutErr", align 1
  %_4 = alloca { i64, i64 }, align 8
; call core::alloc::Layout::size
  %1 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::Layout::align
  %2 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::alloc::Layout::padding_needed_for
  %3 = call i64 @_ZN4core5alloc6Layout18padding_needed_for17h10f5dc627ff40265E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %self, i64 %2)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::num::<impl usize>::checked_add
  %4 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h993a87cd7fb4ce2fE"(i64 %1, i64 %3)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  br label %bb4

bb4:                                              ; preds = %bb3
  %7 = bitcast %"core::alloc::LayoutErr"* %_13 to {}*
; call core::option::Option<T>::ok_or
  %8 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h4cb4e06f12120a2bE"(i64 %5, i64 %6)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  %11 = call { i64, i64 } @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h4cef504c75fbcbcdE"(i64 %9, i64 %10)
  store { i64, i64 } %11, { i64, i64 }* %_4, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %12 = bitcast { i64, i64 }* %_4 to i64*
  %_15 = load i64, i64* %12, align 8, !range !1
  switch i64 %_15, label %bb7 [
    i64 0, label %bb13
    i64 1, label %bb8
  ]

bb7:                                              ; preds = %bb6
  unreachable

bb8:                                              ; preds = %bb6
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9694d96c436fe34dE"()
  br label %bb10

bb9:                                              ; preds = %bb23, %bb12
  ret void

bb10:                                             ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hcde81dcb42fd4d79E"(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture sret dereferenceable(24) %0)
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb12

bb12:                                             ; preds = %bb20, %bb11
  br label %bb9

bb13:                                             ; preds = %bb6
  %13 = bitcast { i64, i64 }* %_4 to %"core::result::Result<usize, core::alloc::LayoutErr>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<usize, core::alloc::LayoutErr>::Ok", %"core::result::Result<usize, core::alloc::LayoutErr>::Ok"* %13, i32 0, i32 1
  %val = load i64, i64* %14, align 8
; call core::num::<impl usize>::checked_mul
  %15 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %val, i64 %n)
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %18 = bitcast %"core::alloc::LayoutErr"* %_26 to {}*
; call core::option::Option<T>::ok_or
  %19 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h4cb4e06f12120a2bE"(i64 %16, i64 %17)
  %20 = extractvalue { i64, i64 } %19, 0
  %21 = extractvalue { i64, i64 } %19, 1
  br label %bb15

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  %22 = call { i64, i64 } @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h4cef504c75fbcbcdE"(i64 %20, i64 %21)
  store { i64, i64 } %22, { i64, i64 }* %_21, align 8
  br label %bb16

bb16:                                             ; preds = %bb15
  %23 = bitcast { i64, i64 }* %_21 to i64*
  %_28 = load i64, i64* %23, align 8, !range !1
  switch i64 %_28, label %bb17 [
    i64 0, label %bb21
    i64 1, label %bb18
  ]

bb17:                                             ; preds = %bb16
  unreachable

bb18:                                             ; preds = %bb16
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9694d96c436fe34dE"()
  br label %bb19

bb19:                                             ; preds = %bb18
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hcde81dcb42fd4d79E"(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture sret dereferenceable(24) %0)
  br label %bb20

bb20:                                             ; preds = %bb19
  br label %bb12

bb21:                                             ; preds = %bb16
  %24 = bitcast { i64, i64 }* %_21 to %"core::result::Result<usize, core::alloc::LayoutErr>::Ok"*
  %25 = getelementptr inbounds %"core::result::Result<usize, core::alloc::LayoutErr>::Ok", %"core::result::Result<usize, core::alloc::LayoutErr>::Ok"* %24, i32 0, i32 1
  %val1 = load i64, i64* %25, align 8
; call core::alloc::Layout::align
  %26 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %self)
  br label %bb22

bb22:                                             ; preds = %bb21
; call core::alloc::Layout::from_size_align_unchecked
  %27 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %val1, i64 %26)
  %28 = extractvalue { i64, i64 } %27, 0
  %29 = extractvalue { i64, i64 } %27, 1
  br label %bb23

bb23:                                             ; preds = %bb22
  %30 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_33 to { i64, i64 }*
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0
  store i64 %28, i64* %31, align 8
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1
  store i64 %29, i64* %32, align 8
  %33 = getelementptr inbounds { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_33, i32 0, i32 3
  store i64 %val, i64* %33, align 8
  %34 = bitcast %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %0 to %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Ok"*
  %35 = bitcast %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Ok"* %34 to { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }*
  %36 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %35 to i8*
  %37 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false)
  br label %bb9
}

; core::slice::Iter<T>::as_slice
; Function Attrs: uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core5slice13Iter$LT$T$GT$8as_slice17h1eeb1dfd8e9033ecE"({ i8*, i8* }* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %_4.i = alloca i64, align 8
  %2 = bitcast { i8*, i8* }* %self to i8**
  %_3.i = load i8*, i8** %2, align 8, !alias.scope !86
  %3 = bitcast { i8*, i8* }* %self to i8**
  %start1.i = load i8*, i8** %3, align 8, !alias.scope !86
  store i64 1, i64* %0, align 8, !noalias !86
  %4 = load i64, i64* %0, align 8, !noalias !86
  %_8.i = icmp eq i64 %4, 0
  br i1 %_8.i, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %start
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_16.i = load i8*, i8** %5, align 8, !alias.scope !86
  %_15.i = ptrtoint i8* %_16.i to i64
  %_17.i = ptrtoint i8* %start1.i to i64
  %6 = sub nuw i64 %_15.i, %_17.i
  store i64 %6, i64* %1, align 8, !noalias !86
  %_19.i = load i64, i64* %1, align 8, !noalias !86
  %7 = udiv exact i64 %_19.i, %4
  store i64 %7, i64* %_4.i, align 8, !noalias !86
  br label %"_ZN4core5slice13Iter$LT$T$GT$10make_slice17h1dc4c61d694f63e0E.exit"

bb3.i:                                            ; preds = %start
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11.i = load i8*, i8** %8, align 8, !alias.scope !86
  %_10.i = ptrtoint i8* %_11.i to i64
  %_12.i = ptrtoint i8* %start1.i to i64
; call core::num::<impl usize>::wrapping_sub
  %9 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h38504eb62fe2ddbeE"(i64 %_10.i, i64 %_12.i), !noalias !86
  store i64 %9, i64* %_4.i, align 8, !noalias !86
  br label %"_ZN4core5slice13Iter$LT$T$GT$10make_slice17h1dc4c61d694f63e0E.exit"

"_ZN4core5slice13Iter$LT$T$GT$10make_slice17h1dc4c61d694f63e0E.exit": ; preds = %bb3.i, %bb2.i
  %10 = load i64, i64* %_4.i, align 8, !noalias !86
; call core::slice::from_raw_parts
  %11 = call { [0 x i8]*, i64 } @_ZN4core5slice14from_raw_parts17h6ba427154f89012bE(i8* %_3.i, i64 %10), !noalias !86
  %12 = extractvalue { [0 x i8]*, i64 } %11, 0
  %13 = extractvalue { [0 x i8]*, i64 } %11, 1
  %14 = extractvalue { [0 x i8]*, i64 } %11, 0
  %15 = extractvalue { [0 x i8]*, i64 } %11, 1
  br label %bb1

bb1:                                              ; preds = %"_ZN4core5slice13Iter$LT$T$GT$10make_slice17h1dc4c61d694f63e0E.exit"
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %14, 0
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %15, 1
  ret { [0 x i8]*, i64 } %17
}

; core::slice::from_raw_parts
; Function Attrs: inlinehint uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @_ZN4core5slice14from_raw_parts17h00ea9ece2e311064E(%"alloc::string::String"* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha574f2b6cf2de5eaE(%"alloc::string::String"* %data)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %1, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [41 x i8] }>* @20 to [0 x i8]*), i64 41, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @22 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb11

bb6:                                              ; preds = %bb5
  store i64 24, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::num::<impl usize>::saturating_mul
  %3 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17ha5a86de0800d1c3cE"(i64 %2, i64 %len)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_13 = icmp ule i64 %3, 9223372036854775807
  %_12 = xor i1 %_13, true
  br i1 %_12, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [55 x i8] }>* @23 to [0 x i8]*), i64 55, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @24 to %"core::panic::Location"*))
  unreachable

bb11:                                             ; preds = %bb9, %bb5
; call core::ptr::slice_from_raw_parts
  %4 = call { [0 x %"alloc::string::String"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h3f6283f676733e3fE(%"alloc::string::String"* %data, i64 %len)
  %_22.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %4, 0
  %_22.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %4, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %5 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %_22.0, 0
  %6 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %5, i64 %_22.1, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %6
}

; core::slice::from_raw_parts
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @_ZN4core5slice14from_raw_parts17h6ba427154f89012bE(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h508132dae9fdf55fE(i8* %data)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %1, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [41 x i8] }>* @20 to [0 x i8]*), i64 41, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @22 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb11

bb6:                                              ; preds = %bb5
  store i64 1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::num::<impl usize>::saturating_mul
  %3 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17ha5a86de0800d1c3cE"(i64 %2, i64 %len)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_13 = icmp ule i64 %3, 9223372036854775807
  %_12 = xor i1 %_13, true
  br i1 %_12, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [55 x i8] }>* @23 to [0 x i8]*), i64 55, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @24 to %"core::panic::Location"*))
  unreachable

bb11:                                             ; preds = %bb9, %bb5
; call core::ptr::slice_from_raw_parts
  %4 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h870249d18a2b2e43E(i8* %data, i64 %len)
  %_22.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_22.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_22.0, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %_22.1, 1
  ret { [0 x i8]*, i64 } %6
}

; core::slice::from_raw_parts
; Function Attrs: inlinehint uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core5slice14from_raw_parts17hddc6ff619bd676b7E(%"serde_json::value::Value"* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5bffdb0aa97c26a4E(%"serde_json::value::Value"* %data)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %1, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [41 x i8] }>* @20 to [0 x i8]*), i64 41, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @22 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb11

bb6:                                              ; preds = %bb5
  store i64 32, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::num::<impl usize>::saturating_mul
  %3 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17ha5a86de0800d1c3cE"(i64 %2, i64 %len)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_13 = icmp ule i64 %3, 9223372036854775807
  %_12 = xor i1 %_13, true
  br i1 %_12, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [55 x i8] }>* @23 to [0 x i8]*), i64 55, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @24 to %"core::panic::Location"*))
  unreachable

bb11:                                             ; preds = %bb9, %bb5
; call core::ptr::slice_from_raw_parts
  %4 = call { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hf375c166e050924bE(%"serde_json::value::Value"* %data, i64 %len)
  %_22.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %4, 0
  %_22.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %4, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %5 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %_22.0, 0
  %6 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, i64 %_22.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %6
}

; core::slice::from_raw_parts_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h1cdf6ab51244c554E(%"serde_json::value::Value"* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h5bffdb0aa97c26a4E(%"serde_json::value::Value"* %data)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %1, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [41 x i8] }>* @20 to [0 x i8]*), i64 41, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @25 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb11

bb6:                                              ; preds = %bb5
  store i64 32, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::num::<impl usize>::saturating_mul
  %3 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17ha5a86de0800d1c3cE"(i64 %2, i64 %len)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_15 = icmp ule i64 %3, 9223372036854775807
  %_14 = xor i1 %_15, true
  br i1 %_14, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [55 x i8] }>* @23 to [0 x i8]*), i64 55, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @26 to %"core::panic::Location"*))
  unreachable

bb11:                                             ; preds = %bb9, %bb5
; call core::ptr::slice_from_raw_parts_mut
  %4 = call { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h66dc1378abbdebbcE(%"serde_json::value::Value"* %data, i64 %len)
  %_24.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %4, 0
  %_24.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %4, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %5 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %_24.0, 0
  %6 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, i64 %_24.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %6
}

; core::slice::from_raw_parts_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h3d3444bbaa527763E(%"alloc::string::String"* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17ha574f2b6cf2de5eaE(%"alloc::string::String"* %data)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %1, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [41 x i8] }>* @20 to [0 x i8]*), i64 41, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @25 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb11

bb6:                                              ; preds = %bb5
  store i64 24, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::num::<impl usize>::saturating_mul
  %3 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17ha5a86de0800d1c3cE"(i64 %2, i64 %len)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_15 = icmp ule i64 %3, 9223372036854775807
  %_14 = xor i1 %_15, true
  br i1 %_14, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [55 x i8] }>* @23 to [0 x i8]*), i64 55, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @26 to %"core::panic::Location"*))
  unreachable

bb11:                                             ; preds = %bb9, %bb5
; call core::ptr::slice_from_raw_parts_mut
  %4 = call { [0 x %"alloc::string::String"]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hcce529bcfc50630fE(%"alloc::string::String"* %data, i64 %len)
  %_24.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %4, 0
  %_24.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %4, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %5 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %_24.0, 0
  %6 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %5, i64 %_24.1, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %6
}

; core::slice::from_raw_parts_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @_ZN4core5slice18from_raw_parts_mut17hcfc009bfc8a440dbE(i8* %data, i64 %len) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17h508132dae9fdf55fE(i8* %data)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %1, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [41 x i8] }>* @20 to [0 x i8]*), i64 41, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @25 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb11

bb6:                                              ; preds = %bb5
  store i64 1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::num::<impl usize>::saturating_mul
  %3 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17ha5a86de0800d1c3cE"(i64 %2, i64 %len)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_15 = icmp ule i64 %3, 9223372036854775807
  %_14 = xor i1 %_15, true
  br i1 %_14, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [55 x i8] }>* @23 to [0 x i8]*), i64 55, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @26 to %"core::panic::Location"*))
  unreachable

bb11:                                             ; preds = %bb9, %bb5
; call core::ptr::slice_from_raw_parts_mut
  %4 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hcc14581184651ec1E(i8* %data, i64 %len)
  %_24.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_24.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_24.0, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %_24.1, 1
  ret { [0 x i8]*, i64 } %6
}

; core::slice::from_raw_parts_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i64*]*, i64 } @_ZN4core5slice18from_raw_parts_mut17he8f47b8cdc453854E(i64** %data, i64 %len) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call core::intrinsics::is_aligned_and_not_null
  %1 = call zeroext i1 @_ZN4core10intrinsics23is_aligned_and_not_null17hf8b7aa1147d444ceE(i64** %data)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %1, true
  br i1 %_5, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [41 x i8] }>* @20 to [0 x i8]*), i64 41, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @25 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  br i1 false, label %bb6, label %bb11

bb6:                                              ; preds = %bb5
  store i64 8, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::num::<impl usize>::saturating_mul
  %3 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_mul17ha5a86de0800d1c3cE"(i64 %2, i64 %len)
  br label %bb8

bb8:                                              ; preds = %bb7
  %_15 = icmp ule i64 %3, 9223372036854775807
  %_14 = xor i1 %_15, true
  br i1 %_14, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [55 x i8] }>* @23 to [0 x i8]*), i64 55, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @26 to %"core::panic::Location"*))
  unreachable

bb11:                                             ; preds = %bb9, %bb5
; call core::ptr::slice_from_raw_parts_mut
  %4 = call { [0 x i64*]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17h941274697d1fd162E(i64** %data, i64 %len)
  %_24.0 = extractvalue { [0 x i64*]*, i64 } %4, 0
  %_24.1 = extractvalue { [0 x i64*]*, i64 } %4, 1
  br label %bb12

bb12:                                             ; preds = %bb11
  %5 = insertvalue { [0 x i64*]*, i64 } undef, [0 x i64*]* %_24.0, 0
  %6 = insertvalue { [0 x i64*]*, i64 } %5, i64 %_24.1, 1
  ret { [0 x i64*]*, i64 } %6
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint uwtable
define internal %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h1fc3d89362852cbaE"([0 x %"alloc::string::String"]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"alloc::string::String"]* %self.0 to %"alloc::string::String"*
  ret %"alloc::string::String"* %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h3c30ddea5112580bE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint uwtable
define internal %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h4775dfefced5b2d2E"([0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %self.0 to %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"*
  ret %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint uwtable
define internal %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h5ffcd5ee44c2218aE"([0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %self.0 to %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"*
  ret %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint uwtable
define internal %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7581a17caccf72fbE"([0 x %"serde_json::value::Value"]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"serde_json::value::Value"]* %self.0 to %"serde_json::value::Value"*
  ret %"serde_json::value::Value"* %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint uwtable
define internal i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9e3654d24d32d00eE"([0 x i8*]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8*]* %self.0 to i8**
  ret i8** %0
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint uwtable
define internal i64** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17haa5356113af96502E"([0 x i64*]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i64*]* %self.0 to i64**
  ret i64** %0
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(8) i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h21dca82904f67733E"([0 x i8*]* noalias nonnull readonly align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::SliceIndex<[T]>>::get_unchecked
  %0 = call align 8 dereferenceable(8) i8** @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2581da45e3804f72E"(i64 %index, [0 x i8*]* noalias nonnull readonly align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %0
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha12b7a73cd429512E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::SliceIndex<[T]>>::get_unchecked
  %0 = call align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17heb6aacbe3dfa2089E"(i64 %index, [0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"serde_json::value::Value"* %0
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hc3a2ad00430fca9fE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::SliceIndex<[T]>>::get_unchecked
  %0 = call align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h910bc23973128fe8E"(i64 %index, [0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %0
}

; core::slice::<impl [T]>::copy_from_slice
; Function Attrs: uwtable
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17he89b076b9f180569E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* noalias nonnull readonly align 1 %src.0, i64 %src.1) unnamed_addr #1 {
start:
  %_30 = alloca %"core::fmt::Arguments", align 8
  %_28 = alloca i64*, align 8
  %_26 = alloca i64*, align 8
  %_24 = alloca { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }, align 8
  %_23 = alloca [3 x { i8*, i8* }], align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_8 = alloca i64, align 8
  %_5 = alloca i64, align 8
  %_3 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::len
  %0 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  store i64 %0, i64* %_5, align 8
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::len
  %1 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %src.0, i64 %src.1)
  store i64 %1, i64* %_8, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast { i64*, i64* }* %_3 to i64**
  store i64* %_5, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1
  store i64* %_8, i64** %3, align 8
  %4 = bitcast { i64*, i64* }* %_3 to i64**
  %left_val = load i64*, i64** %4, align 8, !nonnull !2
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1
  %right_val = load i64*, i64** %5, align 8, !nonnull !2
  %_14 = load i64, i64* %left_val, align 8
  %_15 = load i64, i64* %right_val, align 8
  %_13 = icmp eq i64 %_14, %_15
  %_12 = xor i1 %_13, true
  br i1 %_12, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::as_ptr
  %6 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8438786b013cdbe7E"([0 x i8]* noalias nonnull readonly align 1 %src.0, i64 %src.1)
  br label %bb10

bb4:                                              ; preds = %bb2
  store i64* %left_val, i64** %_26, align 8
  store i64* %right_val, i64** %_28, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h051a28c28e177c3eE(%"core::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_30, [0 x { [0 x i8]*, i64 }]* noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8] }>* @32 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i8* }]* noalias nonnull readonly align 8 inttoptr (i64 8 to [0 x { i8*, i8* }]*), i64 0)
  br label %bb5

bb5:                                              ; preds = %bb4
  %7 = bitcast { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }* %_24 to i64***
  store i64** %_26, i64*** %7, align 8
  %8 = getelementptr inbounds { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }, { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }* %_24, i32 0, i32 3
  store i64** %_28, i64*** %8, align 8
  %9 = getelementptr inbounds { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }, { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }* %_24, i32 0, i32 5
  store %"core::fmt::Arguments"* %_30, %"core::fmt::Arguments"** %9, align 8
  %10 = bitcast { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }* %_24 to i64***
  %arg0 = load i64**, i64*** %10, align 8, !nonnull !2
  %11 = getelementptr inbounds { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }, { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }* %_24, i32 0, i32 3
  %arg1 = load i64**, i64*** %11, align 8, !nonnull !2
  %12 = getelementptr inbounds { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }, { [0 x i64], i64**, [0 x i64], i64**, [0 x i64], %"core::fmt::Arguments"*, [0 x i64] }* %_24, i32 0, i32 5
  %arg2 = load %"core::fmt::Arguments"*, %"core::fmt::Arguments"** %12, align 8, !nonnull !2
; call core::fmt::ArgumentV1::new
  %13 = call { i8*, i8* } @_ZN4core3fmt10ArgumentV13new17h158d5be3aaefe6f4E(i64** noalias readonly align 8 dereferenceable(8) %arg0, i1 (i64**, %"core::fmt::Formatter"*)* nonnull @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb5b5687cdfcb6179E")
  %14 = extractvalue { i8*, i8* } %13, 0
  %15 = extractvalue { i8*, i8* } %13, 1
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::fmt::ArgumentV1::new
  %16 = call { i8*, i8* } @_ZN4core3fmt10ArgumentV13new17h158d5be3aaefe6f4E(i64** noalias readonly align 8 dereferenceable(8) %arg1, i1 (i64**, %"core::fmt::Formatter"*)* nonnull @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb5b5687cdfcb6179E")
  %17 = extractvalue { i8*, i8* } %16, 0
  %18 = extractvalue { i8*, i8* } %16, 1
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::fmt::ArgumentV1::new
  %19 = call { i8*, i8* } @_ZN4core3fmt10ArgumentV13new17hafb5b738f66ff23aE(%"core::fmt::Arguments"* noalias readonly align 8 dereferenceable(48) %arg2, i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* nonnull @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h1af424902c06a4ccE")
  %20 = extractvalue { i8*, i8* } %19, 0
  %21 = extractvalue { i8*, i8* } %19, 1
  br label %bb8

bb8:                                              ; preds = %bb7
  %22 = bitcast [3 x { i8*, i8* }]* %_23 to { i8*, i8* }*
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %22, i32 0, i32 0
  store i8* %14, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %22, i32 0, i32 1
  store i8* %15, i8** %24, align 8
  %25 = getelementptr inbounds [3 x { i8*, i8* }], [3 x { i8*, i8* }]* %_23, i32 0, i32 1
  %26 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %25, i32 0, i32 0
  store i8* %17, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %25, i32 0, i32 1
  store i8* %18, i8** %27, align 8
  %28 = getelementptr inbounds [3 x { i8*, i8* }], [3 x { i8*, i8* }]* %_23, i32 0, i32 2
  %29 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %28, i32 0, i32 0
  store i8* %20, i8** %29, align 8
  %30 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %28, i32 0, i32 1
  store i8* %21, i8** %30, align 8
  %_20.0 = bitcast [3 x { i8*, i8* }]* %_23 to [0 x { i8*, i8* }]*
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h051a28c28e177c3eE(%"core::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_16, [0 x { [0 x i8]*, i64 }]* noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @30 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i8* }]* noalias nonnull readonly align 8 %_20.0, i64 3)
  br label %bb9

bb9:                                              ; preds = %bb8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hd7292ad32c8f247fE(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_16, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @33 to %"core::panic::Location"*))
  unreachable

bb10:                                             ; preds = %bb3
; call core::slice::<impl [T]>::as_mut_ptr
  %31 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h3c30ddea5112580bE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  br label %bb11

bb11:                                             ; preds = %bb10
; call core::slice::<impl [T]>::len
  %32 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h07ea2f73c29f8f57E(i8* %6, i8* %31, i64 %32)
  br label %bb13

bb13:                                             ; preds = %bb12
  ret void
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(8) i64** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h3af5fb81b650355dE"([0 x i64*]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut
  %_3 = call align 8 dereferenceable(8) i64** @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7294b04d8e171c7E"(i64 %index, [0 x i64*]* nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64** %_3
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h793f5eb521307fa8E"([0 x %"serde_json::value::Value"]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut
  %_3 = call align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hcacc4f77d38f6abcE"(i64 %index, [0 x %"serde_json::value::Value"]* nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"serde_json::value::Value"* %_3
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha48b2ffd00e931fdE"([0 x %"alloc::string::String"]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut
  %_3 = call align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h828af7891aa52bf4E"(i64 %index, [0 x %"alloc::string::String"]* nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::string::String"* %_3
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(8) i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hc6fff8e94007762cE"([0 x i8*]* nonnull align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut
  %_3 = call align 8 dereferenceable(8) i8** @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7ed3b19362c3d265E"(i64 %index, [0 x i8*]* nonnull align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8** %_3
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17he3db8f7bb3638e38E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFrom<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut
  %0 = call { [0 x i8]*, i64 } @"_ZN103_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hd64912864bd0a3f9E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable_or_null(8) i64* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hc137014e2a501e49E"([0 x double]* noalias nonnull readonly align 8 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
; call <usize as core::slice::SliceIndex<[T]>>::get
  %0 = call align 8 dereferenceable_or_null(8) i64* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h86b1936fe8a07f95E"(i64 %index, [0 x double]* noalias nonnull readonly align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2a3c878ec09fe90eE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::Repr<alloc::string::String>", align 8
  %0 = bitcast %"core::ptr::Repr<alloc::string::String>"* %_2 to { [0 x %"alloc::string::String"]*, i64 }*
  %1 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %0, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %self.0, [0 x %"alloc::string::String"]** %1, align 8
  %2 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::Repr<alloc::string::String>"* %_2 to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6e3cf14716c0165eE"([0 x i64*]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::Repr<alloc::collections::btree::node::BoxedNode<alloc::string::String, serde_json::value::Value>>", align 8
  %0 = bitcast %"core::ptr::Repr<alloc::collections::btree::node::BoxedNode<alloc::string::String, serde_json::value::Value>>"* %_2 to { [0 x i64*]*, i64 }*
  %1 = getelementptr inbounds { [0 x i64*]*, i64 }, { [0 x i64*]*, i64 }* %0, i32 0, i32 0
  store [0 x i64*]* %self.0, [0 x i64*]** %1, align 8
  %2 = getelementptr inbounds { [0 x i64*]*, i64 }, { [0 x i64*]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::Repr<alloc::collections::btree::node::BoxedNode<alloc::string::String, serde_json::value::Value>>"* %_2 to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbd3a34ea3a658653E"([0 x double]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::Repr<f64>", align 8
  %0 = bitcast %"core::ptr::Repr<f64>"* %_2 to { [0 x double]*, i64 }*
  %1 = getelementptr inbounds { [0 x double]*, i64 }, { [0 x double]*, i64 }* %0, i32 0, i32 0
  store [0 x double]* %self.0, [0 x double]** %1, align 8
  %2 = getelementptr inbounds { [0 x double]*, i64 }, { [0 x double]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::Repr<f64>"* %_2 to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::Repr<u8>", align 8
  %0 = bitcast %"core::ptr::Repr<u8>"* %_2 to { [0 x i8]*, i64 }*
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::Repr<u8>"* %_2 to { i8*, i64 }*
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::len
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hd46285897c85b5caE"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::ptr::Repr<serde_json::value::Value>", align 8
  %0 = bitcast %"core::ptr::Repr<serde_json::value::Value>"* %_2 to { [0 x %"serde_json::value::Value"]*, i64 }*
  %1 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %0, i32 0, i32 0
  store [0 x %"serde_json::value::Value"]* %self.0, [0 x %"serde_json::value::Value"]** %1, align 8
  %2 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %0, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  %3 = bitcast %"core::ptr::Repr<serde_json::value::Value>"* %_2 to { i64*, i64 }*
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint uwtable
define internal { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hba3b518ca89c473eE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_21 = alloca %"core::marker::PhantomData<&alloc::string::String>", align 1
  %end = alloca %"alloc::string::String"*, align 8
  %1 = alloca { i64*, i64* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %_7 = call %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h33bc45f91f504c27E"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf12685b955243de4E"(%"alloc::string::String"* %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %2, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i64 24, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %_9 = icmp eq i64 %3, 0
  br i1 %_9, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
; call core::slice::<impl [T]>::len
  %4 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2a3c878ec09fe90eE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %self.0, i64 %self.1)
  br label %bb9

bb6:                                              ; preds = %bb4
  %_12 = bitcast %"alloc::string::String"* %_7 to i8*
; call core::slice::<impl [T]>::len
  %5 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2a3c878ec09fe90eE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %self.0, i64 %self.1)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::ptr::<impl *const T>::wrapping_add
  %6 = call i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h006e727c5252faefE"(i8* %_12, i64 %5)
  br label %bb8

bb8:                                              ; preds = %bb7
  %7 = bitcast i8* %6 to %"alloc::string::String"*
  store %"alloc::string::String"* %7, %"alloc::string::String"** %end, align 8
  br label %bb11

bb9:                                              ; preds = %bb5
; call core::ptr::<impl *const T>::add
  %8 = call %"alloc::string::String"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd82359365f97e9b2E"(%"alloc::string::String"* %_7, i64 %4)
  store %"alloc::string::String"* %8, %"alloc::string::String"** %end, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %_20 = load %"alloc::string::String"*, %"alloc::string::String"** %end, align 8
  %9 = bitcast { i64*, i64* }* %1 to %"alloc::string::String"**
  store %"alloc::string::String"* %_7, %"alloc::string::String"** %9, align 8
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 1
  %11 = bitcast i64** %10 to %"alloc::string::String"**
  store %"alloc::string::String"* %_20, %"alloc::string::String"** %11, align 8
  %12 = bitcast { i64*, i64* }* %1 to %"core::marker::PhantomData<&alloc::string::String>"*
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 1
  %16 = load i64*, i64** %15, align 8
  %17 = insertvalue { i64*, i64* } undef, i64* %14, 0
  %18 = insertvalue { i64*, i64* } %17, i64* %16, 1
  ret { i64*, i64* } %18
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint uwtable
define internal { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he2406e67e1a15259E"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_21 = alloca %"core::marker::PhantomData<&u8>", align 1
  %end = alloca i8*, align 8
  %1 = alloca { i8*, i8* }, align 8
; call core::slice::<impl [T]>::as_ptr
  %_7 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8438786b013cdbe7E"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *const T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h59711f8087130b82E"(i8* %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %2, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  store i64 1, i64* %0, align 8
  %3 = load i64, i64* %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %_9 = icmp eq i64 %3, 0
  br i1 %_9, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
; call core::slice::<impl [T]>::len
  %4 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb9

bb6:                                              ; preds = %bb4
; call core::slice::<impl [T]>::len
  %5 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::ptr::<impl *const T>::wrapping_add
  %6 = call i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h006e727c5252faefE"(i8* %_7, i64 %5)
  br label %bb8

bb8:                                              ; preds = %bb7
  store i8* %6, i8** %end, align 8
  br label %bb11

bb9:                                              ; preds = %bb5
; call core::ptr::<impl *const T>::add
  %7 = call i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17ha8ce4781bed18733E"(i8* %_7, i64 %4)
  store i8* %7, i8** %end, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %_20 = load i8*, i8** %end, align 8
  %8 = bitcast { i8*, i8* }* %1 to i8**
  store i8* %_7, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  store i8* %_20, i8** %9, align 8
  %10 = bitcast { i8*, i8* }* %1 to %"core::marker::PhantomData<&u8>"*
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = insertvalue { i8*, i8* } undef, i8* %12, 0
  %16 = insertvalue { i8*, i8* } %15, i8* %14, 1
  ret { i8*, i8* } %16
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint uwtable
define internal double* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3399c838bce72ef9E"([0 x double]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x double]* %self.0 to double*
  ret double* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h33bc45f91f504c27E"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"alloc::string::String"]* %self.0 to %"alloc::string::String"*
  ret %"alloc::string::String"* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint uwtable
define internal i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6ff6d7af6ed886fbE"([0 x i8*]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8*]* %self.0 to i8**
  ret i8** %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8438786b013cdbe7E"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i8]* %self.0 to i8*
  ret i8* %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint uwtable
define internal i64** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h892d988f54a05abdE"([0 x i64*]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x i64*]* %self.0 to i64**
  ret i64** %0
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint uwtable
define internal %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc14e7bc708c0d1d8E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = bitcast [0 x %"serde_json::value::Value"]* %self.0 to %"serde_json::value::Value"*
  ret %"serde_json::value::Value"* %0
}

; core::slice::<impl core::cmp::Ord for [T]>::cmp
; Function Attrs: uwtable
define internal i8 @"_ZN4core5slice56_$LT$impl$u20$core..cmp..Ord$u20$for$u20$$u5b$T$u5d$$GT$3cmp17h871837a832c7127aE"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* noalias nonnull readonly align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call <[u8] as core::slice::SliceOrd<u8>>::compare
  %0 = call i8 @"_ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17h558975b855a728a4E"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* noalias nonnull readonly align 1 %other.0, i64 %other.1), !range !16
  br label %bb1

bb1:                                              ; preds = %start
  ret i8 %0
}

; core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h79e7302e234d2e49E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFull as core::slice::SliceIndex<[T]>>::index_mut
  %0 = call { [0 x i8]*, i64 } @"_ZN90_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf7211f32a2017bcbE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %2
}

; core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17ha9a2fe20bb67b172E"([0 x %"serde_json::value::Value"]* nonnull align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call <core::ops::range::RangeFull as core::slice::SliceIndex<[T]>>::index_mut
  %0 = call { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN90_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb037f6210ef8e54eE"([0 x %"serde_json::value::Value"]* nonnull align 8 %self.0, i64 %self.1)
  %_3.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %_3.0, 0
  %2 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %2
}

; core::slice::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: uwtable
define internal { i8*, i8* } @"_ZN4core5slice87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h62294fff6c0bee53E"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call core::slice::<impl [T]>::iter
  %0 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he2406e67e1a15259E"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1
  ret { i8*, i8* } %4
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17ha9ac15649e91aeb4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %_6 = alloca {}, align 1
  %x = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  store i8 0, i8* %_7, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_7, align 1
  store i8 1, i8* %_8, align 1
  %2 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self, i32 0, i32 1
  %3 = load {}*, {}** %2, align 8
  %4 = icmp ule {}* %3, null
  %_3 = select i1 %4, i64 0, i64 1
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb8, %bb7, %bb9
  %5 = bitcast { i8*, i32 }* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
; invoke alloc::collections::btree::map::unwrap_unchecked::{{closure}}
  invoke void @"_ZN5alloc11collections5btree3map16unwrap_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17h93f2ed4149396757E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0)
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %11 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %12 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %11 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to i8*
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false)
  br label %bb12

bb5:                                              ; preds = %bb2
  br label %bb12

bb6:                                              ; preds = %bb11, %bb12
  %17 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self, i32 0, i32 1
  %18 = load {}*, {}** %17, align 8
  %19 = icmp ule {}* %18, null
  %_10 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_10, 1
  br i1 %20, label %bb14, label %bb16

bb7:                                              ; preds = %bb10
  %21 = load i8, i8* %_7, align 1, !range !4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb8, label %bb1

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_7, align 1
  br label %bb1

bb9:                                              ; preds = %bb10
  br label %bb1

bb10:                                             ; preds = %cleanup
  %23 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self, i32 0, i32 1
  %24 = load {}*, {}** %23, align 8
  %25 = icmp ule {}* %24, null
  %_9 = select i1 %25, i64 0, i64 1
  %26 = icmp eq i64 %_9, 1
  br i1 %26, label %bb7, label %bb9

bb11:                                             ; preds = %bb12
  store i8 0, i8* %_8, align 1
  br label %bb6

bb12:                                             ; preds = %bb5, %bb4
  %27 = load i8, i8* %_8, align 1, !range !4
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb11, label %bb6

bb13:                                             ; preds = %bb15, %bb14, %bb16
  ret void

bb14:                                             ; preds = %bb6
  %29 = load i8, i8* %_7, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb15, label %bb13

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_7, align 1
  br label %bb13

bb16:                                             ; preds = %bb6
  br label %bb13

cleanup:                                          ; preds = %bb2
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb10
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17he95a5dcb2bed2414E"(i64, i64) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %_6 = alloca {}, align 1
  %3 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store i8 0, i8* %_7, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_7, align 1
  store i8 1, i8* %_8, align 1
  %6 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %6, align 8, !range !1
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb8, %bb7, %bb9
  %7 = bitcast { i8*, i32 }* %2 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb2:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in::{{closure}}
  %13 = invoke i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h8af7d74692f2d036E"()
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %14 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %15 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %14, i32 0, i32 1
  %x = load i64, i64* %15, align 8
  store i64 %x, i64* %3, align 8
  br label %bb12

bb5:                                              ; preds = %bb2
  store i64 %13, i64* %3, align 8
  br label %bb12

bb6:                                              ; preds = %bb11, %bb12
  %16 = bitcast { i64, i64 }* %self to i64*
  %_10 = load i64, i64* %16, align 8, !range !1
  %17 = icmp eq i64 %_10, 1
  br i1 %17, label %bb14, label %bb16

bb7:                                              ; preds = %bb10
  %18 = load i8, i8* %_7, align 1, !range !4
  %19 = trunc i8 %18 to i1
  br i1 %19, label %bb8, label %bb1

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_7, align 1
  br label %bb1

bb9:                                              ; preds = %bb10
  br label %bb1

bb10:                                             ; preds = %cleanup
  %20 = bitcast { i64, i64 }* %self to i64*
  %_9 = load i64, i64* %20, align 8, !range !1
  %21 = icmp eq i64 %_9, 1
  br i1 %21, label %bb7, label %bb9

bb11:                                             ; preds = %bb12
  store i8 0, i8* %_8, align 1
  br label %bb6

bb12:                                             ; preds = %bb5, %bb4
  %22 = load i8, i8* %_8, align 1, !range !4
  %23 = trunc i8 %22 to i1
  br i1 %23, label %bb11, label %bb6

bb13:                                             ; preds = %bb15, %bb14, %bb16
  %24 = load i64, i64* %3, align 8
  ret i64 %24

bb14:                                             ; preds = %bb6
  %25 = load i8, i8* %_7, align 1, !range !4
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb15, label %bb13

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_7, align 1
  br label %bb13

bb16:                                             ; preds = %bb6
  br label %bb13

cleanup:                                          ; preds = %bb2
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb10
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h4cb4e06f12120a2bE"(i64, i64) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %3 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store i8 0, i8* %_7, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_7, align 1
  store i8 1, i8* %_8, align 1
  %6 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %6, align 8, !range !1
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb9, %bb8, %bb10
  %7 = bitcast { i8*, i32 }* %2 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb2:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
  %13 = bitcast { i64, i64 }* %3 to %"core::result::Result<usize, core::alloc::LayoutErr>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<usize, core::alloc::LayoutErr>::Err", %"core::result::Result<usize, core::alloc::LayoutErr>::Err"* %13, i32 0, i32 1
  %15 = bitcast { i64, i64 }* %3 to i64*
  store i64 1, i64* %15, align 8
  br label %bb6

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %16 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %16, i32 0, i32 1
  %v = load i64, i64* %17, align 8
  %18 = bitcast { i64, i64 }* %3 to %"core::result::Result<usize, core::alloc::LayoutErr>::Ok"*
  %19 = getelementptr inbounds %"core::result::Result<usize, core::alloc::LayoutErr>::Ok", %"core::result::Result<usize, core::alloc::LayoutErr>::Ok"* %18, i32 0, i32 1
  store i64 %v, i64* %19, align 8
  %20 = bitcast { i64, i64 }* %3 to i64*
  store i64 0, i64* %20, align 8
  br label %bb6

bb5:                                              ; No predecessors!
  %21 = bitcast { i64, i64 }* %self to i64*
  %_9 = load i64, i64* %21, align 8, !range !1
  %22 = icmp eq i64 %_9, 1
  br i1 %22, label %bb8, label %bb10

bb6:                                              ; preds = %bb2, %bb4
  %23 = load i8, i8* %_8, align 1, !range !4
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb11, label %bb7

bb7:                                              ; preds = %bb11, %bb6
  %25 = bitcast { i64, i64 }* %self to i64*
  %_10 = load i64, i64* %25, align 8, !range !1
  %26 = icmp eq i64 %_10, 1
  br i1 %26, label %bb13, label %bb15

bb8:                                              ; preds = %bb5
  %27 = load i8, i8* %_7, align 1, !range !4
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb9, label %bb1

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_7, align 1
  br label %bb1

bb10:                                             ; preds = %bb5
  br label %bb1

bb11:                                             ; preds = %bb6
  store i8 0, i8* %_8, align 1
  br label %bb7

bb12:                                             ; preds = %bb14, %bb13, %bb15
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  %30 = load i64, i64* %29, align 8, !range !1
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = insertvalue { i64, i64 } undef, i64 %30, 0
  %34 = insertvalue { i64, i64 } %33, i64 %32, 1
  ret { i64, i64 } %34

bb13:                                             ; preds = %bb7
  %35 = load i8, i8* %_7, align 1, !range !4
  %36 = trunc i8 %35 to i1
  br i1 %36, label %bb14, label %bb12

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_7, align 1
  br label %bb12

bb15:                                             ; preds = %bb7
  br label %bb12
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5f66282e5c93fabcE"(i8*) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %2 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_7, align 1
  store i8 1, i8* %_8, align 1
  %3 = bitcast i8** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp ule {}* %4, null
  %_3 = select i1 %5, i64 0, i64 1
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb9, %bb8, %bb10
  %6 = bitcast { i8*, i32 }* %1 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

bb2:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
  %12 = bitcast i8** %2 to %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocErr>::Err"*
  %13 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocErr>::Err"* %12 to %"core::alloc::AllocErr"*
  %14 = bitcast i8** %2 to {}**
  store {}* null, {}** %14, align 8
  br label %bb6

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %v = load i8*, i8** %self, align 8, !nonnull !2
  store i8* %v, i8** %2, align 8
  br label %bb6

bb5:                                              ; No predecessors!
  %15 = bitcast i8** %self to {}**
  %16 = load {}*, {}** %15, align 8
  %17 = icmp ule {}* %16, null
  %_9 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_9, 1
  br i1 %18, label %bb8, label %bb10

bb6:                                              ; preds = %bb2, %bb4
  %19 = load i8, i8* %_8, align 1, !range !4
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb11, label %bb7

bb7:                                              ; preds = %bb11, %bb6
  %21 = bitcast i8** %self to {}**
  %22 = load {}*, {}** %21, align 8
  %23 = icmp ule {}* %22, null
  %_10 = select i1 %23, i64 0, i64 1
  %24 = icmp eq i64 %_10, 1
  br i1 %24, label %bb13, label %bb15

bb8:                                              ; preds = %bb5
  %25 = load i8, i8* %_7, align 1, !range !4
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb9, label %bb1

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_7, align 1
  br label %bb1

bb10:                                             ; preds = %bb5
  br label %bb1

bb11:                                             ; preds = %bb6
  store i8 0, i8* %_8, align 1
  br label %bb7

bb12:                                             ; preds = %bb14, %bb13, %bb15
  %27 = load i8*, i8** %2, align 8
  ret i8* %27

bb13:                                             ; preds = %bb7
  %28 = load i8, i8* %_7, align 1, !range !4
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb14, label %bb12

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_7, align 1
  br label %bb12

bb15:                                             ; preds = %bb7
  br label %bb12
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable_or_null(24) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h70a1fb6fdee0b73cE"(i64* noalias readonly align 8 dereferenceable_or_null(24)) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %2 = alloca i64*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 0, i8* %_7, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_7, align 1
  store i8 1, i8* %_8, align 1
  %3 = bitcast i64** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp ule {}* %4, null
  %_3 = select i1 %5, i64 0, i64 1
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb9, %bb8, %bb10
  %6 = bitcast { i8*, i32 }* %1 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

bb2:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
  %12 = bitcast i64** %2 to %"core::result::Result<&alloc::string::String, core::option::NoneError>::Err"*
  %13 = bitcast %"core::result::Result<&alloc::string::String, core::option::NoneError>::Err"* %12 to %"core::option::NoneError"*
  %14 = bitcast i64** %2 to {}**
  store {}* null, {}** %14, align 8
  br label %bb6

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %15 = bitcast i64** %self to %"alloc::string::String"**
  %v = load %"alloc::string::String"*, %"alloc::string::String"** %15, align 8, !nonnull !2
  %16 = bitcast i64** %2 to %"alloc::string::String"**
  store %"alloc::string::String"* %v, %"alloc::string::String"** %16, align 8
  br label %bb6

bb5:                                              ; No predecessors!
  %17 = bitcast i64** %self to {}**
  %18 = load {}*, {}** %17, align 8
  %19 = icmp ule {}* %18, null
  %_9 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_9, 1
  br i1 %20, label %bb8, label %bb10

bb6:                                              ; preds = %bb2, %bb4
  %21 = load i8, i8* %_8, align 1, !range !4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb11, label %bb7

bb7:                                              ; preds = %bb11, %bb6
  %23 = bitcast i64** %self to {}**
  %24 = load {}*, {}** %23, align 8
  %25 = icmp ule {}* %24, null
  %_10 = select i1 %25, i64 0, i64 1
  %26 = icmp eq i64 %_10, 1
  br i1 %26, label %bb13, label %bb15

bb8:                                              ; preds = %bb5
  %27 = load i8, i8* %_7, align 1, !range !4
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb9, label %bb1

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_7, align 1
  br label %bb1

bb10:                                             ; preds = %bb5
  br label %bb1

bb11:                                             ; preds = %bb6
  store i8 0, i8* %_8, align 1
  br label %bb7

bb12:                                             ; preds = %bb14, %bb13, %bb15
  %29 = load i64*, i64** %2, align 8
  ret i64* %29

bb13:                                             ; preds = %bb7
  %30 = load i8, i8* %_7, align 1, !range !4
  %31 = trunc i8 %30 to i1
  br i1 %31, label %bb14, label %bb12

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_7, align 1
  br label %bb12

bb15:                                             ; preds = %bb7
  br label %bb12
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h866b39de6d7069e9E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), i64, i64, i64 %err.0, i64 %err.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_8 = alloca i8, align 1
  %_7 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  store i8 0, i8* %_7, align 1
  store i8 0, i8* %_8, align 1
  store i8 1, i8* %_7, align 1
  store i8 1, i8* %_8, align 1
  %6 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %6, align 8, !range !1
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb9, %bb8, %bb10
  %7 = bitcast { i8*, i32 }* %3 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb2:                                              ; preds = %start
  store i8 0, i8* %_8, align 1
  %13 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Err", %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"* %13, i32 0, i32 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0
  store i64 %err.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1
  store i64 %err.1, i64* %16, align 8
  %17 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %17, align 8
  br label %bb6

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %18 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %19 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %18, i32 0, i32 1
  %v = load i64, i64* %19, align 8
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"*
  %21 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"* %20, i32 0, i32 1
  store i64 %v, i64* %21, align 8
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %bb6

bb5:                                              ; No predecessors!
  %23 = bitcast { i64, i64 }* %self to i64*
  %_9 = load i64, i64* %23, align 8, !range !1
  %24 = icmp eq i64 %_9, 1
  br i1 %24, label %bb8, label %bb10

bb6:                                              ; preds = %bb2, %bb4
  %25 = load i8, i8* %_8, align 1, !range !4
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb11, label %bb7

bb7:                                              ; preds = %bb11, %bb6
  %27 = bitcast { i64, i64 }* %self to i64*
  %_10 = load i64, i64* %27, align 8, !range !1
  %28 = icmp eq i64 %_10, 1
  br i1 %28, label %bb13, label %bb15

bb8:                                              ; preds = %bb5
  %29 = load i8, i8* %_7, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb9, label %bb1

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_7, align 1
  br label %bb1

bb10:                                             ; preds = %bb5
  br label %bb1

bb11:                                             ; preds = %bb6
  store i8 0, i8* %_8, align 1
  br label %bb7

bb12:                                             ; preds = %bb14, %bb13, %bb15
  ret void

bb13:                                             ; preds = %bb7
  %31 = load i8, i8* %_7, align 1, !range !4
  %32 = trunc i8 %31 to i1
  br i1 %32, label %bb14, label %bb12

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_7, align 1
  br label %bb12

bb15:                                             ; preds = %bb7
  br label %bb12
}

; core::option::Option<T>::map_or
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$6map_or17h92c906a14441369bE"(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32), %"core::option::Option<serde_json::number::Number>"* noalias nocapture dereferenceable(16) %self, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_8 = alloca %"serde_json::number::Number", align 8
  %_7 = alloca { [0 x i64], %"serde_json::number::Number", [0 x i64] }, align 8
  %t = alloca %"serde_json::number::Number", align 8
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_9, align 1
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_9, align 1
  store i8 1, i8* %_10, align 1
  store i8 1, i8* %_11, align 1
  %2 = bitcast %"core::option::Option<serde_json::number::Number>"* %self to i64*
  %3 = load i64, i64* %2, align 8, !range !89
  %4 = sub i64 %3, 3
  %5 = icmp ule i64 %4, 0
  %_4 = select i1 %5, i64 0, i64 1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb10, %bb9, %bb11
  %6 = bitcast { i8*, i32 }* %1 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

bb2:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  %12 = bitcast %"serde_json::value::Value"* %0 to i8*
  %13 = bitcast %"serde_json::value::Value"* %default to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
  br label %bb15

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %14 = bitcast %"core::option::Option<serde_json::number::Number>"* %self to %"core::option::Option<serde_json::number::Number>::Some"*
  %15 = bitcast %"core::option::Option<serde_json::number::Number>::Some"* %14 to %"serde_json::number::Number"*
  %16 = bitcast %"serde_json::number::Number"* %t to i8*
  %17 = bitcast %"serde_json::number::Number"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false)
  store i8 0, i8* %_11, align 1
  %18 = bitcast %"serde_json::number::Number"* %_8 to i8*
  %19 = bitcast %"serde_json::number::Number"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false)
  %20 = bitcast { [0 x i64], %"serde_json::number::Number", [0 x i64] }* %_7 to %"serde_json::number::Number"*
  %21 = bitcast %"serde_json::number::Number"* %20 to i8*
  %22 = bitcast %"serde_json::number::Number"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false)
  %23 = bitcast { [0 x i64], %"serde_json::number::Number", [0 x i64] }* %_7 to %"serde_json::number::Number"*
; invoke core::ops::function::FnOnce::call_once
  invoke void @_ZN4core3ops8function6FnOnce9call_once17h870f634522eb8bb0E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %0, %"serde_json::number::Number"* noalias nocapture dereferenceable(16) %23)
          to label %bb6 unwind label %cleanup

bb5:                                              ; preds = %cleanup1, %bb12, %bb13
  %24 = bitcast %"core::option::Option<serde_json::number::Number>"* %self to i64*
  %25 = load i64, i64* %24, align 8, !range !89
  %26 = sub i64 %25, 3
  %27 = icmp ule i64 %26, 0
  %_12 = select i1 %27, i64 0, i64 1
  %28 = icmp eq i64 %_12, 1
  br i1 %28, label %bb9, label %bb11

bb6:                                              ; preds = %bb4
  br label %bb15

bb7:                                              ; preds = %bb14, %bb15
  %29 = load i8, i8* %_10, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb16, label %bb8

bb8:                                              ; preds = %bb16, %bb7
  %31 = bitcast %"core::option::Option<serde_json::number::Number>"* %self to i64*
  %32 = load i64, i64* %31, align 8, !range !89
  %33 = sub i64 %32, 3
  %34 = icmp ule i64 %33, 0
  %_13 = select i1 %34, i64 0, i64 1
  %35 = icmp eq i64 %_13, 1
  br i1 %35, label %bb18, label %bb20

bb9:                                              ; preds = %bb5
  %36 = load i8, i8* %_9, align 1, !range !4
  %37 = trunc i8 %36 to i1
  br i1 %37, label %bb10, label %bb1

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_9, align 1
  br label %bb1

bb11:                                             ; preds = %bb5
  br label %bb1

bb12:                                             ; preds = %bb13
  store i8 0, i8* %_10, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %default) #14
  br label %bb5

bb13:                                             ; preds = %cleanup
  %38 = load i8, i8* %_10, align 1, !range !4
  %39 = trunc i8 %38 to i1
  br i1 %39, label %bb12, label %bb5

bb14:                                             ; preds = %bb15
  store i8 0, i8* %_11, align 1
  br label %bb7

bb15:                                             ; preds = %bb2, %bb6
  %40 = load i8, i8* %_11, align 1, !range !4
  %41 = trunc i8 %40 to i1
  br i1 %41, label %bb14, label %bb7

bb16:                                             ; preds = %bb7
  store i8 0, i8* %_10, align 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %default)
          to label %bb8 unwind label %cleanup1

bb17:                                             ; preds = %bb19, %bb18, %bb20
  ret void

bb18:                                             ; preds = %bb8
  %42 = load i8, i8* %_9, align 1, !range !4
  %43 = trunc i8 %42 to i1
  br i1 %43, label %bb19, label %bb17

bb19:                                             ; preds = %bb18
  store i8 0, i8* %_9, align 1
  br label %bb17

bb20:                                             ; preds = %bb8
  br label %bb17

cleanup:                                          ; preds = %bb4
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  %46 = extractvalue { i8*, i32 } %44, 1
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %45, i8** %47, align 8
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %46, i32* %48, align 8
  br label %bb13

cleanup1:                                         ; preds = %bb16
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %51, i32* %53, align 8
  br label %bb5
}

; core::option::Option<T>::unwrap
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core6option15Option$LT$T$GT$6unwrap17h965d1c2207c750e1E"(i64, i64) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = bitcast { i64, i64 }* %self to i64*
  %_2 = load i64, i64* %5, align 8, !range !1
  switch i64 %_2, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb5
  %6 = bitcast { i8*, i32 }* %2 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

bb2:                                              ; preds = %start
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [43 x i8] }>* @34 to [0 x i8]*), i64 43, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @36 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  %12 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %13 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %12, i32 0, i32 1
  %val = load i64, i64* %13, align 8
  %14 = bitcast { i64, i64 }* %self to i64*
  %_8 = load i64, i64* %14, align 8, !range !1
  %15 = icmp eq i64 %_8, 1
  br i1 %15, label %bb6, label %bb7

bb5:                                              ; preds = %cleanup
  br label %bb1

bb6:                                              ; preds = %bb7, %bb4
  ret i64 %val

bb7:                                              ; preds = %bb4
  br label %bb6

unreachable:                                      ; preds = %bb2
  unreachable

cleanup:                                          ; preds = %bb2
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb5
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h87e236fad7116e6cE"(i64, i64, i64 %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %3 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store i8 0, i8* %_5, align 1
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_5, align 1
  store i8 1, i8* %_6, align 1
  %6 = bitcast { i64, i64 }* %self to i64*
  %_3 = load i64, i64* %6, align 8, !range !1
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb8, %bb7, %bb9
  %7 = bitcast { i8*, i32 }* %2 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1
  resume { i8*, i32 } %12

bb2:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
  store i64 %default, i64* %3, align 8
  br label %bb11

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_5, align 1
  %13 = bitcast { i64, i64 }* %self to %"core::option::Option<usize>::Some"*
  %14 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %13, i32 0, i32 1
  %x = load i64, i64* %14, align 8
  store i64 %x, i64* %3, align 8
  br label %bb11

bb5:                                              ; No predecessors!
  %15 = bitcast { i64, i64 }* %self to i64*
  %_7 = load i64, i64* %15, align 8, !range !1
  %16 = icmp eq i64 %_7, 1
  br i1 %16, label %bb7, label %bb9

bb6:                                              ; preds = %bb10, %bb11
  %17 = bitcast { i64, i64 }* %self to i64*
  %_8 = load i64, i64* %17, align 8, !range !1
  %18 = icmp eq i64 %_8, 1
  br i1 %18, label %bb13, label %bb15

bb7:                                              ; preds = %bb5
  %19 = load i8, i8* %_5, align 1, !range !4
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb8, label %bb1

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_5, align 1
  br label %bb1

bb9:                                              ; preds = %bb5
  br label %bb1

bb10:                                             ; preds = %bb11
  store i8 0, i8* %_6, align 1
  br label %bb6

bb11:                                             ; preds = %bb2, %bb4
  %21 = load i8, i8* %_6, align 1, !range !4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb10, label %bb6

bb12:                                             ; preds = %bb14, %bb13, %bb15
  %23 = load i64, i64* %3, align 8
  ret i64 %23

bb13:                                             ; preds = %bb6
  %24 = load i8, i8* %_5, align 1, !range !4
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb14, label %bb12

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_5, align 1
  br label %bb12

bb15:                                             ; preds = %bb6
  br label %bb12
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint uwtable
define internal i8 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hd64941d0494c1e05E"(i1 zeroext, i8, i8 %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %3 = alloca i8, align 1
  %self = alloca { i8, i8 }, align 1
  %4 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 0
  %5 = zext i1 %0 to i8
  store i8 %5, i8* %4, align 1
  %6 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %self, i32 0, i32 1
  store i8 %1, i8* %6, align 1
  store i8 0, i8* %_5, align 1
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_5, align 1
  store i8 1, i8* %_6, align 1
  %7 = bitcast { i8, i8 }* %self to i8*
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = trunc i8 %8 to i1
  %_3 = zext i1 %9 to i64
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb8, %bb7, %bb9
  %10 = bitcast { i8*, i32 }* %2 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1
  resume { i8*, i32 } %15

bb2:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
  store i8 %default, i8* %3, align 1
  br label %bb11

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_5, align 1
  %16 = bitcast { i8, i8 }* %self to %"core::option::Option<u8>::Some"*
  %17 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %16, i32 0, i32 1
  %x = load i8, i8* %17, align 1
  store i8 %x, i8* %3, align 1
  br label %bb11

bb5:                                              ; No predecessors!
  %18 = bitcast { i8, i8 }* %self to i8*
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = trunc i8 %19 to i1
  %_7 = zext i1 %20 to i64
  %21 = icmp eq i64 %_7, 1
  br i1 %21, label %bb7, label %bb9

bb6:                                              ; preds = %bb10, %bb11
  %22 = bitcast { i8, i8 }* %self to i8*
  %23 = load i8, i8* %22, align 1, !range !4
  %24 = trunc i8 %23 to i1
  %_8 = zext i1 %24 to i64
  %25 = icmp eq i64 %_8, 1
  br i1 %25, label %bb13, label %bb15

bb7:                                              ; preds = %bb5
  %26 = load i8, i8* %_5, align 1, !range !4
  %27 = trunc i8 %26 to i1
  br i1 %27, label %bb8, label %bb1

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_5, align 1
  br label %bb1

bb9:                                              ; preds = %bb5
  br label %bb1

bb10:                                             ; preds = %bb11
  store i8 0, i8* %_6, align 1
  br label %bb6

bb11:                                             ; preds = %bb2, %bb4
  %28 = load i8, i8* %_6, align 1, !range !4
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb10, label %bb6

bb12:                                             ; preds = %bb14, %bb13, %bb15
  %30 = load i8, i8* %3, align 1
  ret i8 %30

bb13:                                             ; preds = %bb6
  %31 = load i8, i8* %_5, align 1, !range !4
  %32 = trunc i8 %31 to i1
  br i1 %32, label %bb14, label %bb12

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_5, align 1
  br label %bb12

bb15:                                             ; preds = %bb6
  br label %bb12
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hd7503aacc58b0f80E"(i64* noalias readonly align 8 dereferenceable_or_null(32), %"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32) %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_6 = alloca i8, align 1
  %_5 = alloca i8, align 1
  %2 = alloca %"serde_json::value::Value"*, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  store i8 0, i8* %_5, align 1
  store i8 0, i8* %_6, align 1
  store i8 1, i8* %_5, align 1
  store i8 1, i8* %_6, align 1
  %3 = bitcast i64** %self to {}**
  %4 = load {}*, {}** %3, align 8
  %5 = icmp ule {}* %4, null
  %_3 = select i1 %5, i64 0, i64 1
  switch i64 %_3, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ]

bb1:                                              ; preds = %bb8, %bb7, %bb9
  %6 = bitcast { i8*, i32 }* %1 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1
  resume { i8*, i32 } %11

bb2:                                              ; preds = %start
  store i8 0, i8* %_6, align 1
  store %"serde_json::value::Value"* %default, %"serde_json::value::Value"** %2, align 8
  br label %bb11

bb3:                                              ; preds = %start
  unreachable

bb4:                                              ; preds = %start
  store i8 0, i8* %_5, align 1
  %12 = bitcast i64** %self to %"serde_json::value::Value"**
  %x = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %12, align 8, !nonnull !2
  store %"serde_json::value::Value"* %x, %"serde_json::value::Value"** %2, align 8
  br label %bb11

bb5:                                              ; No predecessors!
  %13 = bitcast i64** %self to {}**
  %14 = load {}*, {}** %13, align 8
  %15 = icmp ule {}* %14, null
  %_7 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_7, 1
  br i1 %16, label %bb7, label %bb9

bb6:                                              ; preds = %bb10, %bb11
  %17 = bitcast i64** %self to {}**
  %18 = load {}*, {}** %17, align 8
  %19 = icmp ule {}* %18, null
  %_8 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_8, 1
  br i1 %20, label %bb13, label %bb15

bb7:                                              ; preds = %bb5
  %21 = load i8, i8* %_5, align 1, !range !4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb8, label %bb1

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_5, align 1
  br label %bb1

bb9:                                              ; preds = %bb5
  br label %bb1

bb10:                                             ; preds = %bb11
  store i8 0, i8* %_6, align 1
  br label %bb6

bb11:                                             ; preds = %bb2, %bb4
  %23 = load i8, i8* %_6, align 1, !range !4
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb10, label %bb6

bb12:                                             ; preds = %bb14, %bb13, %bb15
  %25 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %2, align 8, !nonnull !2
  ret %"serde_json::value::Value"* %25

bb13:                                             ; preds = %bb6
  %26 = load i8, i8* %_5, align 1, !range !4
  %27 = trunc i8 %26 to i1
  br i1 %27, label %bb14, label %bb12

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_5, align 1
  br label %bb12

bb15:                                             ; preds = %bb6
  br label %bb12
}

; core::option::Option::Some
; Function Attrs: uwtable
define internal void @_ZN4core6option6Option4Some17h19daef10bc9152f1E(%"core::option::Option<alloc::string::String>"* noalias nocapture sret dereferenceable(24), %"alloc::string::String"* noalias nocapture dereferenceable(24) %_1) unnamed_addr #1 {
start:
  %1 = bitcast %"core::option::Option<alloc::string::String>"* %0 to %"core::option::Option<alloc::string::String>::Some"*
  %2 = bitcast %"core::option::Option<alloc::string::String>::Some"* %1 to %"alloc::string::String"*
  %3 = bitcast %"alloc::string::String"* %2 to i8*
  %4 = bitcast %"alloc::string::String"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  ret void
}

; core::option::Option::Some
; Function Attrs: uwtable
define internal void @_ZN4core6option6Option4Some17h2523eded959c5a46E(%"core::option::Option<serde_json::value::de::KeyClass>"* noalias nocapture sret dereferenceable(24), %"serde_json::value::de::KeyClass::Map"* noalias nocapture dereferenceable(24) %_1) unnamed_addr #1 {
start:
  %1 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %0 to %"core::option::Option<serde_json::value::de::KeyClass>::Some"*
  %2 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>::Some"* %1 to %"serde_json::value::de::KeyClass::Map"*
  %3 = bitcast %"serde_json::value::de::KeyClass::Map"* %2 to i8*
  %4 = bitcast %"serde_json::value::de::KeyClass::Map"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  ret void
}

; core::result::Result<T,E>::unwrap_or_else
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h08e3f07520f3a80bE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_11 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_7 = alloca { i64, i64 }, align 8
  %1 = alloca {}, align 1
  store i8 0, i8* %_9, align 1
  store i8 0, i8* %_10, align 1
  store i8 0, i8* %_11, align 1
  store i8 1, i8* %_9, align 1
  store i8 1, i8* %_10, align 1
  store i8 1, i8* %_11, align 1
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_3 = load i64, i64* %2, align 8, !range !1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb10, %bb9, %bb12, %bb11
  %3 = bitcast { i8*, i32 }* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_10, align 1
  br label %bb7

bb4:                                              ; preds = %cleanup
  %9 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_12 = load i64, i64* %9, align 8, !range !1
  %10 = icmp eq i64 %_12, 0
  br i1 %10, label %bb9, label %bb11

bb5:                                              ; preds = %start
  store i8 0, i8* %_9, align 1
  %11 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %11, i32 0, i32 1
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  %e.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  %e.1 = load i64, i64* %14, align 8
  store i8 0, i8* %_11, align 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  store i64 %e.0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  store i64 %e.1, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in::{{closure}}
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h28802fe0a557cd06E"(i64 %18, i64 %20)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb3, %bb6
  %21 = load i8, i8* %_11, align 1, !range !4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb13, label %bb8

bb8:                                              ; preds = %bb13, %bb7
  %23 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i64*
  %_13 = load i64, i64* %23, align 8, !range !1
  %24 = icmp eq i64 %_13, 0
  br i1 %24, label %bb15, label %bb17

bb9:                                              ; preds = %bb4
  %25 = load i8, i8* %_10, align 1, !range !4
  %26 = trunc i8 %25 to i1
  br i1 %26, label %bb10, label %bb1

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_10, align 1
  br label %bb1

bb11:                                             ; preds = %bb4
  %27 = load i8, i8* %_9, align 1, !range !4
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb12, label %bb1

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_9, align 1
  br label %bb1

bb13:                                             ; preds = %bb7
  store i8 0, i8* %_11, align 1
  br label %bb8

bb14:                                             ; preds = %bb16, %bb15, %bb18, %bb17
  ret void

bb15:                                             ; preds = %bb8
  %29 = load i8, i8* %_10, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_10, align 1
  br label %bb14

bb17:                                             ; preds = %bb8
  %31 = load i8, i8* %_9, align 1, !range !4
  %32 = trunc i8 %31 to i1
  br i1 %32, label %bb18, label %bb14

bb18:                                             ; preds = %bb17
  store i8 0, i8* %_9, align 1
  br label %bb14

cleanup:                                          ; preds = %bb5
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  %35 = extractvalue { i8*, i32 } %33, 1
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %35, i32* %37, align 8
  br label %bb4
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h269aca993d9b6830E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32), %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_5 = alloca i8, align 1
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %x = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  store i8 0, i8* %_5, align 1
  store i8 1, i8* %_5, align 1
  %1 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0, i32 0, i32 1
  store {}* null, {}** %2, align 8
  br label %bb8

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_5, align 1
  %3 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %self to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok"* %3, i32 0, i32 1
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %10 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %10 to i8*
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  br label %bb8

bb4:                                              ; preds = %bb6, %bb5, %bb7
  ret void

bb5:                                              ; preds = %bb8
  %13 = load i8, i8* %_5, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb4

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_5, align 1
  br label %bb4

bb7:                                              ; preds = %bb8
  br label %bb4

bb8:                                              ; preds = %bb3, %bb1
  %15 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %self to i64*
  %_6 = load i64, i64* %15, align 8, !range !1
  %16 = icmp eq i64 %_6, 0
  br i1 %16, label %bb5, label %bb7
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h77d57b153a685b90E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32), %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 {
start:
  %_5 = alloca i8, align 1
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %x = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  store i8 0, i8* %_5, align 1
  store i8 1, i8* %_5, align 1
  %1 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %self to i64*
  %_2 = load i64, i64* %1, align 8, !range !1
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0, i32 0, i32 1
  store {}* null, {}** %2, align 8
  br label %bb8

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_5, align 1
  %3 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %self to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok"*
  %4 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok"* %3, i32 0, i32 1
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false)
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %10 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %10 to i8*
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  br label %bb8

bb4:                                              ; preds = %bb6, %bb5, %bb7
  ret void

bb5:                                              ; preds = %bb8
  %13 = load i8, i8* %_5, align 1, !range !4
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb4

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_5, align 1
  br label %bb4

bb7:                                              ; preds = %bb8
  br label %bb4

bb8:                                              ; preds = %bb3, %bb1
  %15 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %self to i64*
  %_6 = load i64, i64* %15, align 8, !range !1
  %16 = icmp eq i64 %_6, 0
  br i1 %16, label %bb5, label %bb7
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h584dd27c78fef875E"(%"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_8 = alloca %"serde_json::value::de::KeyClass::Map", align 8
  %_7 = alloca { [0 x i64], %"serde_json::value::de::KeyClass::Map", [0 x i64] }, align 8
  %_5 = alloca %"core::option::Option<serde_json::value::de::KeyClass>", align 8
  %t = alloca %"serde_json::value::de::KeyClass::Map", align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_11, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %2 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %self to i64*
  %_3 = load i64, i64* %2, align 8, !range !1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb9, %bb8, %bb11, %bb10
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_12, align 1
  %9 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok"* %9, i32 0, i32 1
  %11 = bitcast %"serde_json::value::de::KeyClass::Map"* %t to i8*
  %12 = bitcast %"serde_json::value::de::KeyClass::Map"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  store i8 0, i8* %_13, align 1
  %13 = bitcast %"serde_json::value::de::KeyClass::Map"* %_8 to i8*
  %14 = bitcast %"serde_json::value::de::KeyClass::Map"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = bitcast { [0 x i64], %"serde_json::value::de::KeyClass::Map", [0 x i64] }* %_7 to %"serde_json::value::de::KeyClass::Map"*
  %16 = bitcast %"serde_json::value::de::KeyClass::Map"* %15 to i8*
  %17 = bitcast %"serde_json::value::de::KeyClass::Map"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  %18 = bitcast { [0 x i64], %"serde_json::value::de::KeyClass::Map", [0 x i64] }* %_7 to %"serde_json::value::de::KeyClass::Map"*
; invoke core::ops::function::FnOnce::call_once
  invoke void @_ZN4core3ops8function6FnOnce9call_once17h2028852fdecb53cdE(%"core::option::Option<serde_json::value::de::KeyClass>"* noalias nocapture sret dereferenceable(24) %_5, %"serde_json::value::de::KeyClass::Map"* noalias nocapture dereferenceable(24) %18)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %19 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"*
  %20 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"* %19, i32 0, i32 1
  %21 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %20 to i8*
  %22 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false)
  %23 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %23, align 8
  br label %bb6

bb5:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %24 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err"*
  %25 = getelementptr inbounds %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err"* %24, i32 0, i32 1
  %e = load i64*, i64** %25, align 8, !nonnull !2
  %26 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %26, i32 0, i32 1
  store i64* %e, i64** %27, align 8
  %28 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %28, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %29 = load i8, i8* %_13, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb13, label %bb7

bb7:                                              ; preds = %bb13, %bb6
  %31 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %self to i64*
  %_15 = load i64, i64* %31, align 8, !range !1
  %32 = icmp eq i64 %_15, 0
  br i1 %32, label %bb15, label %bb17

bb8:                                              ; preds = %bb12
  %33 = load i8, i8* %_12, align 1, !range !4
  %34 = trunc i8 %33 to i1
  br i1 %34, label %bb9, label %bb1

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_12, align 1
  %35 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok"*
  %36 = getelementptr inbounds %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok"* %35, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h0bc1e67eb0e9aa9eE(%"serde_json::value::de::KeyClass::Map"* align 8 dereferenceable(24) %36) #14
  br label %bb1

bb10:                                             ; preds = %bb12
  %37 = load i8, i8* %_11, align 1, !range !4
  %38 = trunc i8 %37 to i1
  br i1 %38, label %bb11, label %bb1

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_11, align 1
  %39 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err"*
  %40 = getelementptr inbounds %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err"* %39, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %40) #14
  br label %bb1

bb12:                                             ; preds = %cleanup
  %41 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %self to i64*
  %_14 = load i64, i64* %41, align 8, !range !1
  %42 = icmp eq i64 %_14, 0
  br i1 %42, label %bb8, label %bb10

bb13:                                             ; preds = %bb6
  store i8 0, i8* %_13, align 1
  br label %bb7

bb14:                                             ; preds = %bb16, %bb15, %bb18, %bb17
  ret void

bb15:                                             ; preds = %bb7
  %43 = load i8, i8* %_12, align 1, !range !4
  %44 = trunc i8 %43 to i1
  br i1 %44, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_12, align 1
  %45 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok"*
  %46 = getelementptr inbounds %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok"* %45, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h0bc1e67eb0e9aa9eE(%"serde_json::value::de::KeyClass::Map"* align 8 dereferenceable(24) %46)
  br label %bb14

bb17:                                             ; preds = %bb7
  %47 = load i8, i8* %_11, align 1, !range !4
  %48 = trunc i8 %47 to i1
  br i1 %48, label %bb18, label %bb14

bb18:                                             ; preds = %bb17
  store i8 0, i8* %_11, align 1
  %49 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err"*
  %50 = getelementptr inbounds %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err"* %49, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %50)
  br label %bb14

cleanup:                                          ; preds = %bb3
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  %53 = extractvalue { i8*, i32 } %51, 1
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %52, i8** %54, align 8
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %53, i32* %55, align 8
  br label %bb12
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$3map17ha16f148b12a6caf0E"(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_8 = alloca { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, align 8
  %_7 = alloca { [0 x i64], { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, [0 x i64] }, align 8
  %t = alloca { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_11, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %2 = getelementptr inbounds %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>", %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %self, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ule i64 %3, 0
  %_3 = select i1 %4, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb9, %bb8, %bb11, %bb10
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_12, align 1
  %11 = bitcast %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %self to %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Ok"*
  %12 = bitcast %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Ok"* %11 to { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }*
  %13 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %t to i8*
  %14 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  store i8 0, i8* %_13, align 1
  %15 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_8 to i8*
  %16 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  %17 = bitcast { [0 x i64], { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, [0 x i64] }* %_7 to { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }*
  %18 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %17 to i8*
  %19 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false)
  %20 = bitcast { [0 x i64], { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, [0 x i64] }* %_7 to { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }*
; invoke core::alloc::Layout::array::{{closure}}
  %21 = invoke { i64, i64 } @"_ZN4core5alloc6Layout5array28_$u7b$$u7b$closure$u7d$$u7d$17h96ddcf59755616e8E"({ [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* noalias nocapture dereferenceable(24) %20)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %23, i64* %25, align 8
  br label %bb6

bb5:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %26 = bitcast { i64, i64 }* %1 to %"core::result::Result<core::alloc::Layout, core::alloc::LayoutErr>::Err"*
  %27 = bitcast %"core::result::Result<core::alloc::Layout, core::alloc::LayoutErr>::Err"* %26 to %"core::alloc::LayoutErr"*
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %28, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %29 = load i8, i8* %_13, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb13, label %bb7

bb7:                                              ; preds = %bb13, %bb6
  %31 = getelementptr inbounds %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>", %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %self, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ule i64 %32, 0
  %_15 = select i1 %33, i64 1, i64 0
  %34 = icmp eq i64 %_15, 0
  br i1 %34, label %bb15, label %bb17

bb8:                                              ; preds = %bb12
  %35 = load i8, i8* %_12, align 1, !range !4
  %36 = trunc i8 %35 to i1
  br i1 %36, label %bb9, label %bb1

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_12, align 1
  br label %bb1

bb10:                                             ; preds = %bb12
  %37 = load i8, i8* %_11, align 1, !range !4
  %38 = trunc i8 %37 to i1
  br i1 %38, label %bb11, label %bb1

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_11, align 1
  br label %bb1

bb12:                                             ; preds = %cleanup
  %39 = getelementptr inbounds %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>", %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %self, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp ule i64 %40, 0
  %_14 = select i1 %41, i64 1, i64 0
  %42 = icmp eq i64 %_14, 0
  br i1 %42, label %bb8, label %bb10

bb13:                                             ; preds = %bb6
  store i8 0, i8* %_13, align 1
  br label %bb7

bb14:                                             ; preds = %bb16, %bb15, %bb18, %bb17
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = insertvalue { i64, i64 } undef, i64 %44, 0
  %48 = insertvalue { i64, i64 } %47, i64 %46, 1
  ret { i64, i64 } %48

bb15:                                             ; preds = %bb7
  %49 = load i8, i8* %_12, align 1, !range !4
  %50 = trunc i8 %49 to i1
  br i1 %50, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_12, align 1
  br label %bb14

bb17:                                             ; preds = %bb7
  %51 = load i8, i8* %_11, align 1, !range !4
  %52 = trunc i8 %51 to i1
  br i1 %52, label %bb18, label %bb14

bb18:                                             ; preds = %bb17
  store i8 0, i8* %_11, align 1
  br label %bb14

cleanup:                                          ; preds = %bb3
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb12
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hba7287be0f5483f6E"(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_8 = alloca { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, align 8
  %_7 = alloca { [0 x i64], { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, [0 x i64] }, align 8
  %t = alloca { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_11, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %2 = getelementptr inbounds %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>", %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %self, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ule i64 %3, 0
  %_3 = select i1 %4, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb9, %bb8, %bb11, %bb10
  %5 = bitcast { i8*, i32 }* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_12, align 1
  %11 = bitcast %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %self to %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Ok"*
  %12 = bitcast %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Ok"* %11 to { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }*
  %13 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %t to i8*
  %14 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  store i8 0, i8* %_13, align 1
  %15 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_8 to i8*
  %16 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  %17 = bitcast { [0 x i64], { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, [0 x i64] }* %_7 to { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }*
  %18 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %17 to i8*
  %19 = bitcast { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false)
  %20 = bitcast { [0 x i64], { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }, [0 x i64] }* %_7 to { [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }*
; invoke core::alloc::Layout::array::{{closure}}
  %21 = invoke { i64, i64 } @"_ZN4core5alloc6Layout5array28_$u7b$$u7b$closure$u7d$$u7d$17h277077b08b63bbcfE"({ [0 x i64], { i64, i64 }, [0 x i64], i64, [0 x i64] }* noalias nocapture dereferenceable(24) %20)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %23, i64* %25, align 8
  br label %bb6

bb5:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %26 = bitcast { i64, i64 }* %1 to %"core::result::Result<core::alloc::Layout, core::alloc::LayoutErr>::Err"*
  %27 = bitcast %"core::result::Result<core::alloc::Layout, core::alloc::LayoutErr>::Err"* %26 to %"core::alloc::LayoutErr"*
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 0, i64* %28, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %29 = load i8, i8* %_13, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb13, label %bb7

bb7:                                              ; preds = %bb13, %bb6
  %31 = getelementptr inbounds %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>", %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %self, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ule i64 %32, 0
  %_15 = select i1 %33, i64 1, i64 0
  %34 = icmp eq i64 %_15, 0
  br i1 %34, label %bb15, label %bb17

bb8:                                              ; preds = %bb12
  %35 = load i8, i8* %_12, align 1, !range !4
  %36 = trunc i8 %35 to i1
  br i1 %36, label %bb9, label %bb1

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_12, align 1
  br label %bb1

bb10:                                             ; preds = %bb12
  %37 = load i8, i8* %_11, align 1, !range !4
  %38 = trunc i8 %37 to i1
  br i1 %38, label %bb11, label %bb1

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_11, align 1
  br label %bb1

bb12:                                             ; preds = %cleanup
  %39 = getelementptr inbounds %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>", %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %self, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp ule i64 %40, 0
  %_14 = select i1 %41, i64 1, i64 0
  %42 = icmp eq i64 %_14, 0
  br i1 %42, label %bb8, label %bb10

bb13:                                             ; preds = %bb6
  store i8 0, i8* %_13, align 1
  br label %bb7

bb14:                                             ; preds = %bb16, %bb15, %bb18, %bb17
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = insertvalue { i64, i64 } undef, i64 %44, 0
  %48 = insertvalue { i64, i64 } %47, i64 %46, 1
  ret { i64, i64 } %48

bb15:                                             ; preds = %bb7
  %49 = load i8, i8* %_12, align 1, !range !4
  %50 = trunc i8 %49 to i1
  br i1 %50, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_12, align 1
  br label %bb14

bb17:                                             ; preds = %bb7
  %51 = load i8, i8* %_11, align 1, !range !4
  %52 = trunc i8 %51 to i1
  br i1 %52, label %bb18, label %bb14

bb18:                                             ; preds = %bb17
  store i8 0, i8* %_11, align 1
  br label %bb14

cleanup:                                          ; preds = %bb3
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb12
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hc6bfebfcc62cf929E"(%"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), %"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_8 = alloca %"alloc::string::String", align 8
  %_7 = alloca { [0 x i64], %"alloc::string::String", [0 x i64] }, align 8
  %_5 = alloca %"core::option::Option<alloc::string::String>", align 8
  %t = alloca %"alloc::string::String", align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_11, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %2 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %self to i64*
  %_3 = load i64, i64* %2, align 8, !range !1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb9, %bb8, %bb11, %bb10
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_12, align 1
  %9 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %self to %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok", %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok"* %9, i32 0, i32 1
  %11 = bitcast %"alloc::string::String"* %t to i8*
  %12 = bitcast %"alloc::string::String"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  store i8 0, i8* %_13, align 1
  %13 = bitcast %"alloc::string::String"* %_8 to i8*
  %14 = bitcast %"alloc::string::String"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64] }* %_7 to %"alloc::string::String"*
  %16 = bitcast %"alloc::string::String"* %15 to i8*
  %17 = bitcast %"alloc::string::String"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  %18 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64] }* %_7 to %"alloc::string::String"*
; invoke core::ops::function::FnOnce::call_once
  invoke void @_ZN4core3ops8function6FnOnce9call_once17hcec0eeb707454cfbE(%"core::option::Option<alloc::string::String>"* noalias nocapture sret dereferenceable(24) %_5, %"alloc::string::String"* noalias nocapture dereferenceable(24) %18)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %19 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"*
  %20 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"* %19, i32 0, i32 1
  %21 = bitcast %"core::option::Option<alloc::string::String>"* %20 to i8*
  %22 = bitcast %"core::option::Option<alloc::string::String>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false)
  %23 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %23, align 8
  br label %bb6

bb5:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %24 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %self to %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err"*
  %25 = getelementptr inbounds %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err", %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err"* %24, i32 0, i32 1
  %e = load i64*, i64** %25, align 8, !nonnull !2
  %26 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %26, i32 0, i32 1
  store i64* %e, i64** %27, align 8
  %28 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %28, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %29 = load i8, i8* %_13, align 1, !range !4
  %30 = trunc i8 %29 to i1
  br i1 %30, label %bb13, label %bb7

bb7:                                              ; preds = %bb13, %bb6
  %31 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %self to i64*
  %_15 = load i64, i64* %31, align 8, !range !1
  %32 = icmp eq i64 %_15, 0
  br i1 %32, label %bb15, label %bb17

bb8:                                              ; preds = %bb12
  %33 = load i8, i8* %_12, align 1, !range !4
  %34 = trunc i8 %33 to i1
  br i1 %34, label %bb9, label %bb1

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_12, align 1
  %35 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %self to %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok"*
  %36 = getelementptr inbounds %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok", %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok"* %35, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %36) #14
  br label %bb1

bb10:                                             ; preds = %bb12
  %37 = load i8, i8* %_11, align 1, !range !4
  %38 = trunc i8 %37 to i1
  br i1 %38, label %bb11, label %bb1

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_11, align 1
  %39 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %self to %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err"*
  %40 = getelementptr inbounds %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err", %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err"* %39, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %40) #14
  br label %bb1

bb12:                                             ; preds = %cleanup
  %41 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %self to i64*
  %_14 = load i64, i64* %41, align 8, !range !1
  %42 = icmp eq i64 %_14, 0
  br i1 %42, label %bb8, label %bb10

bb13:                                             ; preds = %bb6
  store i8 0, i8* %_13, align 1
  br label %bb7

bb14:                                             ; preds = %bb16, %bb15, %bb18, %bb17
  ret void

bb15:                                             ; preds = %bb7
  %43 = load i8, i8* %_12, align 1, !range !4
  %44 = trunc i8 %43 to i1
  br i1 %44, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_12, align 1
  %45 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %self to %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok"*
  %46 = getelementptr inbounds %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok", %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok"* %45, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %46)
  br label %bb14

bb17:                                             ; preds = %bb7
  %47 = load i8, i8* %_11, align 1, !range !4
  %48 = trunc i8 %47 to i1
  br i1 %48, label %bb18, label %bb14

bb18:                                             ; preds = %bb17
  store i8 0, i8* %_11, align 1
  %49 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %self to %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err"*
  %50 = getelementptr inbounds %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err", %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err"* %49, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %50)
  br label %bb14

cleanup:                                          ; preds = %bb3
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  %53 = extractvalue { i8*, i32 } %51, 1
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %52, i8** %54, align 8
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %53, i32* %55, align 8
  br label %bb12
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint uwtable
define internal zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h3ee6cbdb081302d1E"({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %2 = load i64, i64* %1, align 8
  %3 = icmp ule i64 %2, 0
  %_2 = select i1 %3, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ]

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 1, i8* %0, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %4 = load i8, i8* %0, align 1, !range !4
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hee50ea2420033f6dE"(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32), %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture dereferenceable(40) %self, [0 x i8]* noalias nonnull readonly align 1 %msg.0, i64 %msg.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca i64*, align 8
  %t = alloca %"serde_json::value::Value", align 8
  %2 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %self to i64*
  %_3 = load i64, i64* %2, align 8, !range !1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb7, %bb4
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %9, i32 0, i32 1
  %11 = bitcast %"serde_json::value::Value"* %t to i8*
  %12 = bitcast %"serde_json::value::Value"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  %13 = bitcast %"serde_json::value::Value"* %0 to i8*
  %14 = bitcast %"serde_json::value::Value"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  %15 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %self to i64*
  %_11 = load i64, i64* %15, align 8, !range !1
  %16 = icmp eq i64 %_11, 0
  br i1 %16, label %bb8, label %bb9

bb4:                                              ; preds = %bb6
  %17 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %self to i64*
  %_10 = load i64, i64* %17, align 8, !range !1
  %18 = icmp eq i64 %_10, 0
  br i1 %18, label %bb7, label %bb1

bb5:                                              ; preds = %start
  %19 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %20 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %19, i32 0, i32 1
  %21 = load i64*, i64** %20, align 8, !nonnull !2
  store i64* %21, i64** %e, align 8
  %_7.0 = bitcast i64** %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h6871ea10c3403c7dE([0 x i8]* noalias nonnull readonly align 1 %msg.0, i64 %msg.1, {}* nonnull align 1 %_7.0, [3 x i64]* noalias readonly align 8 dereferenceable(24) bitcast ({ void (i64**)*, i64, i64, i1 (i64**, %"core::fmt::Formatter"*)* }* @vtable.4 to [3 x i64]*))
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %e) #14
  br label %bb4

bb7:                                              ; preds = %bb4
  %22 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %23 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %22, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %23) #14
  br label %bb1

bb8:                                              ; preds = %bb9, %bb3
  ret void

bb9:                                              ; preds = %bb3
  %24 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %self to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %25 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %24, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %25)
  br label %bb8

unreachable:                                      ; preds = %bb5
  unreachable

cleanup:                                          ; preds = %bb5
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  %28 = extractvalue { i8*, i32 } %26, 1
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %28, i32* %30, align 8
  br label %bb6
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h99e177f4d9a634efE"(i64, i64) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca %"core::alloc::LayoutErr", align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ule i64 %6, 0
  %_2 = select i1 %7, i64 1, i64 0
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb7, %bb4
  %8 = bitcast { i8*, i32 }* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1
  resume { i8*, i32 } %13

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %15, align 8, !range !28
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ule i64 %17, 0
  %_11 = select i1 %18, i64 1, i64 0
  %19 = icmp eq i64 %_11, 0
  br i1 %19, label %bb8, label %bb9

bb4:                                              ; preds = %bb6
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ule i64 %21, 0
  %_10 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_10, 0
  br i1 %23, label %bb7, label %bb1

bb5:                                              ; preds = %start
  %_7.0 = bitcast %"core::alloc::LayoutErr"* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h6871ea10c3403c7dE([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [43 x i8] }>* @37 to [0 x i8]*), i64 43, {}* nonnull align 1 %_7.0, [3 x i64]* noalias readonly align 8 dereferenceable(24) bitcast ({ void (%"core::alloc::LayoutErr"*)*, i64, i64, i1 (%"core::alloc::LayoutErr"*, %"core::fmt::Formatter"*)* }* @vtable.5 to [3 x i64]*))
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %cleanup
  br label %bb4

bb7:                                              ; preds = %bb4
  br label %bb1

bb8:                                              ; preds = %bb9, %bb3
  %24 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %25 = insertvalue { i64, i64 } %24, i64 %t.1, 1
  ret { i64, i64 } %25

bb9:                                              ; preds = %bb3
  br label %bb8

unreachable:                                      ; preds = %bb5
  unreachable

cleanup:                                          ; preds = %bb5
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  %28 = extractvalue { i8*, i32 } %26, 1
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %28, i32* %30, align 8
  br label %bb6
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf0703a271c3ba43fE"() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %e = alloca { [0 x i8] }, align 1
  %self = alloca %"core::result::Result<(), !>::Ok", align 1
  switch i64 0, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb7, %bb4
  %1 = bitcast { i8*, i32 }* %0 to i8**
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1
  resume { i8*, i32 } %6

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  br i1 true, label %bb8, label %bb9

bb4:                                              ; preds = %bb6
  br i1 true, label %bb7, label %bb1

bb5:                                              ; preds = %start
  %_7.0 = bitcast { [0 x i8] }* %e to {}*
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h6871ea10c3403c7dE([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [43 x i8] }>* @37 to [0 x i8]*), i64 43, {}* nonnull align 1 %_7.0, [3 x i64]* noalias readonly align 8 dereferenceable(24) bitcast ({ void ({ [0 x i8] }*)*, i64, i64, i1 ({ [0 x i8] }*, %"core::fmt::Formatter"*)* }* @vtable.6 to [3 x i64]*))
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %cleanup
  br label %bb4

bb7:                                              ; preds = %bb4
  br label %bb1

bb8:                                              ; preds = %bb9, %bb3
  ret void

bb9:                                              ; preds = %bb3
  br label %bb8

unreachable:                                      ; preds = %bb5
  unreachable

cleanup:                                          ; preds = %bb5
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb6
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h078f593f1fee3cbfE"(%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), i64, i64) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { [0 x i8], %"core::alloc::LayoutErr", [0 x i8] }, align 1
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_11, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ule i64 %7, 0
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb10, %bb9, %bb12, %bb11
  %9 = bitcast { i8*, i32 }* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_12, align 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %16, align 8, !range !28
  %17 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %t.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %t.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %21, align 8
  br label %bb7

bb4:                                              ; preds = %cleanup
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ule i64 %23, 0
  %_14 = select i1 %24, i64 1, i64 0
  %25 = icmp eq i64 %_14, 0
  br i1 %25, label %bb9, label %bb11

bb5:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  %26 = bitcast { [0 x i8], %"core::alloc::LayoutErr", [0 x i8] }* %_9 to %"core::alloc::LayoutErr"*
; invoke alloc::raw_vec::RawVec<T,A>::reserve_internal::{{closure}}
  %27 = invoke { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_internal28_$u7b$$u7b$closure$u7d$$u7d$17h1a898b1e74837107E"()
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %28 = extractvalue { i64, i64 } %27, 0
  %29 = extractvalue { i64, i64 } %27, 1
  %30 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err"*
  %31 = getelementptr inbounds %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err"* %30, i32 0, i32 1
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i32 0, i32 0
  store i64 %28, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i32 0, i32 1
  store i64 %29, i64* %33, align 8
  %34 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %34, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb6
  %35 = load i8, i8* %_13, align 1, !range !4
  %36 = trunc i8 %35 to i1
  br i1 %36, label %bb13, label %bb8

bb8:                                              ; preds = %bb13, %bb7
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ule i64 %38, 0
  %_15 = select i1 %39, i64 1, i64 0
  %40 = icmp eq i64 %_15, 0
  br i1 %40, label %bb15, label %bb17

bb9:                                              ; preds = %bb4
  %41 = load i8, i8* %_12, align 1, !range !4
  %42 = trunc i8 %41 to i1
  br i1 %42, label %bb10, label %bb1

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_12, align 1
  br label %bb1

bb11:                                             ; preds = %bb4
  %43 = load i8, i8* %_11, align 1, !range !4
  %44 = trunc i8 %43 to i1
  br i1 %44, label %bb12, label %bb1

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_11, align 1
  br label %bb1

bb13:                                             ; preds = %bb7
  store i8 0, i8* %_13, align 1
  br label %bb8

bb14:                                             ; preds = %bb16, %bb15, %bb18, %bb17
  ret void

bb15:                                             ; preds = %bb8
  %45 = load i8, i8* %_12, align 1, !range !4
  %46 = trunc i8 %45 to i1
  br i1 %46, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_12, align 1
  br label %bb14

bb17:                                             ; preds = %bb8
  %47 = load i8, i8* %_11, align 1, !range !4
  %48 = trunc i8 %47 to i1
  br i1 %48, label %bb18, label %bb14

bb18:                                             ; preds = %bb17
  store i8 0, i8* %_11, align 1
  br label %bb14

cleanup:                                          ; preds = %bb5
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %51, i32* %53, align 8
  br label %bb4
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7755972c686b1d78E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* noalias nocapture sret dereferenceable(40), %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_10 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_9 = alloca { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64] }, align 8
  %e = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %t = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_11, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %2 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %self to i64*
  %_3 = load i64, i64* %2, align 8, !range !1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb10, %bb9, %bb12, %bb11
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_12, align 1
  %9 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %self to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok"* %9, i32 0, i32 1
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %t to i8*
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  %15 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok"*
  %16 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok"* %15, i32 0, i32 1
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %16 to i8*
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
  %19 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %0 to i64*
  store i64 0, i64* %19, align 8
  br label %bb7

bb4:                                              ; preds = %cleanup
  %20 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %self to i64*
  %_14 = load i64, i64* %20, align 8, !range !1
  %21 = icmp eq i64 %_14, 0
  br i1 %21, label %bb9, label %bb11

bb5:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %22 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %self to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err"* %22, i32 0, i32 1
  %24 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %e to i8*
  %25 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false)
  store i8 0, i8* %_13, align 1
  %26 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_10 to i8*
  %27 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  %28 = bitcast { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %29 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %28 to i8*
  %30 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false)
  %31 = bitcast { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::map::VacantEntry<K,V>::insert::{{closure}}
  %32 = invoke align 8 dereferenceable(16) { i64*, i64 }* @"_ZN5alloc11collections5btree3map24VacantEntry$LT$K$C$V$GT$6insert28_$u7b$$u7b$closure$u7d$$u7d$17h20b3f25571bcfd30E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %31)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %33 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err"* %33, i32 0, i32 1
  store { i64*, i64 }* %32, { i64*, i64 }** %34, align 8
  %35 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %0 to i64*
  store i64 1, i64* %35, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb6
  %36 = load i8, i8* %_13, align 1, !range !4
  %37 = trunc i8 %36 to i1
  br i1 %37, label %bb13, label %bb8

bb8:                                              ; preds = %bb13, %bb7
  %38 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %self to i64*
  %_15 = load i64, i64* %38, align 8, !range !1
  %39 = icmp eq i64 %_15, 0
  br i1 %39, label %bb15, label %bb17

bb9:                                              ; preds = %bb4
  %40 = load i8, i8* %_12, align 1, !range !4
  %41 = trunc i8 %40 to i1
  br i1 %41, label %bb10, label %bb1

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_12, align 1
  br label %bb1

bb11:                                             ; preds = %bb4
  %42 = load i8, i8* %_11, align 1, !range !4
  %43 = trunc i8 %42 to i1
  br i1 %43, label %bb12, label %bb1

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_11, align 1
  br label %bb1

bb13:                                             ; preds = %bb7
  store i8 0, i8* %_13, align 1
  br label %bb8

bb14:                                             ; preds = %bb16, %bb15, %bb18, %bb17
  ret void

bb15:                                             ; preds = %bb8
  %44 = load i8, i8* %_12, align 1, !range !4
  %45 = trunc i8 %44 to i1
  br i1 %45, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_12, align 1
  br label %bb14

bb17:                                             ; preds = %bb8
  %46 = load i8, i8* %_11, align 1, !range !4
  %47 = trunc i8 %46 to i1
  br i1 %47, label %bb18, label %bb14

bb18:                                             ; preds = %bb17
  store i8 0, i8* %_11, align 1
  br label %bb14

cleanup:                                          ; preds = %bb5
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = extractvalue { i8*, i32 } %48, 1
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  br label %bb4
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9d9275dee7ae6489E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* noalias nocapture sret dereferenceable(40), %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* noalias nocapture dereferenceable(40) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_10 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_9 = alloca { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64] }, align 8
  %e = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %t = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_11, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %2 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %self to i64*
  %_3 = load i64, i64* %2, align 8, !range !1
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb10, %bb9, %bb12, %bb11
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_12, align 1
  %9 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %self to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok"*
  %10 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok"* %9, i32 0, i32 1
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %t to i8*
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  %15 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok"*
  %16 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok"* %15, i32 0, i32 1
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %16 to i8*
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
  %19 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %0 to i64*
  store i64 0, i64* %19, align 8
  br label %bb7

bb4:                                              ; preds = %cleanup
  %20 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %self to i64*
  %_14 = load i64, i64* %20, align 8, !range !1
  %21 = icmp eq i64 %_14, 0
  br i1 %21, label %bb9, label %bb11

bb5:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  %22 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %self to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err"*
  %23 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err"* %22, i32 0, i32 1
  %24 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %e to i8*
  %25 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false)
  store i8 0, i8* %_13, align 1
  %26 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_10 to i8*
  %27 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  %28 = bitcast { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %29 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %28 to i8*
  %30 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false)
  %31 = bitcast { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64] }* %_9 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::map::VacantEntry<K,V>::insert::{{closure}}
  %32 = invoke align 8 dereferenceable(16) { i64*, i64 }* @"_ZN5alloc11collections5btree3map24VacantEntry$LT$K$C$V$GT$6insert28_$u7b$$u7b$closure$u7d$$u7d$17h457262d440141873E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %31)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %33 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err"*
  %34 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err"* %33, i32 0, i32 1
  store { i64*, i64 }* %32, { i64*, i64 }** %34, align 8
  %35 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %0 to i64*
  store i64 1, i64* %35, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb6
  %36 = load i8, i8* %_13, align 1, !range !4
  %37 = trunc i8 %36 to i1
  br i1 %37, label %bb13, label %bb8

bb8:                                              ; preds = %bb13, %bb7
  %38 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %self to i64*
  %_15 = load i64, i64* %38, align 8, !range !1
  %39 = icmp eq i64 %_15, 0
  br i1 %39, label %bb15, label %bb17

bb9:                                              ; preds = %bb4
  %40 = load i8, i8* %_12, align 1, !range !4
  %41 = trunc i8 %40 to i1
  br i1 %41, label %bb10, label %bb1

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_12, align 1
  br label %bb1

bb11:                                             ; preds = %bb4
  %42 = load i8, i8* %_11, align 1, !range !4
  %43 = trunc i8 %42 to i1
  br i1 %43, label %bb12, label %bb1

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_11, align 1
  br label %bb1

bb13:                                             ; preds = %bb7
  store i8 0, i8* %_13, align 1
  br label %bb8

bb14:                                             ; preds = %bb16, %bb15, %bb18, %bb17
  ret void

bb15:                                             ; preds = %bb8
  %44 = load i8, i8* %_12, align 1, !range !4
  %45 = trunc i8 %44 to i1
  br i1 %45, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_12, align 1
  br label %bb14

bb17:                                             ; preds = %bb8
  %46 = load i8, i8* %_11, align 1, !range !4
  %47 = trunc i8 %46 to i1
  br i1 %47, label %bb18, label %bb14

bb18:                                             ; preds = %bb17
  store i8 0, i8* %_11, align 1
  br label %bb14

cleanup:                                          ; preds = %bb5
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = extractvalue { i8*, i32 } %48, 1
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  br label %bb4
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17haa4aa4cca1b4d4f8E"(%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), i64, i64) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { [0 x i8], %"core::alloc::LayoutErr", [0 x i8] }, align 1
  %self = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  store i8 0, i8* %_12, align 1
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  store i8 1, i8* %_11, align 1
  store i8 1, i8* %_12, align 1
  store i8 1, i8* %_13, align 1
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ule i64 %7, 0
  %_3 = select i1 %8, i64 1, i64 0
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
  ]

bb1:                                              ; preds = %bb10, %bb9, %bb12, %bb11
  %9 = bitcast { i8*, i32 }* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1
  resume { i8*, i32 } %14

bb2:                                              ; preds = %start
  unreachable

bb3:                                              ; preds = %start
  store i8 0, i8* %_12, align 1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  %t.0 = load i64, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %t.1 = load i64, i64* %16, align 8, !range !28
  %17 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok"* %17, i32 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %t.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %t.1, i64* %20, align 8
  %21 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %21, align 8
  br label %bb7

bb4:                                              ; preds = %cleanup
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ule i64 %23, 0
  %_14 = select i1 %24, i64 1, i64 0
  %25 = icmp eq i64 %_14, 0
  br i1 %25, label %bb9, label %bb11

bb5:                                              ; preds = %start
  store i8 0, i8* %_11, align 1
  store i8 0, i8* %_13, align 1
  %26 = bitcast { [0 x i8], %"core::alloc::LayoutErr", [0 x i8] }* %_9 to %"core::alloc::LayoutErr"*
; invoke alloc::raw_vec::RawVec<T,A>::reserve_internal::{{closure}}
  %27 = invoke { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_internal28_$u7b$$u7b$closure$u7d$$u7d$17hc426952e539db309E"()
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %28 = extractvalue { i64, i64 } %27, 0
  %29 = extractvalue { i64, i64 } %27, 1
  %30 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err"*
  %31 = getelementptr inbounds %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err"* %30, i32 0, i32 1
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i32 0, i32 0
  store i64 %28, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i32 0, i32 1
  store i64 %29, i64* %33, align 8
  %34 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %34, align 8
  br label %bb7

bb7:                                              ; preds = %bb3, %bb6
  %35 = load i8, i8* %_13, align 1, !range !4
  %36 = trunc i8 %35 to i1
  br i1 %36, label %bb13, label %bb8

bb8:                                              ; preds = %bb13, %bb7
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ule i64 %38, 0
  %_15 = select i1 %39, i64 1, i64 0
  %40 = icmp eq i64 %_15, 0
  br i1 %40, label %bb15, label %bb17

bb9:                                              ; preds = %bb4
  %41 = load i8, i8* %_12, align 1, !range !4
  %42 = trunc i8 %41 to i1
  br i1 %42, label %bb10, label %bb1

bb10:                                             ; preds = %bb9
  store i8 0, i8* %_12, align 1
  br label %bb1

bb11:                                             ; preds = %bb4
  %43 = load i8, i8* %_11, align 1, !range !4
  %44 = trunc i8 %43 to i1
  br i1 %44, label %bb12, label %bb1

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_11, align 1
  br label %bb1

bb13:                                             ; preds = %bb7
  store i8 0, i8* %_13, align 1
  br label %bb8

bb14:                                             ; preds = %bb16, %bb15, %bb18, %bb17
  ret void

bb15:                                             ; preds = %bb8
  %45 = load i8, i8* %_12, align 1, !range !4
  %46 = trunc i8 %45 to i1
  br i1 %46, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_12, align 1
  br label %bb14

bb17:                                             ; preds = %bb8
  %47 = load i8, i8* %_11, align 1, !range !4
  %48 = trunc i8 %47 to i1
  br i1 %48, label %bb18, label %bb14

bb18:                                             ; preds = %bb17
  store i8 0, i8* %_11, align 1
  br label %bb14

cleanup:                                          ; preds = %bb5
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %51, i32* %53, align 8
  br label %bb4
}

; <T as core::convert::From<T>>::from
; Function Attrs: uwtable
define internal i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h1527934601c69830E"(i64 %t) unnamed_addr #1 {
start:
  ret i64 %t
}

; <T as core::convert::From<T>>::from
; Function Attrs: noreturn uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3d7eb24ab8521340E"() unnamed_addr #4 {
start:
  call void @llvm.trap()
  unreachable
}

; <T as core::convert::From<T>>::from
; Function Attrs: uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %t.0, i64 %t.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %t.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %t.1, 1
  ret { i64, i64 } %1
}

; <T as core::convert::From<T>>::from
; Function Attrs: uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8350beb1cc1a0fe3E"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9694d96c436fe34dE"() unnamed_addr #1 {
start:
  ret void
}

; <T as core::convert::From<T>>::from
; Function Attrs: uwtable
define internal noalias align 8 dereferenceable(40) i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb04c24f980f8caabE"(i64* noalias align 8 dereferenceable(40) %t) unnamed_addr #1 {
start:
  ret i64* %t
}

; <T as core::convert::Into<U>>::into
; Function Attrs: uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h235be50887a5eb84E"(%"serde_json::number::Number"* noalias nocapture sret dereferenceable(16), i64 %self) unnamed_addr #1 {
start:
; call <serde_json::number::Number as core::convert::From<u64>>::from
  call void @"_ZN77_$LT$serde_json..number..Number$u20$as$u20$core..convert..From$LT$u64$GT$$GT$4from17hb9726165b1c49e16E"(%"serde_json::number::Number"* noalias nocapture sret dereferenceable(16) %0, i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::convert::Into<U>>::into
; Function Attrs: uwtable
define internal nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h442520f3b930bae4E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call nonnull i64* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha49752030e91a438E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: uwtable
define internal nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h95e1d751cb404257E"(i8* nonnull %self) unnamed_addr #1 {
start:
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %0 = call nonnull i8* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17he83753416fa2495bE"(i8* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: uwtable
define internal nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17haf979fea14c70202E"(i64* nonnull %self) unnamed_addr #1 {
start:
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call nonnull i64* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h03357336292fe771E"(i64* nonnull %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: uwtable
define internal i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hdbc2b09180f83bcaE"(i64 %self) unnamed_addr #1 {
start:
; call <T as core::convert::From<T>>::from
  %0 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h1527934601c69830E"(i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64 %0
}

; <T as core::convert::Into<U>>::into
; Function Attrs: uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hfc84940b10fa1e26E"(%"serde_json::number::Number"* noalias nocapture sret dereferenceable(16), i64 %self) unnamed_addr #1 {
start:
; call <serde_json::number::Number as core::convert::From<i64>>::from
  call void @"_ZN77_$LT$serde_json..number..Number$u20$as$u20$core..convert..From$LT$i64$GT$$GT$4from17h9bc3e0ce1325b57cE"(%"serde_json::number::Number"* noalias nocapture sret dereferenceable(16) %0, i64 %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <T as core::borrow::Borrow<T>>::borrow
; Function Attrs: uwtable
define internal align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17hdd92206ea117c6b5E"(%"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  ret %"alloc::string::String"* %self
}

; <T as core::convert::TryFrom<U>>::try_from
; Function Attrs: uwtable
define internal i64 @"_ZN53_$LT$T$u20$as$u20$core..convert..TryFrom$LT$U$GT$$GT$8try_from17ha5e215db105e8a79E"(i64 %value) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
; call <T as core::convert::Into<U>>::into
  %1 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hdbc2b09180f83bcaE"(i64 %value)
  br label %bb1

bb1:                                              ; preds = %start
  store i64 %1, i64* %0, align 8
  %2 = load i64, i64* %0, align 8
  ret i64 %2
}

; <usize as core::ops::arith::AddAssign>::add_assign
; Function Attrs: inlinehint uwtable
define internal void @"_ZN53_$LT$usize$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hdded4710d83715c2E"(i64* align 8 dereferenceable(8) %self, i64 %other) unnamed_addr #0 {
start:
  %0 = load i64, i64* %self, align 8
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %0, i64 %other)
  %_4.0 = extractvalue { i64, i1 } %1, 0
  %_4.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false)
  br i1 %2, label %panic, label %bb1

bb1:                                              ; preds = %start
  store i64 %_4.0, i64* %self, align 8
  ret void

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast ([28 x i8]* @str.7 to [0 x i8]*), i64 28, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @39 to %"core::panic::Location"*))
  unreachable
}

; <() as std::process::Termination>::report
; Function Attrs: inlinehint uwtable
define internal i32 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hbda010211023c6f4E"() unnamed_addr #0 {
start:
; call <std::process::ExitCode as std::process::Termination>::report
  %0 = call i32 @"_ZN68_$LT$std..process..ExitCode$u20$as$u20$std..process..Termination$GT$6report17hcd77686b1aa97cc3E"(i8 0)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %0
}

; <alloc::string::String as core::cmp::Ord>::cmp
; Function Attrs: inlinehint uwtable
define internal i8 @"_ZN56_$LT$alloc..string..String$u20$as$u20$core..cmp..Ord$GT$3cmp17h412bb8a8bdc7f93dE"(%"alloc::string::String"* noalias readonly align 8 dereferenceable(24), %"alloc::string::String"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %_5 = alloca i8, align 1
  %2 = alloca i8, align 1
  %other = alloca %"alloc::string::String"*, align 8
  %self = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %0, %"alloc::string::String"** %self, align 8
  store %"alloc::string::String"* %1, %"alloc::string::String"** %other, align 8
  %3 = load %"alloc::string::String"*, %"alloc::string::String"** %other, align 8, !nonnull !2
  %__self_1_0 = bitcast %"alloc::string::String"* %3 to %"alloc::vec::Vec<u8>"*
  %4 = load %"alloc::string::String"*, %"alloc::string::String"** %self, align 8, !nonnull !2
  %__self_0_0 = bitcast %"alloc::string::String"* %4 to %"alloc::vec::Vec<u8>"*
; call <alloc::vec::Vec<T> as core::cmp::Ord>::cmp
  %5 = call i8 @"_ZN59_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..cmp..Ord$GT$3cmp17hba36af138e720189E"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24) %__self_0_0, %"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24) %__self_1_0), !range !16
  store i8 %5, i8* %_5, align 1
  br label %bb1

bb1:                                              ; preds = %start
  %6 = load i8, i8* %_5, align 1, !range !16
  %_10 = sext i8 %6 to i64
  %7 = icmp eq i64 %_10, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8 0, i8* %2, align 1
  br label %bb4

bb3:                                              ; preds = %bb1
  %cmp = load i8, i8* %_5, align 1, !range !16
  store i8 %cmp, i8* %2, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %8 = load i8, i8* %2, align 1, !range !16
  ret i8 %8
}

; <&T as serde_json::value::index::Index>::index_into
; Function Attrs: uwtable
define internal align 8 dereferenceable_or_null(32) i64* @"_ZN57_$LT$$RF$T$u20$as$u20$serde_json..value..index..Index$GT$10index_into17h7dcf5a3b859d029fE"({ [0 x i8]*, i64 }* noalias readonly align 8 dereferenceable(16) %self, %"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32) %v) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !nonnull !2
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1
  %_3.1 = load i64, i64* %1, align 8
; call <str as serde_json::value::index::Index>::index_into
  %2 = call align 8 dereferenceable_or_null(32) i64* @"_ZN55_$LT$str$u20$as$u20$serde_json..value..index..Index$GT$10index_into17h71d7b8ae0e9e3d53E"([0 x i8]* noalias nonnull readonly align 1 %_3.0, i64 %_3.1, %"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32) %v)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %2
}

; <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$12alloc_zeroed17h6cbc57dcfbbcb93cE"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::alloc::AllocErr", align 1
; call alloc::alloc::alloc_zeroed
  %0 = call i8* @_ZN5alloc5alloc12alloc_zeroed17h84d4babc2e3863bbE(i64 %layout.0, i64 %layout.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new
  %1 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hef1830c074812806E"(i8* %0)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5f66282e5c93fabcE"(i8* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %2
}

; <alloc::alloc::Global as core::alloc::Alloc>::alloc
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$5alloc17hd4690fed23a31fc1E"(%"alloc::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
  %_6 = alloca %"core::alloc::AllocErr", align 1
; call alloc::alloc::alloc
  %0 = call i8* @_ZN5alloc5alloc5alloc17ha9209d6434eacc6dE(i64 %layout.0, i64 %layout.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new
  %1 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hef1830c074812806E"(i8* %0)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::option::Option<T>::ok_or
  %2 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5f66282e5c93fabcE"(i8* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %2
}

; <alloc::alloc::Global as core::alloc::Alloc>::dealloc
; Function Attrs: inlinehint uwtable
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$7dealloc17hf008da6327a79dbdE"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h82dd1e7d1718a41dE"(i8* nonnull %ptr)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17hf8c13e3b2729a0baE(i8* %0, i64 %layout.0, i64 %layout.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <alloc::alloc::Global as core::alloc::Alloc>::realloc
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$7realloc17hb76fae960f35a09bE"(%"alloc::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %layout.0, i64 %layout.1, i64 %new_size) unnamed_addr #0 {
start:
  %_11 = alloca %"core::alloc::AllocErr", align 1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %0 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h82dd1e7d1718a41dE"(i8* nonnull %ptr)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::alloc::realloc
  %1 = call i8* @_ZN5alloc5alloc7realloc17h893b9067f438dc26E(i8* %0, i64 %layout.0, i64 %layout.1, i64 %new_size)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new
  %2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hef1830c074812806E"(i8* %1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::option::Option<T>::ok_or
  %3 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h5f66282e5c93fabcE"(i8* %2)
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i8* %3
}

; <alloc::vec::Vec<T> as core::cmp::Ord>::cmp
; Function Attrs: inlinehint uwtable
define internal i8 @"_ZN59_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..cmp..Ord$GT$3cmp17hba36af138e720189E"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24) %self, %"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24) %other) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T> as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN68_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8f17757b2e121b2bE"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24) %self)
  %_4.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_4.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as core::ops::deref::Deref>::deref
  %1 = call { [0 x i8]*, i64 } @"_ZN68_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8f17757b2e121b2bE"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24) %other)
  %_8.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_8.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::<impl core::cmp::Ord for [T]>::cmp
  %2 = call i8 @"_ZN4core5slice56_$LT$impl$u20$core..cmp..Ord$u20$for$u20$$u5b$T$u5d$$GT$3cmp17h871837a832c7127aE"([0 x i8]* noalias nonnull readonly align 1 %_4.0, i64 %_4.1, [0 x i8]* noalias nonnull readonly align 1 %_8.0, i64 %_8.1), !range !16
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8 %2
}

; alloc::collections::btree::map::last_leaf_edge
; Function Attrs: uwtable
define internal void @_ZN5alloc11collections5btree3map14last_leaf_edge17h2aac757d4aad9563E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %node) unnamed_addr #1 {
start:
  %_10 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_8 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %internal = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_6 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %leaf = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>", align 8
  br label %bb1

bb1:                                              ; preds = %bb8, %start
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_3 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17hbc14f608e7521773E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(32) %_2, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_2 to i64*
  %_4 = load i64, i64* %3, align 8, !range !1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"*
  %5 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"* %4, i32 0, i32 1
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %leaf to i8*
  %7 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_6 to i8*
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %leaf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::last_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9last_edge17h215c2b6108bc33c8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void

bb6:                                              ; preds = %bb2
  %10 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"*
  %11 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"* %10, i32 0, i32 1
  %12 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %internal to i8*
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_10 to i8*
  %15 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %internal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::last_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9last_edge17h2a478fa9ae291bf0E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_9, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_10)
  br label %bb7

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  call void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h01cca967b8c82336E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_8, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_9)
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  %17 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb1
}

; alloc::collections::btree::map::first_leaf_edge
; Function Attrs: uwtable
define internal void @_ZN5alloc11collections5btree3map15first_leaf_edge17hf7a35ed829095ca7E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %node) unnamed_addr #1 {
start:
  %_10 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_8 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %internal = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_6 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %leaf = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>", align 8
  br label %bb1

bb1:                                              ; preds = %bb8, %start
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_3 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17hbc14f608e7521773E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(32) %_2, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_2 to i64*
  %_4 = load i64, i64* %3, align 8, !range !1
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"*
  %5 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"* %4, i32 0, i32 1
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %leaf to i8*
  %7 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_6 to i8*
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %leaf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h2b2bdac4af0f22e5E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void

bb6:                                              ; preds = %bb2
  %10 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"*
  %11 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"* %10, i32 0, i32 1
  %12 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %internal to i8*
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_10 to i8*
  %15 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %internal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h3686e3c7dd0c92c6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_9, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_10)
  br label %bb7

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  call void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h01cca967b8c82336E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_8, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_9)
  br label %bb8

bb8:                                              ; preds = %bb7
  %16 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  %17 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  br label %bb1
}

; alloc::collections::btree::map::unwrap_unchecked::{{closure}}
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree3map16unwrap_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17h93f2ed4149396757E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32)) unnamed_addr #1 {
start:
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  unreachable

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [38 x i8] }>* @40 to [0 x i8]*), i64 38, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @42 to %"core::panic::Location"*))
  unreachable
}

; alloc::collections::btree::map::BTreeMap<K,V>::ensure_root_is_owned
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree3map21BTreeMap$LT$K$C$V$GT$20ensure_root_is_owned17hbe50a2039fe0c9e8E"(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*, align 8
  store %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %0, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"** %self, align 8
  %1 = load %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_3 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %1 to { i64*, i64 }*
; call alloc::collections::btree::node::Root<K,V>::is_shared_root
  %2 = call zeroext i1 @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$14is_shared_root17h8331c92e124a38c1E"({ i64*, i64 }* noalias readonly align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %2, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
; call alloc::collections::btree::node::Root<K,V>::new_leaf
  %3 = call { i64*, i64 } @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$8new_leaf17h7dc603f4797f03f6E"()
  %4 = extractvalue { i64*, i64 } %3, 0
  %5 = extractvalue { i64*, i64 } %3, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = load %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %7 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %6 to { i64*, i64 }*
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 0
  store i64* %4, i64** %8, align 8
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %7, i32 0, i32 1
  store i64 %5, i64* %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void
}

; alloc::collections::btree::map::BTreeMap<K,V>::new
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree3map21BTreeMap$LT$K$C$V$GT$3new17h3291cd7fa7f87b66E"(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(24)) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::Root<K,V>::shared_empty_root
  %1 = call { i64*, i64 } @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$17shared_empty_root17hcd9bc443edbe8ebfE"()
  %2 = extractvalue { i64*, i64 } %1, 0
  %3 = extractvalue { i64*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %0 to { i64*, i64 }*
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %4, i32 0, i32 0
  store i64* %2, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %4, i32 0, i32 1
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %0, i32 0, i32 3
  store i64 0, i64* %7, align 8
  ret void
}

; alloc::collections::btree::map::BTreeMap<K,V>::entry
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree3map21BTreeMap$LT$K$C$V$GT$5entry17hf4f490eec45667beE"(%"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(72), %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24), %"alloc::string::String"* noalias nocapture dereferenceable(24) %key) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_24 = alloca i8, align 1
  %_23 = alloca %"core::marker::PhantomData<&mut (alloc::string::String, serde_json::value::Value)>", align 1
  %_20 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_19 = alloca %"alloc::string::String", align 8
  %_18 = alloca %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>", align 8
  %handle1 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_16 = alloca %"core::marker::PhantomData<&mut (alloc::string::String, serde_json::value::Value)>", align 1
  %_13 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_12 = alloca %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>", align 8
  %handle = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_6 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_5 = alloca %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>", align 8
  %self = alloca %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*, align 8
  store %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %1, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"** %self, align 8
  store i8 0, i8* %_24, align 1
  store i8 1, i8* %_24, align 1
  %_4 = load %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
; invoke alloc::collections::btree::map::BTreeMap<K,V>::ensure_root_is_owned
  invoke void @"_ZN5alloc11collections5btree3map21BTreeMap$LT$K$C$V$GT$20ensure_root_is_owned17hbe50a2039fe0c9e8E"(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %_4)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb3
  %3 = bitcast { i8*, i32 }* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  %9 = load %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_7 = bitcast %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %9 to { i64*, i64 }*
; invoke alloc::collections::btree::node::Root<K,V>::as_mut
  invoke void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$6as_mut17h07a4250769d37a23E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_6, { i64*, i64 }* align 8 dereferenceable(16) %_7)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  store i8 0, i8* %_24, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %key) #14
  br label %bb1

bb4:                                              ; preds = %bb2
; invoke alloc::collections::btree::search::search_tree
  invoke void @_ZN5alloc11collections5btree6search11search_tree17h2b22e922a6bcbc03E(%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(40) %_5, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_6, %"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %key)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %10 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>"* %_5 to i64*
  %_10 = load i64, i64* %10, align 8, !range !1
  switch i64 %_10, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb8
  ]

bb6:                                              ; preds = %bb5
  unreachable

bb7:                                              ; preds = %bb5
  %11 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>"* %_5 to %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::Found"*
  %12 = getelementptr inbounds %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::Found", %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::Found"* %11, i32 0, i32 1
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %handle to i8*
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_13 to i8*
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %handle to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false)
  %17 = load %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_15 = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %17, i32 0, i32 3
  %18 = bitcast %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* %_12 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %18 to i8*
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false)
  %21 = getelementptr inbounds %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* %_12, i32 0, i32 5
  store i64* %_15, i64** %21, align 8
  %22 = bitcast %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* %_12 to %"core::marker::PhantomData<&mut (alloc::string::String, serde_json::value::Value)>"*
  %23 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %0 to %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Occupied"*
  %24 = getelementptr inbounds %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Occupied", %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Occupied"* %23, i32 0, i32 1
  %25 = bitcast %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* %24 to i8*
  %26 = bitcast %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 40, i1 false)
  %27 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %0 to i64*
  store i64 1, i64* %27, align 8
  br label %bb9

bb8:                                              ; preds = %bb5
  %28 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>"* %_5 to %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::GoDown"*
  %29 = getelementptr inbounds %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::GoDown", %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::GoDown"* %28, i32 0, i32 1
  %30 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %handle1 to i8*
  %31 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 32, i1 false)
  store i8 0, i8* %_24, align 1
  %32 = bitcast %"alloc::string::String"* %_19 to i8*
  %33 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
  %34 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_20 to i8*
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %handle1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 32, i1 false)
  %36 = load %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_22 = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %36, i32 0, i32 3
  %37 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %_18 to %"alloc::string::String"*
  %38 = bitcast %"alloc::string::String"* %37 to i8*
  %39 = bitcast %"alloc::string::String"* %_19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false)
  %40 = getelementptr inbounds %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %_18, i32 0, i32 5
  %41 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %40 to i8*
  %42 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 32, i1 false)
  %43 = getelementptr inbounds %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %_18, i32 0, i32 7
  store i64* %_22, i64** %43, align 8
  %44 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %_18 to %"core::marker::PhantomData<&mut (alloc::string::String, serde_json::value::Value)>"*
  %45 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %0 to %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant"*
  %46 = getelementptr inbounds %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant", %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant"* %45, i32 0, i32 1
  %47 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %46 to i8*
  %48 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %_18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 64, i1 false)
  %49 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %0 to i64*
  store i64 0, i64* %49, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %50 = load i8, i8* %_24, align 1, !range !4
  %51 = trunc i8 %50 to i1
  br i1 %51, label %bb11, label %bb10

bb10:                                             ; preds = %bb11, %bb9
  ret void

bb11:                                             ; preds = %bb9
  store i8 0, i8* %_24, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %key)
  br label %bb10

cleanup:                                          ; preds = %bb4, %bb2, %start
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %54, i32* %56, align 8
  br label %bb3
}

; alloc::collections::btree::map::BTreeMap<K,V>::insert
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree3map21BTreeMap$LT$K$C$V$GT$6insert17hcfb7cb40a92c273aE"(%"core::option::Option<serde_json::value::Value>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %self, %"alloc::string::String"* noalias nocapture dereferenceable(24) %key, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %value) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_17 = alloca i8, align 1
  %_16 = alloca i8, align 1
  %_15 = alloca %"serde_json::value::Value", align 8
  %_14 = alloca %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>", align 8
  %entry1 = alloca %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>", align 8
  %_11 = alloca %"serde_json::value::Value", align 8
  %_9 = alloca %"serde_json::value::Value", align 8
  %entry = alloca %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>", align 8
  %_6 = alloca %"alloc::string::String", align 8
  %_4 = alloca %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>", align 8
  store i8 0, i8* %_17, align 1
  store i8 0, i8* %_16, align 1
  store i8 1, i8* %_16, align 1
  %2 = bitcast %"alloc::string::String"* %_6 to i8*
  %3 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; invoke alloc::collections::btree::map::BTreeMap<K,V>::entry
  invoke void @"_ZN5alloc11collections5btree3map21BTreeMap$LT$K$C$V$GT$5entry17hf4f490eec45667beE"(%"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(72) %_4, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %self, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_6)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 1, i8* %_17, align 1
  %4 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %_4 to i64*
  %_7 = load i64, i64* %4, align 8, !range !1
  switch i64 %_7, label %bb4 [
    i64 0, label %bb7
    i64 1, label %bb5
  ]

bb2:                                              ; preds = %bb10, %bb11
  %5 = bitcast { i8*, i32 }* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb3:                                              ; preds = %cleanup2
  %11 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %_4 to i64*
  %_18 = load i64, i64* %11, align 8, !range !1
  %12 = icmp eq i64 %_18, 0
  br i1 %12, label %bb12, label %bb11

bb4:                                              ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb1
  %13 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %_4 to %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Occupied"*
  %14 = getelementptr inbounds %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Occupied", %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Occupied"* %13, i32 0, i32 1
  %15 = bitcast %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* %entry to i8*
  %16 = bitcast %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 40, i1 false)
  store i8 0, i8* %_16, align 1
  %17 = bitcast %"serde_json::value::Value"* %_11 to i8*
  %18 = bitcast %"serde_json::value::Value"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
; invoke alloc::collections::btree::map::OccupiedEntry<K,V>::insert
  invoke void @"_ZN5alloc11collections5btree3map26OccupiedEntry$LT$K$C$V$GT$6insert17hfe350027a1d4f962E"(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %_9, %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(40) %entry, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_11)
          to label %bb6 unwind label %cleanup2

bb6:                                              ; preds = %bb5
  %19 = bitcast %"core::option::Option<serde_json::value::Value>"* %0 to %"core::option::Option<serde_json::value::Value>::Some"*
  %20 = bitcast %"core::option::Option<serde_json::value::Value>::Some"* %19 to %"serde_json::value::Value"*
  %21 = bitcast %"serde_json::value::Value"* %20 to i8*
  %22 = bitcast %"serde_json::value::Value"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false)
  br label %bb9

bb7:                                              ; preds = %bb1
  store i8 0, i8* %_17, align 1
  %23 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %_4 to %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant"*
  %24 = getelementptr inbounds %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant", %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant"* %23, i32 0, i32 1
  %25 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %entry1 to i8*
  %26 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 64, i1 false)
  %27 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %_14 to i8*
  %28 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %entry1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 64, i1 false)
  store i8 0, i8* %_16, align 1
  %29 = bitcast %"serde_json::value::Value"* %_15 to i8*
  %30 = bitcast %"serde_json::value::Value"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 32, i1 false)
; invoke alloc::collections::btree::map::VacantEntry<K,V>::insert
  %31 = invoke align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN5alloc11collections5btree3map24VacantEntry$LT$K$C$V$GT$6insert17hdd7c1e397d0b9a4eE"(%"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* noalias nocapture dereferenceable(64) %_14, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_15)
          to label %bb8 unwind label %cleanup2

bb8:                                              ; preds = %bb7
  %32 = bitcast %"core::option::Option<serde_json::value::Value>"* %0 to i8*
  store i8 6, i8* %32, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb6
  %33 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %_4 to i64*
  %_19 = load i64, i64* %33, align 8, !range !1
  %34 = icmp eq i64 %_19, 0
  br i1 %34, label %bb15, label %bb14

bb10:                                             ; preds = %bb11
  store i8 0, i8* %_16, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %value) #14
  br label %bb2

bb11:                                             ; preds = %bb13, %bb12, %bb3, %cleanup
  %35 = load i8, i8* %_16, align 1, !range !4
  %36 = trunc i8 %35 to i1
  br i1 %36, label %bb10, label %bb2

bb12:                                             ; preds = %bb3
  %37 = load i8, i8* %_17, align 1, !range !4
  %38 = trunc i8 %37 to i1
  br i1 %38, label %bb13, label %bb11

bb13:                                             ; preds = %bb12
  store i8 0, i8* %_17, align 1
  %39 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %_4 to %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant"*
  %40 = getelementptr inbounds %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant", %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant"* %39, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h11ddbfeb9fbe884aE(%"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(64) %40) #14
  br label %bb11

bb14:                                             ; preds = %bb16, %bb15, %bb9
  store i8 0, i8* %_17, align 1
  ret void

bb15:                                             ; preds = %bb9
  %41 = load i8, i8* %_17, align 1, !range !4
  %42 = trunc i8 %41 to i1
  br i1 %42, label %bb16, label %bb14

bb16:                                             ; preds = %bb15
  store i8 0, i8* %_17, align 1
  %43 = bitcast %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>"* %_4 to %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant"*
  %44 = getelementptr inbounds %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant", %"alloc::collections::btree::map::Entry<alloc::string::String, serde_json::value::Value>::Vacant"* %43, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h11ddbfeb9fbe884aE(%"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(64) %44)
          to label %bb14 unwind label %cleanup

cleanup:                                          ; preds = %bb16, %start
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %46, i8** %48, align 8
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %47, i32* %49, align 8
  br label %bb11

cleanup2:                                         ; preds = %bb7, %bb5
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  %52 = extractvalue { i8*, i32 } %50, 1
  %53 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %51, i8** %53, align 8
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %52, i32* %54, align 8
  br label %bb3
}

; alloc::collections::btree::map::VacantEntry<K,V>::insert
; Function Attrs: uwtable
define internal align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN5alloc11collections5btree3map24VacantEntry$LT$K$C$V$GT$6insert17hdd7c1e397d0b9a4eE"(%"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* noalias nocapture dereferenceable(64) %self, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %value) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_62 = alloca i8, align 1
  %_61 = alloca i8, align 1
  %_60 = alloca i8, align 1
  %_59 = alloca i8, align 1
  %_55 = alloca %"serde_json::value::Value", align 8
  %_54 = alloca %"alloc::string::String", align 8
  %_52 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_48 = alloca %"alloc::collections::btree::map::{{impl}}::insert::{{closure}}<alloc::string::String, serde_json::value::Value>", align 1
  %_47 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_46 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>", align 8
  %_45 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>", align 8
  %_43 = alloca %"serde_json::value::Value", align 8
  %_42 = alloca %"alloc::string::String", align 8
  %v3 = alloca %"serde_json::value::Value", align 8
  %k2 = alloca %"alloc::string::String", align 8
  %left1 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_33 = alloca %"serde_json::value::Value", align 8
  %_32 = alloca %"alloc::string::String", align 8
  %_31 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_30 = alloca %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %parent = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_27 = alloca %"alloc::collections::btree::map::{{impl}}::insert::{{closure}}<alloc::string::String, serde_json::value::Value>.1", align 1
  %_26 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_25 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>", align 8
  %_22 = alloca %"serde_json::value::Value", align 8
  %_21 = alloca %"alloc::string::String", align 8
  %v = alloca %"serde_json::value::Value", align 8
  %k = alloca %"alloc::string::String", align 8
  %left = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_15 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %handle = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_11 = alloca %"serde_json::value::Value", align 8
  %_10 = alloca %"alloc::string::String", align 8
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_8 = alloca { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }, align 8
  %cur_parent = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>", align 8
  %ins_edge = alloca { i64*, i64 }, align 8
  %ins_v = alloca %"serde_json::value::Value", align 8
  %ins_k = alloca %"alloc::string::String", align 8
  %1 = alloca %"serde_json::value::Value"*, align 8
  store i8 0, i8* %_59, align 1
  store i8 0, i8* %_61, align 1
  store i8 0, i8* %_62, align 1
  store i8 0, i8* %_60, align 1
  %2 = getelementptr inbounds %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %self, i32 0, i32 7
  %3 = load i64*, i64** %2, align 8, !nonnull !2
  %4 = getelementptr inbounds %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %self, i32 0, i32 7
  %5 = load i64*, i64** %4, align 8, !nonnull !2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  store i64 %7, i64* %3, align 8
  %8 = getelementptr inbounds %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %self, i32 0, i32 5
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false)
  %11 = bitcast %"alloc::collections::btree::map::VacantEntry<alloc::string::String, serde_json::value::Value>"* %self to %"alloc::string::String"*
  %12 = bitcast %"alloc::string::String"* %_10 to i8*
  %13 = bitcast %"alloc::string::String"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
  %14 = bitcast %"serde_json::value::Value"* %_11 to i8*
  %15 = bitcast %"serde_json::value::Value"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert
  invoke void @"_ZN5alloc11collections5btree4node210Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$6insert17h859121e1b3134ee1E"({ [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* noalias nocapture sret dereferenceable(112) %_8, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_9, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_10, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_11)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 1, i8* %_61, align 1
  store i8 1, i8* %_62, align 1
  %16 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %17 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %16 to i64*
  %_12 = load i64, i64* %17, align 8, !range !1
  switch i64 %_12, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb9
  ]

bb2:                                              ; preds = %bb27, %bb3
  %18 = bitcast { i8*, i32 }* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23

bb3:                                              ; preds = %bb28, %bb29
  %24 = load i8, i8* %_59, align 1, !range !4
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb27, label %bb2

bb4:                                              ; preds = %cleanup4
  %26 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %27 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %26 to i64*
  %_63 = load i64, i64* %27, align 8, !range !1
  %28 = icmp eq i64 %_63, 0
  br i1 %28, label %bb29, label %bb32

bb5:                                              ; preds = %bb1
  unreachable

bb6:                                              ; preds = %bb1
  %29 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %30 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %29 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Fit"*
  %31 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Fit", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Fit"* %30, i32 0, i32 1
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %handle to i8*
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false)
  %34 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_15 to i8*
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %handle to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv_mut
  %36 = invoke { i64*, i64* } @"_ZN5alloc11collections5btree4node171Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$11into_kv_mut17h5284590c5e2dbce1E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %_15)
          to label %bb7 unwind label %cleanup4

bb7:                                              ; preds = %bb6
  %37 = extractvalue { i64*, i64* } %36, 0
  %38 = extractvalue { i64*, i64* } %36, 1
  %39 = bitcast i64* %38 to %"serde_json::value::Value"*
  store %"serde_json::value::Value"* %39, %"serde_json::value::Value"** %1, align 8
  %40 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %41 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %40 to i64*
  %_64 = load i64, i64* %41, align 8, !range !1
  %42 = icmp eq i64 %_64, 0
  br i1 %42, label %bb34, label %bb37

bb8:                                              ; preds = %bb34, %bb19
  store i8 0, i8* %_60, align 1
  store i8 0, i8* %_59, align 1
  %43 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %1, align 8, !nonnull !2
  ret %"serde_json::value::Value"* %43

bb9:                                              ; preds = %bb1
  %44 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8, i32 0, i32 3
  %ptr = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %44, align 8
  %45 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %46 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %45 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %47 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %46, i32 0, i32 1
  %48 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %left to i8*
  %49 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false)
  store i8 0, i8* %_62, align 1
  %50 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %51 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %50 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %52 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %51, i32 0, i32 3
  %53 = bitcast %"alloc::string::String"* %k to i8*
  %54 = bitcast %"alloc::string::String"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false)
  store i8 0, i8* %_61, align 1
  %55 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %56 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %55 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %57 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %56, i32 0, i32 5
  %58 = bitcast %"serde_json::value::Value"* %v to i8*
  %59 = bitcast %"serde_json::value::Value"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 32, i1 false)
  %60 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %61 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %60 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %62 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %61, i32 0, i32 7
  %63 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %62, i32 0, i32 0
  %right.0 = load i64*, i64** %63, align 8, !nonnull !2
  %64 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %62, i32 0, i32 1
  %right.1 = load i64, i64* %64, align 8
  %65 = bitcast %"alloc::string::String"* %_21 to i8*
  %66 = bitcast %"alloc::string::String"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false)
  store i8 1, i8* %_59, align 1
  %67 = bitcast %"alloc::string::String"* %ins_k to i8*
  %68 = bitcast %"alloc::string::String"* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false)
  %69 = bitcast %"serde_json::value::Value"* %_22 to i8*
  %70 = bitcast %"serde_json::value::Value"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 32, i1 false)
  store i8 1, i8* %_60, align 1
  %71 = bitcast %"serde_json::value::Value"* %ins_v to i8*
  %72 = bitcast %"serde_json::value::Value"* %_22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 32, i1 false)
  %73 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ins_edge, i32 0, i32 0
  store i64* %right.0, i64** %73, align 8
  %74 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ins_edge, i32 0, i32 1
  store i64 %right.1, i64* %74, align 8
  %75 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_26 to i8*
  %76 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %left to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false)
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
  invoke void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h5e010f984a3d2166E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* noalias nocapture sret dereferenceable(40) %_25, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_26)
          to label %bb10 unwind label %cleanup4

bb10:                                             ; preds = %bb9
; invoke core::result::Result<T,E>::map_err
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9d9275dee7ae6489E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* noalias nocapture sret dereferenceable(40) %cur_parent, %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* noalias nocapture dereferenceable(40) %_25)
          to label %bb11 unwind label %cleanup4

bb11:                                             ; preds = %bb10
  %77 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %78 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %77 to i64*
  %_65 = load i64, i64* %78, align 8, !range !1
  store i8 0, i8* %_61, align 1
  store i8 0, i8* %_62, align 1
  br label %bb12

bb12:                                             ; preds = %bb39, %bb11
  %79 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %cur_parent to i64*
  %_28 = load i64, i64* %79, align 8, !range !1
  switch i64 %_28, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb24
  ]

bb13:                                             ; preds = %bb12
  unreachable

bb14:                                             ; preds = %bb12
  %80 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %cur_parent to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok"*
  %81 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Ok"* %80, i32 0, i32 1
  %82 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent to i8*
  %83 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 32, i1 false)
  %84 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_31 to i8*
  %85 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 32, i1 false)
  store i8 0, i8* %_59, align 1
  %86 = bitcast %"alloc::string::String"* %_32 to i8*
  %87 = bitcast %"alloc::string::String"* %ins_k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false)
  store i8 0, i8* %_60, align 1
  %88 = bitcast %"serde_json::value::Value"* %_33 to i8*
  %89 = bitcast %"serde_json::value::Value"* %ins_v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 32, i1 false)
  %90 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ins_edge, i32 0, i32 0
  %_34.0 = load i64*, i64** %90, align 8, !nonnull !2
  %91 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ins_edge, i32 0, i32 1
  %_34.1 = load i64, i64* %91, align 8
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert
  invoke void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$6insert17hfd4157c9cc5c6331E"(%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(104) %_30, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_31, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_32, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_33, i64* nonnull %_34.0, i64 %_34.1)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %92 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_30 to i64*
  %_35 = load i64, i64* %92, align 8, !range !1
  switch i64 %_35, label %bb16 [
    i64 0, label %bb17
    i64 1, label %bb20
  ]

bb16:                                             ; preds = %bb15
  unreachable

bb17:                                             ; preds = %bb15
  store %"serde_json::value::Value"* %ptr, %"serde_json::value::Value"** %1, align 8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf7950030576194d1E(%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(104) %_30)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb18, %bb26
  br label %bb8

bb20:                                             ; preds = %bb15
  %93 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_30 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %94 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %93, i32 0, i32 1
  %95 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %left1 to i8*
  %96 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false)
  %97 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_30 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %98 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %97, i32 0, i32 3
  %99 = bitcast %"alloc::string::String"* %k2 to i8*
  %100 = bitcast %"alloc::string::String"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false)
  %101 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_30 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %102 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %101, i32 0, i32 5
  %103 = bitcast %"serde_json::value::Value"* %v3 to i8*
  %104 = bitcast %"serde_json::value::Value"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 32, i1 false)
  %105 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_30 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %106 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %105, i32 0, i32 7
  %107 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %106, i32 0, i32 0
  %right.05 = load i64*, i64** %107, align 8, !nonnull !2
  %108 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %106, i32 0, i32 1
  %right.16 = load i64, i64* %108, align 8
  %109 = bitcast %"alloc::string::String"* %_42 to i8*
  %110 = bitcast %"alloc::string::String"* %k2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 24, i1 false)
  store i8 1, i8* %_59, align 1
  %111 = bitcast %"alloc::string::String"* %ins_k to i8*
  %112 = bitcast %"alloc::string::String"* %_42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false)
  %113 = bitcast %"serde_json::value::Value"* %_43 to i8*
  %114 = bitcast %"serde_json::value::Value"* %v3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 32, i1 false)
  store i8 1, i8* %_60, align 1
  %115 = bitcast %"serde_json::value::Value"* %ins_v to i8*
  %116 = bitcast %"serde_json::value::Value"* %_43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 32, i1 false)
  %117 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ins_edge, i32 0, i32 0
  store i64* %right.05, i64** %117, align 8
  %118 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ins_edge, i32 0, i32 1
  store i64 %right.16, i64* %118, align 8
  %119 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_47 to i8*
  %120 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %left1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false)
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
  invoke void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h5051ccdfd5393a28E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(40) %_46, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_47)
          to label %bb22 unwind label %cleanup7

bb21:                                             ; preds = %cleanup7
  %121 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_30 to i64*
  %_66 = load i64, i64* %121, align 8, !range !1
  %122 = icmp eq i64 %_66, 1
  br i1 %122, label %bb29, label %bb38

bb22:                                             ; preds = %bb20
; invoke core::result::Result<T,E>::map_err
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7755972c686b1d78E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* noalias nocapture sret dereferenceable(40) %_45, %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture dereferenceable(40) %_46)
          to label %bb23 unwind label %cleanup7

bb23:                                             ; preds = %bb22
  %123 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %cur_parent to i8*
  %124 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %_45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 40, i1 false)
  %125 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_30 to i64*
  %_67 = load i64, i64* %125, align 8, !range !1
  %126 = icmp eq i64 %_67, 1
  br i1 %126, label %bb39, label %bb40

bb24:                                             ; preds = %bb12
  %127 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>"* %cur_parent to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err"*
  %128 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, &mut alloc::collections::btree::node::Root<alloc::string::String, serde_json::value::Value>>::Err"* %127, i32 0, i32 1
  %root = load { i64*, i64 }*, { i64*, i64 }** %128, align 8, !nonnull !2
; invoke alloc::collections::btree::node::Root<K,V>::push_level
  invoke void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$10push_level17h6ef640b53432c95bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_52, { i64*, i64 }* align 8 dereferenceable(16) %root)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
  store i8 0, i8* %_59, align 1
  %129 = bitcast %"alloc::string::String"* %_54 to i8*
  %130 = bitcast %"alloc::string::String"* %ins_k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false)
  store i8 0, i8* %_60, align 1
  %131 = bitcast %"serde_json::value::Value"* %_55 to i8*
  %132 = bitcast %"serde_json::value::Value"* %ins_v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 32, i1 false)
  %133 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ins_edge, i32 0, i32 0
  %_56.0 = load i64*, i64** %133, align 8, !nonnull !2
  %134 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %ins_edge, i32 0, i32 1
  %_56.1 = load i64, i64* %134, align 8
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>::push
  invoke void @"_ZN5alloc11collections5btree4node119NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$4push17h7adf9f45226e1f0bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_52, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_54, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_55, i64* nonnull %_56.0, i64 %_56.1)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
  store %"serde_json::value::Value"* %ptr, %"serde_json::value::Value"** %1, align 8
  br label %bb19

bb27:                                             ; preds = %bb3
  store i8 0, i8* %_59, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %ins_k) #14
  br label %bb2

bb28:                                             ; preds = %bb29
  store i8 0, i8* %_60, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %ins_v) #14
  br label %bb3

bb29:                                             ; preds = %bb35, %bb31, %bb30, %bb4, %bb38, %bb21, %cleanup
  %135 = load i8, i8* %_60, align 1, !range !4
  %136 = trunc i8 %135 to i1
  br i1 %136, label %bb28, label %bb3

bb30:                                             ; preds = %bb33, %bb32
  %137 = load i8, i8* %_61, align 1, !range !4
  %138 = trunc i8 %137 to i1
  br i1 %138, label %bb31, label %bb29

bb31:                                             ; preds = %bb30
  store i8 0, i8* %_61, align 1
  %139 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %140 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %139 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %141 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %140, i32 0, i32 5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %141) #14
  br label %bb29

bb32:                                             ; preds = %bb4
  %142 = load i8, i8* %_62, align 1, !range !4
  %143 = trunc i8 %142 to i1
  br i1 %143, label %bb33, label %bb30

bb33:                                             ; preds = %bb32
  store i8 0, i8* %_62, align 1
  %144 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %145 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %144 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %146 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %145, i32 0, i32 3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %146) #14
  br label %bb30

bb34:                                             ; preds = %bb36, %bb7
  store i8 0, i8* %_61, align 1
  store i8 0, i8* %_62, align 1
  br label %bb8

bb35:                                             ; preds = %cleanup8
  store i8 0, i8* %_61, align 1
  %147 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %148 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %147 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %149 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %148, i32 0, i32 5
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %149) #14
  br label %bb29

bb36:                                             ; preds = %bb37
  store i8 0, i8* %_61, align 1
  %150 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %151 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %150 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %152 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %151, i32 0, i32 5
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %152)
          to label %bb34 unwind label %cleanup

bb37:                                             ; preds = %bb7
  store i8 0, i8* %_62, align 1
  %153 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %_8 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %154 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %153 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %155 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %154, i32 0, i32 3
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %155)
          to label %bb36 unwind label %cleanup8

bb38:                                             ; preds = %bb21
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf7950030576194d1E(%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(104) %_30) #14
  br label %bb29

bb39:                                             ; preds = %bb40, %bb23
  br label %bb12

bb40:                                             ; preds = %bb23
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf7950030576194d1E(%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(104) %_30)
          to label %bb39 unwind label %cleanup

cleanup:                                          ; preds = %bb36, %bb17, %bb40, %bb14, %bb25, %bb24, %start
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = extractvalue { i8*, i32 } %156, 0
  %158 = extractvalue { i8*, i32 } %156, 1
  %159 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %157, i8** %159, align 8
  %160 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %158, i32* %160, align 8
  br label %bb29

cleanup4:                                         ; preds = %bb6, %bb10, %bb9
  %161 = landingpad { i8*, i32 }
          cleanup
  %162 = extractvalue { i8*, i32 } %161, 0
  %163 = extractvalue { i8*, i32 } %161, 1
  %164 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %162, i8** %164, align 8
  %165 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %163, i32* %165, align 8
  br label %bb4

cleanup7:                                         ; preds = %bb22, %bb20
  %166 = landingpad { i8*, i32 }
          cleanup
  %167 = extractvalue { i8*, i32 } %166, 0
  %168 = extractvalue { i8*, i32 } %166, 1
  %169 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %167, i8** %169, align 8
  %170 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %168, i32* %170, align 8
  br label %bb21

cleanup8:                                         ; preds = %bb37
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  %173 = extractvalue { i8*, i32 } %171, 1
  %174 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %172, i8** %174, align 8
  %175 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %173, i32* %175, align 8
  br label %bb35
}

; alloc::collections::btree::map::VacantEntry<K,V>::insert::{{closure}}
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) { i64*, i64 }* @"_ZN5alloc11collections5btree3map24VacantEntry$LT$K$C$V$GT$6insert28_$u7b$$u7b$closure$u7d$$u7d$17h20b3f25571bcfd30E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %n) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %0 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_3 to i8*
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %n to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_root_mut
  %2 = call align 8 dereferenceable(16) { i64*, i64 }* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$13into_root_mut17h5c432d3124f69089E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret { i64*, i64 }* %2
}

; alloc::collections::btree::map::VacantEntry<K,V>::insert::{{closure}}
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) { i64*, i64 }* @"_ZN5alloc11collections5btree3map24VacantEntry$LT$K$C$V$GT$6insert28_$u7b$$u7b$closure$u7d$$u7d$17h457262d440141873E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %n) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %0 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_3 to i8*
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %n to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_root_mut
  %2 = call align 8 dereferenceable(16) { i64*, i64 }* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$13into_root_mut17h555e901e705b630cE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret { i64*, i64 }* %2
}

; alloc::collections::btree::map::OccupiedEntry<K,V>::insert
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree3map26OccupiedEntry$LT$K$C$V$GT$6insert17hfe350027a1d4f962E"(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(40) %self, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %value) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"serde_json::value::Value", align 8
  store i8 0, i8* %_7, align 1
  store i8 1, i8* %_7, align 1
; invoke alloc::collections::btree::map::OccupiedEntry<K,V>::get_mut
  %_3 = invoke align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN5alloc11collections5btree3map26OccupiedEntry$LT$K$C$V$GT$7get_mut17hbf04fb148f2001f9E"(%"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(40) %self)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb4, %bb5
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  store i8 0, i8* %_7, align 1
  %8 = bitcast %"serde_json::value::Value"* %_6 to i8*
  %9 = bitcast %"serde_json::value::Value"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17h567324519328cb70E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %0, %"serde_json::value::Value"* align 8 dereferenceable(32) %_3, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_6)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void

bb4:                                              ; preds = %bb5
  store i8 0, i8* %_7, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %value) #14
  br label %bb1

bb5:                                              ; preds = %cleanup
  %10 = load i8, i8* %_7, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb4, label %bb1

cleanup:                                          ; preds = %bb2, %start
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb5
}

; alloc::collections::btree::map::OccupiedEntry<K,V>::get_mut
; Function Attrs: uwtable
define internal align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN5alloc11collections5btree3map26OccupiedEntry$LT$K$C$V$GT$7get_mut17hbf04fb148f2001f9E"(%"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(40)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"*, align 8
  store %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* %0, %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"** %self, align 8
  %1 = load %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_4 = bitcast %"alloc::collections::btree::map::OccupiedEntry<alloc::string::String, serde_json::value::Value>"* %1 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::kv_mut
  %2 = call { i64*, i64* } @"_ZN5alloc11collections5btree4node171Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6kv_mut17h401ce1a4240bc35bE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* align 8 dereferenceable(32) %_4)
  %3 = extractvalue { i64*, i64* } %2, 0
  %4 = extractvalue { i64*, i64* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = bitcast i64* %4 to %"serde_json::value::Value"*
  ret %"serde_json::value::Value"* %_2
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,HandleType>::reborrow
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node104Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$HandleType$GT$8reborrow17h2ed16b12ecb7c4e7E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias readonly align 8 dereferenceable(32)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", align 1
  %_2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %self = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"*, align 8
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %1, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"** %self, align 8, !nonnull !2
  %_3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %2 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17hd49dae5df2f6bb7dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_2, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"** %self, align 8, !nonnull !2
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %3, i32 0, i32 5
  %_4 = load i64, i64* %4, align 8
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %5 to i8*
  %7 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 5
  store i64 %_4, i64* %8, align 8
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,HandleType>::reborrow
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node104Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$HandleType$GT$8reborrow17h51c8b586dd38f606E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias readonly align 8 dereferenceable(32)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", align 1
  %_2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %self = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"*, align 8
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %1, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"** %self, align 8, !nonnull !2
  %_3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %2 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17hae775b8341b3c2caE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %_2, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"** %self, align 8, !nonnull !2
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %3, i32 0, i32 5
  %_4 = load i64, i64* %4, align 8
  %5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %5 to i8*
  %7 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 5
  store i64 %_4, i64* %8, align 8
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::deallocate_and_ascend
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node117NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$21deallocate_and_ascend17h103a691c078c7681E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_17 = alloca %"alloc::alloc::Global", align 1
  %_14 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_13 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>", align 8
  %ret = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %1 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h7a7cc4af131cd917E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %1, true
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @43 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @45 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self, i32 0, i32 5
  %node = load i64*, i64** %2, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_14 to i8*
  %4 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17hea293cd3f44898e5E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* noalias nocapture sret dereferenceable(40) %_13, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_14)
  br label %bb6

bb6:                                              ; preds = %bb5
; call core::result::Result<T,E>::ok
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h269aca993d9b6830E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %ret, %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* noalias nocapture dereferenceable(40) %_13)
  br label %bb7

bb7:                                              ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::cast
  %5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h24d17ea4d71aafd7E"(i64* nonnull %node)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::alloc::Layout::new
  %6 = call { i64, i64 } @_ZN4core5alloc6Layout3new17h80f01b2d0050d162E()
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = extractvalue { i64, i64 } %6, 1
  br label %bb9

bb9:                                              ; preds = %bb8
; call <alloc::alloc::Global as core::alloc::Alloc>::dealloc
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$7dealloc17hf008da6327a79dbdE"(%"alloc::alloc::Global"* nonnull align 1 %_17, i8* nonnull %5, i64 %7, i64 %8)
  br label %bb10

bb10:                                             ; preds = %bb9
  %9 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i8*
  %10 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %ret to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false)
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_mut
; Function Attrs: uwtable
define internal align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node119NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_mut17h784d2f9a1357398bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, i32 0, i32 5
  %_7 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_7)
  br label %bb1

bb1:                                              ; preds = %start
  %_5 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*
  ret %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_5
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>::push
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node119NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$4push17h7adf9f45226e1f0bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24), %"alloc::string::String"* noalias nocapture dereferenceable(24) %key, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %val, i64* nonnull %edge.0, i64 %edge.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %self.i.i.i = alloca i64**, align 8
  %self.i.i = alloca i8**, align 8
  %1 = alloca i64*, align 8
  %self.i = alloca i8**, align 8
  %2 = alloca { i8*, i32 }, align 8
  %_63 = alloca i8, align 1
  %_62 = alloca i8, align 1
  %_58 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_57 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_54 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %_49 = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %_43 = alloca %"serde_json::value::Value", align 8
  %_34 = alloca %"alloc::string::String", align 8
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  store i8 0, i8* %_62, align 1
  store i8 0, i8* %_63, align 1
  store i8 1, i8* %_62, align 1
  store i8 1, i8* %_63, align 1
  br i1 false, label %bb2, label %bb6

bb1:                                              ; preds = %bb26, %bb5
  %3 = bitcast { i8*, i32 }* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  %9 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %9 to i64*
  %_10 = load i64, i64* %10, align 8
  %_9 = sub i64 %_10, 1
  %_7 = icmp eq i64 %edge.1, %_9
  %_6 = xor i1 %_7, true
  br i1 %_6, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb6

bb4:                                              ; preds = %bb2
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [48 x i8] }>* @46 to [0 x i8]*), i64 48, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @47 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup

bb5:                                              ; preds = %bb27, %bb28
  %11 = load i8, i8* %_62, align 1, !range !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb26, label %bb1

bb6:                                              ; preds = %bb3, %start
  br i1 false, label %bb7, label %bb11

bb7:                                              ; preds = %bb6
  %_19 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %13 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_19)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %_17 = icmp ult i64 %13, 11
  %_16 = xor i1 %_17, true
  br i1 %_16, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [39 x i8] }>* @48 to [0 x i8]*), i64 39, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @49 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup

bb11:                                             ; preds = %bb9, %bb6
  %_25 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %_33 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_25)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %_32 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::keys_mut
  %14 = invoke { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$8keys_mut17h5fde1313cb1a3273E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_32)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  %_30.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %14, 0
  %_30.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %14, 1
; invoke core::slice::<impl [T]>::get_unchecked_mut
  %_28 = invoke align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha48b2ffd00e931fdE"([0 x %"alloc::string::String"]* nonnull align 8 %_30.0, i64 %_30.1, i64 %_33)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_62, align 1
  %15 = bitcast %"alloc::string::String"* %_34 to i8*
  %16 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hbfac23d297b9d7d3E(%"alloc::string::String"* %_28, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_34)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %_41 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::vals_mut
  %17 = invoke { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$8vals_mut17h09c47555a3581871E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_41)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  %_39.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %17, 0
  %_39.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %17, 1
; invoke core::slice::<impl [T]>::get_unchecked_mut
  %_37 = invoke align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h793f5eb521307fa8E"([0 x %"serde_json::value::Value"]* nonnull align 8 %_39.0, i64 %_39.1, i64 %_33)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  store i8 0, i8* %_63, align 1
  %18 = bitcast %"serde_json::value::Value"* %_43 to i8*
  %19 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hf1a244efc178a16cE(%"serde_json::value::Value"* %_37, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_43)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
  %_50 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_mut
  %20 = invoke align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node119NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_mut17h784d2f9a1357398bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_50)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %20, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_49, align 8
  %21 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_49, align 8, !nonnull !2
  %_48 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %21, i32 0, i32 3
  %_47.0 = bitcast [12 x i8*]* %_48 to [0 x i8*]*
  %_51 = add i64 %_33, 1
; invoke core::slice::<impl [T]>::get_unchecked_mut
  %_45 = invoke align 8 dereferenceable(8) i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hc6fff8e94007762cE"([0 x i8*]* nonnull align 8 %_47.0, i64 12, i64 %_51)
          to label %bb20 unwind label %cleanup

bb20:                                             ; preds = %bb19
  store i8** %_45, i8*** %self.i, align 8
  store i64* %edge.0, i64** %1, align 8
  %22 = load i64*, i64** %1, align 8, !nonnull !2
  %23 = load i8**, i8*** %self.i, align 8, !nonnull !2
  %24 = bitcast i8** %23 to i64**
  store i64* %22, i64** %24, align 8
  %_8.i = load i8**, i8*** %self.i, align 8, !nonnull !2
  store i8** %_8.i, i8*** %self.i.i, align 8
  %25 = load i8**, i8*** %self.i.i, align 8, !nonnull !2
  %_5.i.i = bitcast i8** %25 to i64**
  store i64** %_5.i.i, i64*** %self.i.i.i, align 8
  %_3.i.i.i = load i64**, i64*** %self.i.i.i, align 8, !nonnull !2
  br label %bb21

bb21:                                             ; preds = %bb20
  %_55 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %26 = invoke %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5d208d521508e34cE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_55)
          to label %bb22 unwind label %cleanup

bb22:                                             ; preds = %bb21
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %26, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_54, align 8
  %27 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_54, align 8
  %28 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %27, i32 0, i32 5
  %29 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_54, align 8
  %30 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %29, i32 0, i32 5
  %31 = load i16, i16* %30, align 2
  %32 = add i16 %31, 1
  store i16 %32, i16* %28, align 2
  %_59 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  invoke void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17h840a6b34bdcec63aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_58, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_59)
          to label %bb23 unwind label %cleanup

bb23:                                             ; preds = %bb22
  %_60 = add i64 %_33, 1
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  invoke void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6788212853a7a5bcE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_57, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_58, i64 %_60)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::correct_parent_link
  invoke void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$19correct_parent_link17hc6170593cc6327efE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_57)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
  ret void

bb26:                                             ; preds = %bb5
  store i8 0, i8* %_62, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %key) #14
  br label %bb1

bb27:                                             ; preds = %bb28
  store i8 0, i8* %_63, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %val) #14
  br label %bb5

bb28:                                             ; preds = %cleanup
  %33 = load i8, i8* %_63, align 1, !range !4
  %34 = trunc i8 %33 to i1
  br i1 %34, label %bb27, label %bb5

unreachable:                                      ; preds = %bb10, %bb4
  unreachable

cleanup:                                          ; preds = %bb24, %bb23, %bb22, %bb21, %bb19, %bb18, %bb17, %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %bb10, %bb7, %bb4
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  %37 = extractvalue { i8*, i32 } %35, 1
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %36, i8** %38, align 8
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %37, i32* %39, align 8
  br label %bb28
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::deallocate_and_ascend
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node121NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$21deallocate_and_ascend17hfdaad5e2355dadfcE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_8 = alloca %"alloc::alloc::Global", align 1
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_4 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>", align 8
  %ret = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %1 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self, i32 0, i32 5
  %node = load i64*, i64** %1, align 8, !nonnull !2
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_5 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h16f3d90dcbddbc68E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(40) %_4, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h77d57b153a685b90E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %ret, %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture dereferenceable(40) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::cast
  %4 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h24d17ea4d71aafd7E"(i64* nonnull %node)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::alloc::Layout::new
  %5 = call { i64, i64 } @_ZN4core5alloc6Layout3new17h974705507a0a41b2E()
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = extractvalue { i64, i64 } %5, 1
  br label %bb4

bb4:                                              ; preds = %bb3
; call <alloc::alloc::Global as core::alloc::Alloc>::dealloc
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$7dealloc17hf008da6327a79dbdE"(%"alloc::alloc::Global"* nonnull align 1 %_8, i8* nonnull %4, i64 %6, i64 %7)
  br label %bb5

bb5:                                              ; preds = %bb4
  %8 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i8*
  %9 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %ret to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  ret void
}

; alloc::collections::btree::node::slice_insert
; Function Attrs: uwtable
define internal void @_ZN5alloc11collections5btree4node12slice_insert17h08ee7b6ab38ce811E([0 x i64*]* nonnull align 8 %slice.0, i64 %slice.1, i64 %idx, i64* nonnull %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_25 = alloca i8, align 1
  store i8 0, i8* %_25, align 1
  store i8 1, i8* %_25, align 1
; invoke core::slice::<impl [T]>::as_ptr
  %1 = invoke i64** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h892d988f54a05abdE"([0 x i64*]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb10, %bb11
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
; invoke core::ptr::<impl *const T>::add
  %8 = invoke i64** @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h194619f715a87265E"(i64** %1, i64 %idx)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke core::slice::<impl [T]>::as_mut_ptr
  %9 = invoke i64** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17haa5356113af96502E"([0 x i64*]* nonnull align 8 %slice.0, i64 %slice.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_12 = add i64 %idx, 1
; invoke core::ptr::<impl *mut T>::add
  %10 = invoke i64** @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha47e4df4b4683d70E"(i64** %9, i64 %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke core::slice::<impl [T]>::len
  %11 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h6e3cf14716c0165eE"([0 x i64*]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_14 = sub i64 %11, %idx
; invoke core::intrinsics::copy
  invoke void @_ZN4core10intrinsics4copy17h51161418077ba506E(i64** %8, i64** %10, i64 %_14)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke core::slice::<impl [T]>::get_unchecked_mut
  %_20 = invoke align 8 dereferenceable(8) i64** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h3af5fb81b650355dE"([0 x i64*]* nonnull align 8 %slice.0, i64 %slice.1, i64 %idx)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_25, align 1
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17h735e5e4a6169e780E(i64** %_20, i64* nonnull %val)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  ret void

bb10:                                             ; preds = %bb11
  store i8 0, i8* %_25, align 1
  br label %bb1

bb11:                                             ; preds = %cleanup
  %12 = load i8, i8* %_25, align 1, !range !4
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb10, label %bb1

cleanup:                                          ; preds = %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb11
}

; alloc::collections::btree::node::slice_insert
; Function Attrs: uwtable
define internal void @_ZN5alloc11collections5btree4node12slice_insert17h520aaf54ea89625dE([0 x %"serde_json::value::Value"]* nonnull align 8 %slice.0, i64 %slice.1, i64 %idx, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_25 = alloca i8, align 1
  %_24 = alloca %"serde_json::value::Value", align 8
  store i8 0, i8* %_25, align 1
  store i8 1, i8* %_25, align 1
; invoke core::slice::<impl [T]>::as_ptr
  %1 = invoke %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc14e7bc708c0d1d8E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb10, %bb11
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
; invoke core::ptr::<impl *const T>::add
  %8 = invoke %"serde_json::value::Value"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h664c60febf91f948E"(%"serde_json::value::Value"* %1, i64 %idx)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke core::slice::<impl [T]>::as_mut_ptr
  %9 = invoke %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7581a17caccf72fbE"([0 x %"serde_json::value::Value"]* nonnull align 8 %slice.0, i64 %slice.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_12 = add i64 %idx, 1
; invoke core::ptr::<impl *mut T>::add
  %10 = invoke %"serde_json::value::Value"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb6153962084a15b9E"(%"serde_json::value::Value"* %9, i64 %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke core::slice::<impl [T]>::len
  %11 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hd46285897c85b5caE"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_14 = sub i64 %11, %idx
; invoke core::intrinsics::copy
  invoke void @_ZN4core10intrinsics4copy17h1888414c24a4a289E(%"serde_json::value::Value"* %8, %"serde_json::value::Value"* %10, i64 %_14)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke core::slice::<impl [T]>::get_unchecked_mut
  %_20 = invoke align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h793f5eb521307fa8E"([0 x %"serde_json::value::Value"]* nonnull align 8 %slice.0, i64 %slice.1, i64 %idx)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_25, align 1
  %12 = bitcast %"serde_json::value::Value"* %_24 to i8*
  %13 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hf1a244efc178a16cE(%"serde_json::value::Value"* %_20, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_24)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  ret void

bb10:                                             ; preds = %bb11
  store i8 0, i8* %_25, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %val) #14
  br label %bb1

bb11:                                             ; preds = %cleanup
  %14 = load i8, i8* %_25, align 1, !range !4
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb10, label %bb1

cleanup:                                          ; preds = %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %start
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb11
}

; alloc::collections::btree::node::slice_insert
; Function Attrs: uwtable
define internal void @_ZN5alloc11collections5btree4node12slice_insert17hb6fc06b08c7a4e97E([0 x %"alloc::string::String"]* nonnull align 8 %slice.0, i64 %slice.1, i64 %idx, %"alloc::string::String"* noalias nocapture dereferenceable(24) %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_25 = alloca i8, align 1
  %_24 = alloca %"alloc::string::String", align 8
  store i8 0, i8* %_25, align 1
  store i8 1, i8* %_25, align 1
; invoke core::slice::<impl [T]>::as_ptr
  %1 = invoke %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h33bc45f91f504c27E"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb10, %bb11
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
; invoke core::ptr::<impl *const T>::add
  %8 = invoke %"alloc::string::String"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd82359365f97e9b2E"(%"alloc::string::String"* %1, i64 %idx)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke core::slice::<impl [T]>::as_mut_ptr
  %9 = invoke %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h1fc3d89362852cbaE"([0 x %"alloc::string::String"]* nonnull align 8 %slice.0, i64 %slice.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_12 = add i64 %idx, 1
; invoke core::ptr::<impl *mut T>::add
  %10 = invoke %"alloc::string::String"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h10566c4c19fd26e7E"(%"alloc::string::String"* %9, i64 %_12)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke core::slice::<impl [T]>::len
  %11 = invoke i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2a3c878ec09fe90eE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_14 = sub i64 %11, %idx
; invoke core::intrinsics::copy
  invoke void @_ZN4core10intrinsics4copy17h71309211d53b7ea6E(%"alloc::string::String"* %8, %"alloc::string::String"* %10, i64 %_14)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke core::slice::<impl [T]>::get_unchecked_mut
  %_20 = invoke align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha48b2ffd00e931fdE"([0 x %"alloc::string::String"]* nonnull align 8 %slice.0, i64 %slice.1, i64 %idx)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_25, align 1
  %12 = bitcast %"alloc::string::String"* %_24 to i8*
  %13 = bitcast %"alloc::string::String"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hbfac23d297b9d7d3E(%"alloc::string::String"* %_20, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_24)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  ret void

bb10:                                             ; preds = %bb11
  store i8 0, i8* %_25, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %val) #14
  br label %bb1

bb11:                                             ; preds = %cleanup
  %14 = load i8, i8* %_25, align 1, !range !4
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb10, label %bb1

cleanup:                                          ; preds = %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %start
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb11
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h6236f15e140e8575E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_2 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_4 = load i64, i64* %4, align 8
  %_3 = add i64 %_4, 1
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h49edfedec144e7c4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_2, i64 %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17hf0d62333859a10efE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_2 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_4 = load i64, i64* %4, align 8
  %_3 = add i64 %_4, 1
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h69d306c7168be61bE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_2, i64 %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h54ee5debbca944b5E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hebcf91dd23d8d6d7E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ult i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [34 x i8] }>* @50 to [0 x i8]*), i64 34, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @51 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h604019c50cfab63cE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h823b7d2c45f08c97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ult i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [34 x i8] }>* @50 to [0 x i8]*), i64 34, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @51 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h68a2bee74f1ea0efE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h61f05b955e6cbc7dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ult i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [34 x i8] }>* @50 to [0 x i8]*), i64 34, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @51 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hb80e1b3bb2925dc5E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hd9e6e829918e6000E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ult i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [34 x i8] }>* @50 to [0 x i8]*), i64 34, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @51 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hce0850464f284c11E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ult i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [34 x i8] }>* @50 to [0 x i8]*), i64 34, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @51 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h49edfedec144e7c4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hd9e6e829918e6000E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ule i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [35 x i8] }>* @52 to [0 x i8]*), i64 35, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @53 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6788212853a7a5bcE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ule i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [35 x i8] }>* @52 to [0 x i8]*), i64 35, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @53 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h69d306c7168be61bE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hebcf91dd23d8d6d7E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ule i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [35 x i8] }>* @52 to [0 x i8]*), i64 35, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @53 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h7b995aea9b2e779aE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h61f05b955e6cbc7dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ule i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [35 x i8] }>* @52 to [0 x i8]*), i64 35, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @53 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hb52752a7b9e23577E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %node, i64 %idx) unnamed_addr #1 {
start:
  %_15 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %1 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h823b7d2c45f08c97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %node)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ule i64 %idx, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [35 x i8] }>* @52 to [0 x i8]*), i64 35, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @53 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_13 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %4 to i8*
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 5
  store i64 %idx, i64* %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17hb4ffb585ea9e7e24E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(40), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_7 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %1 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_3 = load i64, i64* %1, align 8
  %_5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %2 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hd9e6e829918e6000E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = icmp ult i64 %_3, %2
  br i1 %_2, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Err"* %5, i32 0, i32 1
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %6 to i8*
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 1, i64* %9, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_7 to i8*
  %12 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %13 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_8 = load i64, i64* %13, align 8
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hb80e1b3bb2925dc5E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %_6, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_7, i64 %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Ok"* %14, i32 0, i32 1
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %15 to i8*
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 32, i1 false)
  %18 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 0, i64* %18, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17hbca33383394bb7ebE"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(40), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_7 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %1 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_3 = load i64, i64* %1, align 8
  %_5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %2 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hebcf91dd23d8d6d7E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_2 = icmp ult i64 %_3, %2
  br i1 %_2, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*
  %4 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Err"* %5, i32 0, i32 1
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %6 to i8*
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 1, i64* %9, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_7 to i8*
  %12 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %13 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_8 = load i64, i64* %13, align 8
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h54ee5debbca944b5E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %_6, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_7, i64 %_8)
  br label %bb4

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Ok"* %14, i32 0, i32 1
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %15 to i8*
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 32, i1 false)
  %18 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 0, i64* %18, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,HandleType>::force
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node151Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$HandleType$GT$5force17hb097abac1ce6a8ceE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(40), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_14 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_12 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %node1 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_9 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_7 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %node = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>", align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_3 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17hae6e2193ee484661E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(32) %_2, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_2 to i64*
  %_4 = load i64, i64* %4, align 8, !range !1
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb4
  ]

bb2:                                              ; preds = %bb1
  unreachable

bb3:                                              ; preds = %bb1
  %5 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"*
  %6 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"* %5, i32 0, i32 1
  %7 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %node to i8*
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_7 to i8*
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_8 = load i64, i64* %11, align 8
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_6 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %12 to i8*
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_6, i32 0, i32 5
  store i64 %_8, i64* %15, align 8
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_6 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  %17 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"*
  %18 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"* %17, i32 0, i32 1
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %18 to i8*
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false)
  %21 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 0, i64* %21, align 8
  br label %bb5

bb4:                                              ; preds = %bb1
  %22 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"*
  %23 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"* %22, i32 0, i32 1
  %24 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %node1 to i8*
  %25 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false)
  %26 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_12 to i8*
  %27 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %node1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  %28 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_13 = load i64, i64* %28, align 8
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_11 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %30 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %29 to i8*
  %31 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false)
  %32 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_11, i32 0, i32 5
  store i64 %_13, i64* %32, align 8
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_11 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  %34 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"*
  %35 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"* %34, i32 0, i32 1
  %36 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %35 to i8*
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 32, i1 false)
  %38 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*
  store i64 1, i64* %38, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv_mut
; Function Attrs: uwtable
define internal { i64*, i64* } @"_ZN5alloc11collections5btree4node171Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$11into_kv_mut17h5284590c5e2dbce1E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_4 = alloca { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, align 8
  %0 = alloca { i64*, i64* }, align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_5 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_slices_mut
  call void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$15into_slices_mut17h38525288f7608a13E"({ [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(32) %_4, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %_4 to { [0 x %"alloc::string::String"]*, i64 }*
  %5 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  %keys.0 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %5, align 8, !nonnull !2
  %6 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  %keys.1 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %_4, i32 0, i32 3
  %8 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %7, i32 0, i32 0
  %vals.0 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %8, align 8, !nonnull !2
  %9 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %7, i32 0, i32 1
  %vals.1 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_9 = load i64, i64* %10, align 8
; call core::slice::<impl [T]>::get_unchecked_mut
  %_6 = call align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha48b2ffd00e931fdE"([0 x %"alloc::string::String"]* nonnull align 8 %keys.0, i64 %keys.1, i64 %_9)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_13 = load i64, i64* %11, align 8
; call core::slice::<impl [T]>::get_unchecked_mut
  %_10 = call align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h793f5eb521307fa8E"([0 x %"serde_json::value::Value"]* nonnull align 8 %vals.0, i64 %vals.1, i64 %_13)
  br label %bb3

bb3:                                              ; preds = %bb2
  %12 = bitcast { i64*, i64* }* %0 to %"alloc::string::String"**
  store %"alloc::string::String"* %_6, %"alloc::string::String"** %12, align 8
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %14 = bitcast i64** %13 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %_10, %"serde_json::value::Value"** %14, align 8
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8, !nonnull !2
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %18 = load i64*, i64** %17, align 8, !nonnull !2
  %19 = insertvalue { i64*, i64* } undef, i64* %16, 0
  %20 = insertvalue { i64*, i64* } %19, i64* %18, 1
  ret { i64*, i64* } %20
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::kv_mut
; Function Attrs: uwtable
define internal { i64*, i64* } @"_ZN5alloc11collections5btree4node171Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6kv_mut17h401ce1a4240bc35bE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* align 8 dereferenceable(32)) unnamed_addr #1 {
start:
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_4 = alloca { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, align 8
  %1 = alloca { i64*, i64* }, align 8
  %self = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, align 8
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"** %self, align 8, !nonnull !2
  %_6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %2 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  call void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17hb4f4d5dfe4291a0aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_5, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24) %_6)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_slices_mut
  call void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$15into_slices_mut17h7b90a2ff29611662E"({ [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(32) %_4, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %_4 to { [0 x %"alloc::string::String"]*, i64 }*
  %4 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %3, i32 0, i32 0
  %keys.0 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %4, align 8, !nonnull !2
  %5 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %3, i32 0, i32 1
  %keys.1 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %_4, i32 0, i32 3
  %7 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %6, i32 0, i32 0
  %vals.0 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %7, align 8, !nonnull !2
  %8 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %6, i32 0, i32 1
  %vals.1 = load i64, i64* %8, align 8
  %9 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"** %self, align 8, !nonnull !2
  %10 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %9, i32 0, i32 5
  %_10 = load i64, i64* %10, align 8
; call core::slice::<impl [T]>::get_unchecked_mut
  %_7 = call align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17ha48b2ffd00e931fdE"([0 x %"alloc::string::String"]* nonnull align 8 %keys.0, i64 %keys.1, i64 %_10)
  br label %bb3

bb3:                                              ; preds = %bb2
  %11 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"** %self, align 8, !nonnull !2
  %12 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %11, i32 0, i32 5
  %_14 = load i64, i64* %12, align 8
; call core::slice::<impl [T]>::get_unchecked_mut
  %_11 = call align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h793f5eb521307fa8E"([0 x %"serde_json::value::Value"]* nonnull align 8 %vals.0, i64 %vals.1, i64 %_14)
  br label %bb4

bb4:                                              ; preds = %bb3
  %13 = bitcast { i64*, i64* }* %1 to %"alloc::string::String"**
  store %"alloc::string::String"* %_7, %"alloc::string::String"** %13, align 8
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 1
  %15 = bitcast i64** %14 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %_11, %"serde_json::value::Value"** %15, align 8
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8, !nonnull !2
  %18 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %1, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8, !nonnull !2
  %20 = insertvalue { i64*, i64* } undef, i64* %17, 0
  %21 = insertvalue { i64*, i64* } %20, i64* %19, 1
  ret { i64*, i64* } %21
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv
; Function Attrs: uwtable
define internal { i64*, i64* } @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$7into_kv17h2c36ae452f108b3dE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_4 = alloca { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, align 8
  %0 = alloca { i64*, i64* }, align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_5 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_slices
  call void @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$11into_slices17h1c1b120cf34fc699E"({ [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(32) %_4, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %_4 to { [0 x %"alloc::string::String"]*, i64 }*
  %5 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  %keys.0 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %5, align 8, !nonnull !2
  %6 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  %keys.1 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %_4, i32 0, i32 3
  %8 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %7, i32 0, i32 0
  %vals.0 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %8, align 8, !nonnull !2
  %9 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %7, i32 0, i32 1
  %vals.1 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_9 = load i64, i64* %10, align 8
; call core::slice::<impl [T]>::get_unchecked
  %_6 = call align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hc3a2ad00430fca9fE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %keys.0, i64 %keys.1, i64 %_9)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_13 = load i64, i64* %11, align 8
; call core::slice::<impl [T]>::get_unchecked
  %_10 = call align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha12b7a73cd429512E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %vals.0, i64 %vals.1, i64 %_13)
  br label %bb3

bb3:                                              ; preds = %bb2
  %12 = bitcast { i64*, i64* }* %0 to %"alloc::string::String"**
  store %"alloc::string::String"* %_6, %"alloc::string::String"** %12, align 8
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %14 = bitcast i64** %13 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %_10, %"serde_json::value::Value"** %14, align 8
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8, !nonnull !2
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %18 = load i64*, i64** %17, align 8, !nonnull !2
  %19 = insertvalue { i64*, i64* } undef, i64* %16, 0
  %20 = insertvalue { i64*, i64* } %19, i64* %18, 1
  ret { i64*, i64* } %20
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::into_kv
; Function Attrs: uwtable
define internal { i64*, i64* } @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$7into_kv17ha7706366f2b45d63E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_4 = alloca { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, align 8
  %0 = alloca { i64*, i64* }, align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_5 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_slices
  call void @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$11into_slices17h91e947fa8d1c67a2E"({ [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(32) %_4, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %_4 to { [0 x %"alloc::string::String"]*, i64 }*
  %5 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  %keys.0 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %5, align 8, !nonnull !2
  %6 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  %keys.1 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %_4, i32 0, i32 3
  %8 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %7, i32 0, i32 0
  %vals.0 = load [0 x %"serde_json::value::Value"]*, [0 x %"serde_json::value::Value"]** %8, align 8, !nonnull !2
  %9 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %7, i32 0, i32 1
  %vals.1 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_9 = load i64, i64* %10, align 8
; call core::slice::<impl [T]>::get_unchecked
  %_6 = call align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hc3a2ad00430fca9fE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %keys.0, i64 %keys.1, i64 %_9)
  br label %bb2

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_13 = load i64, i64* %11, align 8
; call core::slice::<impl [T]>::get_unchecked
  %_10 = call align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha12b7a73cd429512E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %vals.0, i64 %vals.1, i64 %_13)
  br label %bb3

bb3:                                              ; preds = %bb2
  %12 = bitcast { i64*, i64* }* %0 to %"alloc::string::String"**
  store %"alloc::string::String"* %_6, %"alloc::string::String"** %12, align 8
  %13 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %14 = bitcast i64** %13 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %_10, %"serde_json::value::Value"** %14, align 8
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8, !nonnull !2
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1
  %18 = load i64*, i64** %17, align 8, !nonnull !2
  %19 = insertvalue { i64*, i64* } undef, i64* %16, 0
  %20 = insertvalue { i64*, i64* } %19, i64* %18, 1
  ret { i64*, i64* } %20
}

; alloc::collections::btree::node::Root<K,V>::push_level
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$10push_level17h6ef640b53432c95bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24), { i64*, i64 }* align 8 dereferenceable(16)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %self.i.i.i = alloca i64**, align 8
  %self.i.i = alloca i8**, align 8
  %2 = alloca i64*, align 8
  %self.i = alloca i8**, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_36 = alloca i8, align 1
  %_34 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_33 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_31 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>", align 1
  %ret = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_12 = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", align 8
  %new_node = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %self = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %1, { i64*, i64 }** %self, align 8
  store i8 0, i8* %_36, align 1
  br i1 false, label %bb2, label %bb6

bb1:                                              ; preds = %bb18, %bb19
  %4 = bitcast { i8*, i32 }* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb2:                                              ; preds = %start
  %_6 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
; call alloc::collections::btree::node::Root<K,V>::is_shared_root
  %10 = call zeroext i1 @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$14is_shared_root17h8331c92e124a38c1E"({ i64*, i64 }* noalias readonly align 8 dereferenceable(16) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %10, true
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  br label %bb6

bb5:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @43 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @54 to %"core::panic::Location"*))
  unreachable

bb6:                                              ; preds = %bb4, %start
; call alloc::collections::btree::node::InternalNode<K,V>::new
  call void @"_ZN5alloc11collections5btree4node25InternalNode$LT$K$C$V$GT$3new17hb935534e56156294E"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(728) %_12)
  br label %bb7

bb7:                                              ; preds = %bb6
  store i8 1, i8* %_36, align 1
; call alloc::alloc::exchange_malloc
  %11 = call i8* @_ZN5alloc5alloc15exchange_malloc17h1e4f418ec741a5cbE(i64 728, i64 8), !noalias !90
  %_2.i = bitcast i8* %11 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*
  %12 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 728, i1 false)
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_2.i, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb8
  %13 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
  %14 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %13, i32 0, i32 3
  %_14 = getelementptr inbounds [12 x i8*], [12 x i8*]* %14, i64 0, i64 0
  %15 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %_20 = bitcast { i64*, i64 }* %15 to i64**
; invoke alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
  %16 = invoke nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17he309e7e3d77e6f7cE"(i64** noalias readonly align 8 dereferenceable(8) %_20)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
; invoke alloc::collections::btree::node::BoxedNode<K,V>::from_ptr
  %17 = invoke nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$8from_ptr17hf34edb81524c558aE"(i64* nonnull %16)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  store i8** %_14, i8*** %self.i, align 8
  store i64* %17, i64** %2, align 8
  %18 = load i64*, i64** %2, align 8, !nonnull !2
  %19 = load i8**, i8*** %self.i, align 8, !nonnull !2
  %20 = bitcast i8** %19 to i64**
  store i64* %18, i64** %20, align 8
  %_8.i = load i8**, i8*** %self.i, align 8, !nonnull !2
  store i8** %_8.i, i8*** %self.i.i, align 8
  %21 = load i8**, i8*** %self.i.i, align 8, !nonnull !2
  %_5.i.i = bitcast i8** %21 to i64**
  store i64** %_5.i.i, i64*** %self.i.i.i, align 8
  %_3.i.i.i = load i64**, i64*** %self.i.i.i, align 8, !nonnull !2
  br label %bb12

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_36, align 1
  %_22 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
; invoke alloc::collections::btree::node::BoxedNode<K,V>::from_internal
  %22 = invoke nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$13from_internal17hb43332087f20909fE"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %_22)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  %23 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %24 = bitcast { i64*, i64 }* %23 to i64**
  store i64* %22, i64** %24, align 8
  %25 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %26 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %25, i32 0, i32 1
  %27 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %28 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %27, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %26, align 8
  %31 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %31, i32 0, i32 1
  %_24 = load i64, i64* %32, align 8
  %33 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %_26 = bitcast { i64*, i64 }* %33 to i64**
; invoke alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
  %34 = invoke nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17he309e7e3d77e6f7cE"(i64** noalias readonly align 8 dereferenceable(8) %_26)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %_30 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %35 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %ret to i64*
  store i64 %_24, i64* %35, align 8
  %36 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %ret, i32 0, i32 5
  store i64* %34, i64** %36, align 8
  %37 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %ret, i32 0, i32 7
  store { i64*, i64 }* %_30, { i64*, i64 }** %37, align 8
  %38 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %ret to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>"*
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  invoke void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17h840a6b34bdcec63aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_34, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %ret)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  invoke void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h5e63645cc88577d1E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_33, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_34)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::correct_parent_link
  invoke void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$19correct_parent_link17hc6170593cc6327efE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_33)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  %39 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to i8*
  %40 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %ret to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false)
  store i8 0, i8* %_36, align 1
  ret void

bb18:                                             ; preds = %bb19
  store i8 0, i8* %_36, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h0ac5538f70fbdd71E(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** align 8 dereferenceable(8) %new_node) #14
  br label %bb1

bb19:                                             ; preds = %cleanup
  %41 = load i8, i8* %_36, align 1, !range !4
  %42 = trunc i8 %41 to i1
  br i1 %42, label %bb18, label %bb1

cleanup:                                          ; preds = %bb16, %bb15, %bb14, %bb13, %bb12, %bb10, %bb9
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  %45 = extractvalue { i8*, i32 } %43, 1
  %46 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %45, i32* %47, align 8
  br label %bb19
}

; alloc::collections::btree::node::Root<K,V>::is_shared_root
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$14is_shared_root17h8331c92e124a38c1E"({ i64*, i64 }* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
; call alloc::collections::btree::node::Root<K,V>::as_ref
  call void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$6as_ref17h51d2e713d5d33313E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_3, { i64*, i64 }* noalias readonly align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h0ef155c3678bd6a8E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; alloc::collections::btree::node::Root<K,V>::shared_empty_root
; Function Attrs: uwtable
define internal { i64*, i64 } @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$17shared_empty_root17hcd9bc443edbe8ebfE"() unnamed_addr #1 {
start:
  %0 = alloca { i64*, i64 }, align 8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hac6f653e8a5f70e3E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* bitcast (%"alloc::collections::btree::node::NodeHeader<(), (), ()>"* @_ZN5alloc11collections5btree4node15EMPTY_ROOT_NODE17h6eb12c3df8cca51dE to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*))
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::BoxedNode<K,V>::from_ptr
  %2 = call nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$8from_ptr17hf34edb81524c558aE"(i64* nonnull %1)
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64*, i64 }* %0 to i64**
  store i64* %2, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8, !nonnull !2
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = insertvalue { i64*, i64 } undef, i64* %6, 0
  %10 = insertvalue { i64*, i64 } %9, i64 %8, 1
  ret { i64*, i64 } %10
}

; alloc::collections::btree::node::Root<K,V>::as_mut
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$6as_mut17h07a4250769d37a23E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24), { i64*, i64 }* align 8 dereferenceable(16)) unnamed_addr #1 {
start:
  %_9 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::LeafOrInternal)>", align 1
  %self = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %1, { i64*, i64 }** %self, align 8
  %2 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  %_2 = load i64, i64* %3, align 8
  %4 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %_4 = bitcast { i64*, i64 }* %4 to i64**
; call alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
  %5 = call nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17he309e7e3d77e6f7cE"(i64** noalias readonly align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %_8 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to i64*
  store i64 %_2, i64* %6, align 8
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 5
  store i64* %5, i64** %7, align 8
  %8 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_8, { i64*, i64 }** %8, align 8
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  ret void
}

; alloc::collections::btree::node::Root<K,V>::as_ref
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$6as_ref17h51d2e713d5d33313E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24), { i64*, i64 }* noalias readonly align 8 dereferenceable(16)) unnamed_addr #1 {
start:
  %_11 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>", align 1
  %self = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %1, { i64*, i64 }** %self, align 8
  %2 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1
  %_2 = load i64, i64* %3, align 8
  %4 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %_4 = bitcast { i64*, i64 }* %4 to i64**
; call alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
  %5 = call nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17he309e7e3d77e6f7cE"(i64** noalias readonly align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %_10 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %6 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to i64*
  store i64 %_2, i64* %6, align 8
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 5
  store i64* %5, i64** %7, align 8
  %8 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_10, { i64*, i64 }** %8, align 8
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  ret void
}

; alloc::collections::btree::node::Root<K,V>::into_ref
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$8into_ref17hf046e6d089050f06E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24), i64* nonnull, i64) unnamed_addr #1 {
start:
  %_7 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>", align 1
  %self = alloca { i64*, i64 }, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 0
  store i64* %1, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %5, align 8
  %_4 = bitcast { i64*, i64 }* %self to i64**
; call alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
  %6 = call nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17he309e7e3d77e6f7cE"(i64** noalias readonly align 8 dereferenceable(8) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to i64*
  store i64 %_2, i64* %7, align 8
  %8 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 5
  store i64* %6, i64** %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 7
  store { i64*, i64 }* null, { i64*, i64 }** %9, align 8
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  ret void
}

; alloc::collections::btree::node::Root<K,V>::new_leaf
; Function Attrs: uwtable
define internal { i64*, i64 } @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$8new_leaf17h7dc603f4797f03f6E"() unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", align 8
  %0 = alloca { i64*, i64 }, align 8
; call alloc::collections::btree::node::LeafNode<K,V>::new
  call void @"_ZN5alloc11collections5btree4node21LeafNode$LT$K$C$V$GT$3new17h89ec8474ce0766fdE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(632) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::alloc::exchange_malloc
  %1 = call i8* @_ZN5alloc5alloc15exchange_malloc17h1e4f418ec741a5cbE(i64 632, i64 8), !noalias !93
  %_2.i = bitcast i8* %1 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
  %2 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 632, i1 false)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::collections::btree::node::BoxedNode<K,V>::from_leaf
  %3 = call nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$9from_leaf17h720a60a20f64ae0cE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(632) %_2.i)
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = bitcast { i64*, i64 }* %0 to i64**
  store i64* %3, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !nonnull !2
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64*, i64 } undef, i64* %7, 0
  %11 = insertvalue { i64*, i64 } %10, i64 %9, 1
  ret { i64*, i64 } %11
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h01cca967b8c82336E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %self.i.i = alloca i64**, align 8
  %self.i = alloca i8**, align 8
  %_16 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>", align 1
  %_12 = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1 to i64*
  %_3 = load i64, i64* %2, align 8
  %_2 = sub i64 %_3, 1
  %_13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal
  %3 = call align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11as_internal17h9d799b74e6467bd6E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_13)
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %3, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_12, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_12, align 8, !nonnull !2
  %_11 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %4, i32 0, i32 3
  %_10.0 = bitcast [12 x i8*]* %_11 to [0 x i8*]*
  %5 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_14 = load i64, i64* %5, align 8
; call core::slice::<impl [T]>::get_unchecked
  %_8 = call align 8 dereferenceable(8) i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h21dca82904f67733E"([0 x i8*]* noalias nonnull readonly align 8 %_10.0, i64 12, i64 %_14)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8** %_8, i8*** %self.i, align 8, !noalias !96
  %6 = load i8**, i8*** %self.i, align 8, !noalias !96, !nonnull !2
  %_5.i = bitcast i8** %6 to i64**
  store i64** %_5.i, i64*** %self.i.i, align 8, !noalias !99
  %_2.i.i = load i64**, i64*** %self.i.i, align 8, !noalias !99, !nonnull !2
  br label %bb3

bb3:                                              ; preds = %bb2
; call alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
  %7 = call nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17he309e7e3d77e6f7cE"(i64** noalias readonly align 8 dereferenceable(8) %_2.i.i)
  br label %bb4

bb4:                                              ; preds = %bb3
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %8, i32 0, i32 7
  %_15 = load { i64*, i64 }*, { i64*, i64 }** %9, align 8
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to i64*
  store i64 %_2, i64* %10, align 8
  %11 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 5
  store i64* %7, i64** %11, align 8
  %12 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_15, { i64*, i64 }** %12, align 8
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h437ba6869a967d83E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %self.i.i = alloca i64**, align 8
  %self.i = alloca i8**, align 8
  %_16 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::LeafOrInternal)>", align 1
  %_12 = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1 to i64*
  %_3 = load i64, i64* %2, align 8
  %_2 = sub i64 %_3, 1
  %_13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal
  %3 = call align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11as_internal17hfcc8c56f86cd89cdE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_13)
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %3, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_12, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %4 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_12, align 8, !nonnull !2
  %_11 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %4, i32 0, i32 3
  %_10.0 = bitcast [12 x i8*]* %_11 to [0 x i8*]*
  %5 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_14 = load i64, i64* %5, align 8
; call core::slice::<impl [T]>::get_unchecked
  %_8 = call align 8 dereferenceable(8) i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h21dca82904f67733E"([0 x i8*]* noalias nonnull readonly align 8 %_10.0, i64 12, i64 %_14)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i8** %_8, i8*** %self.i, align 8, !noalias !102
  %6 = load i8**, i8*** %self.i, align 8, !noalias !102, !nonnull !2
  %_5.i = bitcast i8** %6 to i64**
  store i64** %_5.i, i64*** %self.i.i, align 8, !noalias !105
  %_2.i.i = load i64**, i64*** %self.i.i, align 8, !noalias !105, !nonnull !2
  br label %bb3

bb3:                                              ; preds = %bb2
; call alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
  %7 = call nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17he309e7e3d77e6f7cE"(i64** noalias readonly align 8 dereferenceable(8) %_2.i.i)
  br label %bb4

bb4:                                              ; preds = %bb3
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %8, i32 0, i32 7
  %_15 = load { i64*, i64 }*, { i64*, i64 }** %9, align 8
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to i64*
  store i64 %_2, i64* %10, align 8
  %11 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 5
  store i64* %7, i64** %11, align 8
  %12 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_15, { i64*, i64 }** %12, align 8
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node208Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..KV$GT$5split17h66efbd25b59d6472E"({ [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(96), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_72 = alloca i8, align 1
  %_71 = alloca i8, align 1
  %_70 = alloca i8, align 1
  %_67 = alloca { i64*, i64 }, align 8
  %_66 = alloca %"serde_json::value::Value", align 8
  %_65 = alloca %"alloc::string::String", align 8
  %_64 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_61 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %v = alloca %"serde_json::value::Value", align 8
  %k = alloca %"alloc::string::String", align 8
  %_12 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", align 8
  %new_node = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  store i8 0, i8* %_71, align 1
  store i8 0, i8* %_72, align 1
  store i8 0, i8* %_70, align 1
  br i1 false, label %bb2, label %bb6

bb1:                                              ; preds = %bb30, %bb31
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %_6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %8 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17hc5ab78cd049fa864E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %8, true
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  br label %bb6

bb5:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [45 x i8] }>* @55 to [0 x i8]*), i64 45, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @56 to %"core::panic::Location"*))
  unreachable

bb6:                                              ; preds = %bb4, %start
; call alloc::collections::btree::node::LeafNode<K,V>::new
  call void @"_ZN5alloc11collections5btree4node21LeafNode$LT$K$C$V$GT$3new17h89ec8474ce0766fdE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(632) %_12)
  br label %bb7

bb7:                                              ; preds = %bb6
  store i8 1, i8* %_70, align 1
; call alloc::alloc::exchange_malloc
  %9 = call i8* @_ZN5alloc5alloc15exchange_malloc17h1e4f418ec741a5cbE(i64 632, i64 8), !noalias !108
  %_2.i = bitcast i8* %9 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
  %10 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 632, i1 false)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_2.i, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8
  br label %bb8

bb8:                                              ; preds = %bb7
  %_19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::keys
  %11 = invoke { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4keys17h6947d5eec8b12321E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_19)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %_17.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %11, 0
  %_17.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %11, 1
  %12 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_20 = load i64, i64* %12, align 8
; invoke core::slice::<impl [T]>::get_unchecked
  %_15 = invoke align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hc3a2ad00430fca9fE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %_17.0, i64 %_17.1, i64 %_20)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h8d34a8e0c038c5faE(%"alloc::string::String"* noalias nocapture sret dereferenceable(24) %k, %"alloc::string::String"* %_15)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  store i8 1, i8* %_71, align 1
  %_27 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::vals
  %13 = invoke { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4vals17h63d17f5ef6b91b05E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_27)
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  %_25.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %13, 0
  %_25.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %13, 1
  %14 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_28 = load i64, i64* %14, align 8
; invoke core::slice::<impl [T]>::get_unchecked
  %_23 = invoke align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha12b7a73cd429512E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %_25.0, i64 %_25.1, i64 %_28)
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h0429cf43aa8c9b66E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %v, %"serde_json::value::Value"* %_23)
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  store i8 1, i8* %_72, align 1
  %_32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %15 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h823b7d2c45f08c97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_32)
          to label %bb15 unwind label %cleanup2

bb15:                                             ; preds = %bb14
  %16 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_33 = load i64, i64* %16, align 8
  %_30 = sub i64 %15, %_33
  %new_len = sub i64 %_30, 1
  %_39 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::keys
  %17 = invoke { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4keys17h6947d5eec8b12321E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_39)
          to label %bb16 unwind label %cleanup2

bb16:                                             ; preds = %bb15
  %_37.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %17, 0
  %_37.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %17, 1
; invoke core::slice::<impl [T]>::as_ptr
  %18 = invoke %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h33bc45f91f504c27E"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %_37.0, i64 %_37.1)
          to label %bb17 unwind label %cleanup2

bb17:                                             ; preds = %bb16
  %19 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_41 = load i64, i64* %19, align 8
  %_40 = add i64 %_41, 1
; invoke core::ptr::<impl *const T>::add
  %20 = invoke %"alloc::string::String"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd82359365f97e9b2E"(%"alloc::string::String"* %18, i64 %_40)
          to label %bb18 unwind label %cleanup2

bb18:                                             ; preds = %bb17
  %21 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
  %_45 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %21, i32 0, i32 7
  %_44.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_45 to [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]*
; invoke core::slice::<impl [T]>::as_mut_ptr
  %22 = invoke %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h4775dfefced5b2d2E"([0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* nonnull align 8 %_44.0, i64 11)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
  %_42 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %22 to %"alloc::string::String"*
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17hc6d747709a791745E(%"alloc::string::String"* %20, %"alloc::string::String"* %_42, i64 %new_len)
          to label %bb20 unwind label %cleanup2

bb20:                                             ; preds = %bb19
  %_52 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::vals
  %23 = invoke { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4vals17h63d17f5ef6b91b05E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_52)
          to label %bb21 unwind label %cleanup2

bb21:                                             ; preds = %bb20
  %_50.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %23, 0
  %_50.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %23, 1
; invoke core::slice::<impl [T]>::as_ptr
  %24 = invoke %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc14e7bc708c0d1d8E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %_50.0, i64 %_50.1)
          to label %bb22 unwind label %cleanup2

bb22:                                             ; preds = %bb21
  %25 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_54 = load i64, i64* %25, align 8
  %_53 = add i64 %_54, 1
; invoke core::ptr::<impl *const T>::add
  %26 = invoke %"serde_json::value::Value"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h664c60febf91f948E"(%"serde_json::value::Value"* %24, i64 %_53)
          to label %bb23 unwind label %cleanup2

bb23:                                             ; preds = %bb22
  %27 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
  %_58 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %27, i32 0, i32 9
  %_57.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_58 to [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]*
; invoke core::slice::<impl [T]>::as_mut_ptr
  %28 = invoke %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h5ffcd5ee44c2218aE"([0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* nonnull align 8 %_57.0, i64 11)
          to label %bb24 unwind label %cleanup2

bb24:                                             ; preds = %bb23
  %_55 = bitcast %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %28 to %"serde_json::value::Value"*
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17hddb4b2d55463b6dfE(%"serde_json::value::Value"* %26, %"serde_json::value::Value"* %_55, i64 %new_len)
          to label %bb25 unwind label %cleanup2

bb25:                                             ; preds = %bb24
  %29 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_60 = load i64, i64* %29, align 8
  %_62 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %30 = invoke %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5dd015efe4c410d0E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %_62)
          to label %bb26 unwind label %cleanup2

bb26:                                             ; preds = %bb25
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %30, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_61, align 8
  %31 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_61, align 8
  %32 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %31, i32 0, i32 5
  %33 = trunc i64 %_60 to i16
  store i16 %33, i16* %32, align 2
  %34 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
  %35 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %34, i32 0, i32 5
  %36 = trunc i64 %new_len to i16
  store i16 %36, i16* %35, align 2
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %38 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_64 to i8*
  %39 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false)
  store i8 0, i8* %_71, align 1
  %40 = bitcast %"alloc::string::String"* %_65 to i8*
  %41 = bitcast %"alloc::string::String"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false)
  store i8 0, i8* %_72, align 1
  %42 = bitcast %"serde_json::value::Value"* %_66 to i8*
  %43 = bitcast %"serde_json::value::Value"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false)
  store i8 0, i8* %_70, align 1
  %_69 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
; invoke alloc::collections::btree::node::BoxedNode<K,V>::from_leaf
  %44 = invoke nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$9from_leaf17h720a60a20f64ae0cE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(632) %_69)
          to label %bb27 unwind label %cleanup3

bb27:                                             ; preds = %bb26
  %45 = bitcast { i64*, i64 }* %_67 to i64**
  store i64* %44, i64** %45, align 8
  %46 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_67, i32 0, i32 1
  store i64 0, i64* %46, align 8
  %47 = bitcast { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %48 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %47 to i8*
  %49 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false)
  %50 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %0, i32 0, i32 3
  %51 = bitcast %"alloc::string::String"* %50 to i8*
  %52 = bitcast %"alloc::string::String"* %_65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false)
  %53 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %0, i32 0, i32 5
  %54 = bitcast %"serde_json::value::Value"* %53 to i8*
  %55 = bitcast %"serde_json::value::Value"* %_66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 32, i1 false)
  %56 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %0, i32 0, i32 7
  %57 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_67, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8, !nonnull !2
  %59 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_67, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %56, i32 0, i32 0
  store i64* %58, i64** %61, align 8
  %62 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %56, i32 0, i32 1
  store i64 %60, i64* %62, align 8
  store i8 0, i8* %_72, align 1
  store i8 0, i8* %_71, align 1
  store i8 0, i8* %_70, align 1
  ret void

bb28:                                             ; preds = %bb29
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %_65) #14
  br label %bb35

bb29:                                             ; preds = %cleanup3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %_66) #14
  br label %bb28

bb30:                                             ; preds = %bb31
  store i8 0, i8* %_70, align 1
  %63 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %new_node to i64**
  %64 = load i64*, i64** %63, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h54c22ee91bc765abE(i64* nonnull %64) #14
  br label %bb1

bb31:                                             ; preds = %bb32, %bb33, %cleanup
  %65 = load i8, i8* %_70, align 1, !range !4
  %66 = trunc i8 %65 to i1
  br i1 %66, label %bb30, label %bb1

bb32:                                             ; preds = %bb33
  store i8 0, i8* %_71, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %k) #14
  br label %bb31

bb33:                                             ; preds = %bb34, %bb35, %cleanup1
  %67 = load i8, i8* %_71, align 1, !range !4
  %68 = trunc i8 %67 to i1
  br i1 %68, label %bb32, label %bb31

bb34:                                             ; preds = %bb35
  store i8 0, i8* %_72, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %v) #14
  br label %bb33

bb35:                                             ; preds = %bb28, %cleanup2
  %69 = load i8, i8* %_72, align 1, !range !4
  %70 = trunc i8 %69 to i1
  br i1 %70, label %bb34, label %bb33

cleanup:                                          ; preds = %bb10, %bb9, %bb8
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  %73 = extractvalue { i8*, i32 } %71, 1
  %74 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %72, i8** %74, align 8
  %75 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %73, i32* %75, align 8
  br label %bb31

cleanup1:                                         ; preds = %bb13, %bb12, %bb11
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  %78 = extractvalue { i8*, i32 } %76, 1
  %79 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %77, i8** %79, align 8
  %80 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %78, i32* %80, align 8
  br label %bb33

cleanup2:                                         ; preds = %bb25, %bb24, %bb23, %bb22, %bb21, %bb20, %bb19, %bb18, %bb17, %bb16, %bb15, %bb14
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  %83 = extractvalue { i8*, i32 } %81, 1
  %84 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %82, i8** %84, align 8
  %85 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %83, i32* %85, align 8
  br label %bb35

cleanup3:                                         ; preds = %bb26
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  %88 = extractvalue { i8*, i32 } %86, 1
  %89 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %87, i8** %89, align 8
  %90 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %88, i32* %90, align 8
  br label %bb29
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_fit
; Function Attrs: uwtable
define internal %"serde_json::value::Value"* @"_ZN5alloc11collections5btree4node210Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$10insert_fit17hc85156301d216eabE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32), %"alloc::string::String"* noalias nocapture dereferenceable(24) %key, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_43 = alloca i8, align 1
  %_42 = alloca i8, align 1
  %_34 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %_33 = alloca %"serde_json::value::Value", align 8
  %_27 = alloca %"alloc::string::String", align 8
  %self = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8
  store i8 0, i8* %_42, align 1
  store i8 0, i8* %_43, align 1
  store i8 1, i8* %_42, align 1
  store i8 1, i8* %_43, align 1
  br i1 false, label %bb2, label %bb7

bb1:                                              ; preds = %bb20, %bb4
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %8 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %9 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h823b7d2c45f08c97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_8)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_6 = icmp ult i64 %9, 11
  %_5 = xor i1 %_6, true
  br i1 %_5, label %bb6, label %bb5

bb4:                                              ; preds = %bb21, %bb22
  %10 = load i8, i8* %_42, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb20, label %bb1

bb5:                                              ; preds = %bb3
  br label %bb7

bb6:                                              ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @57 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @58 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb5, %start
  br i1 false, label %bb8, label %bb12

bb8:                                              ; preds = %bb7
  %12 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %12 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %13 = invoke zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17hc5ab78cd049fa864E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_17)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %_15 = xor i1 %13, true
  %_14 = xor i1 %_15, true
  br i1 %_14, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  br label %bb12

bb11:                                             ; preds = %bb9
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [45 x i8] }>* @55 to [0 x i8]*), i64 45, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @59 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup

bb12:                                             ; preds = %bb10, %bb7
  %14 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %14 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::keys_mut
  %15 = invoke { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$8keys_mut17h26b3b0fe33edae85E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %_25)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  %_23.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %15, 0
  %_23.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %15, 1
  %16 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %17 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %16, i32 0, i32 5
  %_26 = load i64, i64* %17, align 8
  store i8 0, i8* %_42, align 1
  %18 = bitcast %"alloc::string::String"* %_27 to i8*
  %19 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false)
; invoke alloc::collections::btree::node::slice_insert
  invoke void @_ZN5alloc11collections5btree4node12slice_insert17hb6fc06b08c7a4e97E([0 x %"alloc::string::String"]* nonnull align 8 %_23.0, i64 %_23.1, i64 %_26, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_27)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  %20 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_31 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %20 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::vals_mut
  %21 = invoke { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$8vals_mut17h89695f529b1e7462E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %_31)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %_29.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %21, 0
  %_29.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %21, 1
  %22 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %23 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %22, i32 0, i32 5
  %_32 = load i64, i64* %23, align 8
  store i8 0, i8* %_43, align 1
  %24 = bitcast %"serde_json::value::Value"* %_33 to i8*
  %25 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
; invoke alloc::collections::btree::node::slice_insert
  invoke void @_ZN5alloc11collections5btree4node12slice_insert17h520aaf54ea89625dE([0 x %"serde_json::value::Value"]* nonnull align 8 %_29.0, i64 %_29.1, i64 %_32, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_33)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  %26 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %26 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %27 = invoke %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5dd015efe4c410d0E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %_35)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %27, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_34, align 8
  %28 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_34, align 8
  %29 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %28, i32 0, i32 5
  %30 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_34, align 8
  %31 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %30, i32 0, i32 5
  %32 = load i16, i16* %31, align 2
  %33 = add i16 %32, 1
  store i16 %33, i16* %29, align 2
  %34 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_40 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %34 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::vals_mut
  %35 = invoke { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$8vals_mut17h89695f529b1e7462E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %_40)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
  %_38.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %35, 0
  %_38.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %35, 1
  %36 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %37 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %36, i32 0, i32 5
  %_41 = load i64, i64* %37, align 8
; invoke core::slice::<impl [T]>::get_unchecked_mut
  %_36 = invoke align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h793f5eb521307fa8E"([0 x %"serde_json::value::Value"]* nonnull align 8 %_38.0, i64 %_38.1, i64 %_41)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  ret %"serde_json::value::Value"* %_36

bb20:                                             ; preds = %bb4
  store i8 0, i8* %_42, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %key) #14
  br label %bb1

bb21:                                             ; preds = %bb22
  store i8 0, i8* %_43, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %val) #14
  br label %bb4

bb22:                                             ; preds = %cleanup
  %38 = load i8, i8* %_43, align 1, !range !4
  %39 = trunc i8 %38 to i1
  br i1 %39, label %bb21, label %bb4

cleanup:                                          ; preds = %bb18, %bb17, %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %bb8, %bb6, %bb2
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb22

unreachable:                                      ; preds = %bb11, %bb6
  unreachable
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node210Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$6insert17h859121e1b3134ee1E"({ [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* noalias nocapture sret dereferenceable(112), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self, %"alloc::string::String"* noalias nocapture dereferenceable(24) %key, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %val) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_52 = alloca i8, align 1
  %_51 = alloca i8, align 1
  %_48 = alloca %"serde_json::value::Value", align 8
  %_47 = alloca %"alloc::string::String", align 8
  %_46 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_45 = alloca %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_44 = alloca %"serde_json::value::Value", align 8
  %_43 = alloca %"alloc::string::String", align 8
  %_38 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_36 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_35 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_33 = alloca %"serde_json::value::Value", align 8
  %_32 = alloca %"alloc::string::String", align 8
  %_29 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_28 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %ptr = alloca %"serde_json::value::Value"*, align 8
  %_23 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_22 = alloca { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, align 8
  %right = alloca { i64*, i64 }, align 8
  %v = alloca %"serde_json::value::Value", align 8
  %k = alloca %"alloc::string::String", align 8
  %left = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_17 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %middle = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_11 = alloca %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_10 = alloca %"serde_json::value::Value", align 8
  %_9 = alloca %"alloc::string::String", align 8
  store i8 0, i8* %_51, align 1
  store i8 0, i8* %_52, align 1
  store i8 1, i8* %_51, align 1
  store i8 1, i8* %_52, align 1
  %_6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %2 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h823b7d2c45f08c97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %_6)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb23, %bb3
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  %_4 = icmp ult i64 %2, 11
  br i1 %_4, label %bb5, label %bb4

bb3:                                              ; preds = %bb24, %bb25
  %9 = load i8, i8* %_51, align 1, !range !4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb23, label %bb1

bb4:                                              ; preds = %bb2
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %12 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_17 to i8*
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  invoke void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h604019c50cfab63cE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %middle, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_17, i64 6)
          to label %bb8 unwind label %cleanup

bb5:                                              ; preds = %bb2
  store i8 0, i8* %_51, align 1
  %14 = bitcast %"alloc::string::String"* %_9 to i8*
  %15 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
  store i8 0, i8* %_52, align 1
  %16 = bitcast %"serde_json::value::Value"* %_10 to i8*
  %17 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_fit
  %_15 = invoke %"serde_json::value::Value"* @"_ZN5alloc11collections5btree4node210Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$10insert_fit17hc85156301d216eabE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32) %self, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_9, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_10)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %19 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_13 to i8*
  %20 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
  %21 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_14 = load i64, i64* %21, align 8
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  invoke void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h604019c50cfab63cE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %_12, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_13, i64 %_14)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %22 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_11 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Fit"*
  %23 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Fit", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Fit"* %22, i32 0, i32 1
  %24 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %23 to i8*
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
  %26 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_11 to i64*
  store i64 0, i64* %26, align 8
  %27 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %0 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %28 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %27 to i8*
  %29 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 104, i1 false)
  %30 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %0, i32 0, i32 3
  store %"serde_json::value::Value"* %_15, %"serde_json::value::Value"** %30, align 8
  br label %bb22

bb8:                                              ; preds = %bb4
  %31 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_23 to i8*
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %middle to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split
  invoke void @"_ZN5alloc11collections5btree4node208Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..KV$GT$5split17h66efbd25b59d6472E"({ [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(96) %_22, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %_23)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %33 = bitcast { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %_22 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %34 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %left to i8*
  %35 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false)
  %36 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %_22, i32 0, i32 3
  %37 = bitcast %"alloc::string::String"* %k to i8*
  %38 = bitcast %"alloc::string::String"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false)
  %39 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %_22, i32 0, i32 5
  %40 = bitcast %"serde_json::value::Value"* %v to i8*
  %41 = bitcast %"serde_json::value::Value"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false)
  %42 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %_22, i32 0, i32 7
  %43 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %42, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8, !nonnull !2
  %45 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %42, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %right, i32 0, i32 0
  store i64* %44, i64** %47, align 8
  %48 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %right, i32 0, i32 1
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_26 = load i64, i64* %49, align 8
  %_25 = icmp ule i64 %_26, 6
  br i1 %_25, label %bb13, label %bb12

bb10:                                             ; preds = %bb11
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %k) #14
  br label %bb25

bb11:                                             ; preds = %cleanup1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %v) #14
  br label %bb10

bb12:                                             ; preds = %bb9
; invoke alloc::collections::btree::node::Root<K,V>::as_mut
  invoke void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$6as_mut17h07a4250769d37a23E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_38, { i64*, i64 }* align 8 dereferenceable(16) %right)
          to label %bb17 unwind label %cleanup1

bb13:                                             ; preds = %bb9
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  invoke void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17hac8de1f99dd43816E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %_29, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %left)
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  %50 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_31 = load i64, i64* %50, align 8
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  invoke void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hb52752a7b9e23577E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_28, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_29, i64 %_31)
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_51, align 1
  %51 = bitcast %"alloc::string::String"* %_32 to i8*
  %52 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false)
  store i8 0, i8* %_52, align 1
  %53 = bitcast %"serde_json::value::Value"* %_33 to i8*
  %54 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_fit
  %55 = invoke %"serde_json::value::Value"* @"_ZN5alloc11collections5btree4node210Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$10insert_fit17hc85156301d216eabE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32) %_28, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_32, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_33)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
  store %"serde_json::value::Value"* %55, %"serde_json::value::Value"** %ptr, align 8
  br label %bb21

bb17:                                             ; preds = %bb12
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::cast_unchecked
  invoke void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$14cast_unchecked17h6147b7382bf63dccE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %_36, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24) %_38)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  %56 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_41 = load i64, i64* %56, align 8
  %_40 = sub i64 %_41, 7
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  invoke void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hb52752a7b9e23577E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_35, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_36, i64 %_40)
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
  store i8 0, i8* %_51, align 1
  %57 = bitcast %"alloc::string::String"* %_43 to i8*
  %58 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false)
  store i8 0, i8* %_52, align 1
  %59 = bitcast %"serde_json::value::Value"* %_44 to i8*
  %60 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_fit
  %61 = invoke %"serde_json::value::Value"* @"_ZN5alloc11collections5btree4node210Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$10insert_fit17hc85156301d216eabE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32) %_35, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_43, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_44)
          to label %bb20 unwind label %cleanup1

bb20:                                             ; preds = %bb19
  store %"serde_json::value::Value"* %61, %"serde_json::value::Value"** %ptr, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb16
  %62 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_46 to i8*
  %63 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %left to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false)
  %64 = bitcast %"alloc::string::String"* %_47 to i8*
  %65 = bitcast %"alloc::string::String"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false)
  %66 = bitcast %"serde_json::value::Value"* %_48 to i8*
  %67 = bitcast %"serde_json::value::Value"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 32, i1 false)
  %68 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %right, i32 0, i32 0
  %_49.0 = load i64*, i64** %68, align 8, !nonnull !2
  %69 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %right, i32 0, i32 1
  %_49.1 = load i64, i64* %69, align 8
  %70 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_45 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %71 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %70, i32 0, i32 1
  %72 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %71 to i8*
  %73 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false)
  %74 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_45 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %75 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %74, i32 0, i32 3
  %76 = bitcast %"alloc::string::String"* %75 to i8*
  %77 = bitcast %"alloc::string::String"* %_47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false)
  %78 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_45 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %79 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %78, i32 0, i32 5
  %80 = bitcast %"serde_json::value::Value"* %79 to i8*
  %81 = bitcast %"serde_json::value::Value"* %_48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 32, i1 false)
  %82 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_45 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"*
  %83 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>::Split"* %82, i32 0, i32 7
  %84 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %83, i32 0, i32 0
  store i64* %_49.0, i64** %84, align 8
  %85 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %83, i32 0, i32 1
  store i64 %_49.1, i64* %85, align 8
  %86 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_45 to i64*
  store i64 1, i64* %86, align 8
  %_50 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %ptr, align 8
  %87 = bitcast { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %0 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %88 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %87 to i8*
  %89 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 104, i1 false)
  %90 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", [0 x i64], %"serde_json::value::Value"*, [0 x i64] }* %0, i32 0, i32 3
  store %"serde_json::value::Value"* %_50, %"serde_json::value::Value"** %90, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb7
  ret void

bb23:                                             ; preds = %bb3
  store i8 0, i8* %_51, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %key) #14
  br label %bb1

bb24:                                             ; preds = %bb25
  store i8 0, i8* %_52, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %val) #14
  br label %bb3

bb25:                                             ; preds = %bb10, %cleanup
  %91 = load i8, i8* %_52, align 1, !range !4
  %92 = trunc i8 %91 to i1
  br i1 %92, label %bb24, label %bb3

cleanup:                                          ; preds = %bb8, %bb4, %bb6, %bb5, %start
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  %95 = extractvalue { i8*, i32 } %93, 1
  %96 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %94, i8** %96, align 8
  %97 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %95, i32* %97, align 8
  br label %bb25

cleanup1:                                         ; preds = %bb19, %bb18, %bb17, %bb12, %bb15, %bb14, %bb13
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  %100 = extractvalue { i8*, i32 } %98, 1
  %101 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %99, i8** %101, align 8
  %102 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %100, i32* %102, align 8
  br label %bb11
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node212Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..KV$GT$5split17had3d0b943d71e9a3E"({ [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(96), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_98 = alloca i8, align 1
  %_96 = alloca %"serde_json::value::Value", align 8
  %_95 = alloca %"alloc::string::String", align 8
  %_94 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_91 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_89 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_88 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_80 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_75 = alloca { i64, i64 }, align 8
  %new_root = alloca { i64*, i64 }, align 8
  %_67 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %_57 = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %v = alloca %"serde_json::value::Value", align 8
  %k = alloca %"alloc::string::String", align 8
  %_3 = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", align 8
  %new_node = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, align 8
  store i8 0, i8* %_98, align 1
; call alloc::collections::btree::node::InternalNode<K,V>::new
  call void @"_ZN5alloc11collections5btree4node25InternalNode$LT$K$C$V$GT$3new17hb935534e56156294E"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(728) %_3)
  br label %bb2

bb1:                                              ; preds = %bb40, %bb41
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  store i8 1, i8* %_98, align 1
; call alloc::alloc::exchange_malloc
  %8 = call i8* @_ZN5alloc5alloc15exchange_malloc17h1e4f418ec741a5cbE(i64 728, i64 8), !noalias !111
  %_2.i = bitcast i8* %8 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*
  %9 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 728, i1 false)
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_2.i, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::keys
  %10 = invoke { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4keys17hbd846af33abe5b69E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_10)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_8.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %10, 0
  %_8.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %10, 1
  %11 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_11 = load i64, i64* %11, align 8
; invoke core::slice::<impl [T]>::get_unchecked
  %_6 = invoke align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hc3a2ad00430fca9fE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %_8.0, i64 %_8.1, i64 %_11)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h8d34a8e0c038c5faE(%"alloc::string::String"* noalias nocapture sret dereferenceable(24) %k, %"alloc::string::String"* %_6)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::vals
  %12 = invoke { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4vals17h36777a052a0a8d95E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_18)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  %_16.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %12, 0
  %_16.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %12, 1
  %13 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_19 = load i64, i64* %13, align 8
; invoke core::slice::<impl [T]>::get_unchecked
  %_14 = invoke align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17ha12b7a73cd429512E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %_16.0, i64 %_16.1, i64 %_19)
          to label %bb9 unwind label %cleanup1

bb8:                                              ; preds = %bb12, %cleanup1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %k) #14
  br label %bb41

bb9:                                              ; preds = %bb7
; invoke core::ptr::read
  invoke void @_ZN4core3ptr4read17h0429cf43aa8c9b66E(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %v, %"serde_json::value::Value"* %_14)
          to label %bb10 unwind label %cleanup1

bb10:                                             ; preds = %bb9
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %15 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %14 to i64*
  %height = load i64, i64* %15, align 8
  %_24 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %16 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_24)
          to label %bb11 unwind label %cleanup2

bb11:                                             ; preds = %bb10
  %17 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_25 = load i64, i64* %17, align 8
  %_22 = sub i64 %16, %_25
  %new_len = sub i64 %_22, 1
  %_31 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::keys
  %18 = invoke { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4keys17hbd846af33abe5b69E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_31)
          to label %bb13 unwind label %cleanup2

bb12:                                             ; preds = %cleanup2
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %v) #14
  br label %bb8

bb13:                                             ; preds = %bb11
  %_29.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %18, 0
  %_29.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %18, 1
; invoke core::slice::<impl [T]>::as_ptr
  %19 = invoke %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h33bc45f91f504c27E"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %_29.0, i64 %_29.1)
          to label %bb14 unwind label %cleanup2

bb14:                                             ; preds = %bb13
  %20 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_33 = load i64, i64* %20, align 8
  %_32 = add i64 %_33, 1
; invoke core::ptr::<impl *const T>::add
  %21 = invoke %"alloc::string::String"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd82359365f97e9b2E"(%"alloc::string::String"* %19, i64 %_32)
          to label %bb15 unwind label %cleanup2

bb15:                                             ; preds = %bb14
  %22 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
  %23 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %22 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
  %_37 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %23, i32 0, i32 7
  %_36.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_37 to [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]*
; invoke core::slice::<impl [T]>::as_mut_ptr
  %24 = invoke %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h4775dfefced5b2d2E"([0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* nonnull align 8 %_36.0, i64 11)
          to label %bb16 unwind label %cleanup2

bb16:                                             ; preds = %bb15
  %_34 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %24 to %"alloc::string::String"*
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17hc6d747709a791745E(%"alloc::string::String"* %21, %"alloc::string::String"* %_34, i64 %new_len)
          to label %bb17 unwind label %cleanup2

bb17:                                             ; preds = %bb16
  %_44 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::vals
  %25 = invoke { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4vals17h36777a052a0a8d95E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_44)
          to label %bb18 unwind label %cleanup2

bb18:                                             ; preds = %bb17
  %_42.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %25, 0
  %_42.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %25, 1
; invoke core::slice::<impl [T]>::as_ptr
  %26 = invoke %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc14e7bc708c0d1d8E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %_42.0, i64 %_42.1)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb18
  %27 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_46 = load i64, i64* %27, align 8
  %_45 = add i64 %_46, 1
; invoke core::ptr::<impl *const T>::add
  %28 = invoke %"serde_json::value::Value"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h664c60febf91f948E"(%"serde_json::value::Value"* %26, i64 %_45)
          to label %bb20 unwind label %cleanup2

bb20:                                             ; preds = %bb19
  %29 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
  %30 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %29 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
  %_50 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %30, i32 0, i32 9
  %_49.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_50 to [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]*
; invoke core::slice::<impl [T]>::as_mut_ptr
  %31 = invoke %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h5ffcd5ee44c2218aE"([0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* nonnull align 8 %_49.0, i64 11)
          to label %bb21 unwind label %cleanup2

bb21:                                             ; preds = %bb20
  %_47 = bitcast %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %31 to %"serde_json::value::Value"*
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17hddb4b2d55463b6dfE(%"serde_json::value::Value"* %28, %"serde_json::value::Value"* %_47, i64 %new_len)
          to label %bb22 unwind label %cleanup2

bb22:                                             ; preds = %bb21
  %_58 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal
  %32 = invoke align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11as_internal17hfcc8c56f86cd89cdE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_58)
          to label %bb23 unwind label %cleanup2

bb23:                                             ; preds = %bb22
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %32, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_57, align 8
  %33 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_57, align 8, !nonnull !2
  %_56 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %33, i32 0, i32 3
  %_55.0 = bitcast [12 x i8*]* %_56 to [0 x i8*]*
; invoke core::slice::<impl [T]>::as_ptr
  %34 = invoke i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6ff6d7af6ed886fbE"([0 x i8*]* noalias nonnull readonly align 8 %_55.0, i64 12)
          to label %bb24 unwind label %cleanup2

bb24:                                             ; preds = %bb23
  %35 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_60 = load i64, i64* %35, align 8
  %_59 = add i64 %_60, 1
; invoke core::ptr::<impl *const T>::add
  %36 = invoke i8** @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h86c7da1fa93f3d1dE"(i8** %34, i64 %_59)
          to label %bb25 unwind label %cleanup2

bb25:                                             ; preds = %bb24
  %37 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
  %_63 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %37, i32 0, i32 3
  %_62.0 = bitcast [12 x i8*]* %_63 to [0 x i8*]*
; invoke core::slice::<impl [T]>::as_mut_ptr
  %38 = invoke i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9e3654d24d32d00eE"([0 x i8*]* nonnull align 8 %_62.0, i64 12)
          to label %bb26 unwind label %cleanup2

bb26:                                             ; preds = %bb25
  %_64 = add i64 %new_len, 1
; invoke core::intrinsics::copy_nonoverlapping
  invoke void @_ZN4core10intrinsics19copy_nonoverlapping17h8b40b3ed5c86d23eE(i8** %36, i8** %38, i64 %_64)
          to label %bb27 unwind label %cleanup2

bb27:                                             ; preds = %bb26
  %39 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 5
  %_66 = load i64, i64* %39, align 8
  %_68 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %40 = invoke %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5d208d521508e34cE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_68)
          to label %bb28 unwind label %cleanup2

bb28:                                             ; preds = %bb27
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %40, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_67, align 8
  %41 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_67, align 8
  %42 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %41, i32 0, i32 5
  %43 = trunc i64 %_66 to i16
  store i16 %43, i16* %42, align 2
  %44 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
  %45 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %44 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
  %46 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %45, i32 0, i32 5
  %47 = trunc i64 %new_len to i16
  store i16 %47, i16* %46, align 2
  store i8 0, i8* %_98, align 1
  %_72 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node, align 8, !nonnull !2
; invoke alloc::collections::btree::node::BoxedNode<K,V>::from_internal
  %48 = invoke nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$13from_internal17hb43332087f20909fE"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %_72)
          to label %bb29 unwind label %cleanup2

bb29:                                             ; preds = %bb28
  %49 = bitcast { i64*, i64 }* %new_root to i64**
  store i64* %48, i64** %49, align 8
  %50 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %new_root, i32 0, i32 1
  store i64 %height, i64* %50, align 8
  %_76 = add i64 %new_len, 1
  %51 = bitcast { i64, i64 }* %_75 to i64*
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_75, i32 0, i32 1
  store i64 %_76, i64* %52, align 8
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_75, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_75, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %57 = invoke { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb727a63b56af1897E"(i64 %54, i64 %56)
          to label %bb30 unwind label %cleanup2

bb30:                                             ; preds = %bb29
  %58 = extractvalue { i64, i64 } %57, 0
  %59 = extractvalue { i64, i64 } %57, 1
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %58, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %59, i64* %61, align 8
  br label %bb31

bb31:                                             ; preds = %bb39, %bb30
; invoke core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %62 = invoke { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he5daec5ffae6a45aE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
          to label %bb32 unwind label %cleanup2

bb32:                                             ; preds = %bb31
  store { i64, i64 } %62, { i64, i64 }* %_80, align 8
  %63 = bitcast { i64, i64 }* %_80 to i64*
  %_83 = load i64, i64* %63, align 8, !range !1
  switch i64 %_83, label %bb34 [
    i64 0, label %bb33
    i64 1, label %bb35
  ]

bb33:                                             ; preds = %bb32
  %64 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %65 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_94 to i8*
  %66 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false)
  %67 = bitcast %"alloc::string::String"* %_95 to i8*
  %68 = bitcast %"alloc::string::String"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false)
  %69 = bitcast %"serde_json::value::Value"* %_96 to i8*
  %70 = bitcast %"serde_json::value::Value"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 32, i1 false)
  %71 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %new_root, i32 0, i32 0
  %_97.0 = load i64*, i64** %71, align 8, !nonnull !2
  %72 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %new_root, i32 0, i32 1
  %_97.1 = load i64, i64* %72, align 8
  %73 = bitcast { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %0 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %74 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %73 to i8*
  %75 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false)
  %76 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %0, i32 0, i32 3
  %77 = bitcast %"alloc::string::String"* %76 to i8*
  %78 = bitcast %"alloc::string::String"* %_95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false)
  %79 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %0, i32 0, i32 5
  %80 = bitcast %"serde_json::value::Value"* %79 to i8*
  %81 = bitcast %"serde_json::value::Value"* %_96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 32, i1 false)
  %82 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %0, i32 0, i32 7
  %83 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %82, i32 0, i32 0
  store i64* %_97.0, i64** %83, align 8
  %84 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %82, i32 0, i32 1
  store i64 %_97.1, i64* %84, align 8
  store i8 0, i8* %_98, align 1
  ret void

bb34:                                             ; preds = %bb32
  unreachable

bb35:                                             ; preds = %bb32
  %85 = bitcast { i64, i64 }* %_80 to %"core::option::Option<usize>::Some"*
  %86 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %85, i32 0, i32 1
  %val = load i64, i64* %86, align 8
; invoke alloc::collections::btree::node::Root<K,V>::as_mut
  invoke void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$6as_mut17h07a4250769d37a23E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_91, { i64*, i64 }* align 8 dereferenceable(16) %new_root)
          to label %bb36 unwind label %cleanup2

bb36:                                             ; preds = %bb35
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::cast_unchecked
  invoke void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$14cast_unchecked17h48ef0d7fa12d13f7E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_89, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24) %_91)
          to label %bb37 unwind label %cleanup2

bb37:                                             ; preds = %bb36
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  invoke void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6788212853a7a5bcE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_88, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_89, i64 %val)
          to label %bb38 unwind label %cleanup2

bb38:                                             ; preds = %bb37
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::correct_parent_link
  invoke void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$19correct_parent_link17hc6170593cc6327efE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_88)
          to label %bb39 unwind label %cleanup2

bb39:                                             ; preds = %bb38
  br label %bb31

bb40:                                             ; preds = %bb41
  store i8 0, i8* %_98, align 1
  %87 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %new_node to i64**
  %88 = load i64*, i64** %87, align 8, !nonnull !2
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17haf65effeee696eebE(i64* nonnull %88) #14
  br label %bb1

bb41:                                             ; preds = %bb8, %cleanup
  %89 = load i8, i8* %_98, align 1, !range !4
  %90 = trunc i8 %89 to i1
  br i1 %90, label %bb40, label %bb1

cleanup:                                          ; preds = %bb5, %bb4, %bb3
  %91 = landingpad { i8*, i32 }
          cleanup
  %92 = extractvalue { i8*, i32 } %91, 0
  %93 = extractvalue { i8*, i32 } %91, 1
  %94 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %92, i8** %94, align 8
  %95 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %93, i32* %95, align 8
  br label %bb41

cleanup1:                                         ; preds = %bb9, %bb7, %bb6
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  %98 = extractvalue { i8*, i32 } %96, 1
  %99 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %97, i8** %99, align 8
  %100 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %98, i32* %100, align 8
  br label %bb8

cleanup2:                                         ; preds = %bb38, %bb37, %bb36, %bb35, %bb31, %bb29, %bb28, %bb27, %bb26, %bb25, %bb24, %bb23, %bb22, %bb21, %bb20, %bb19, %bb18, %bb17, %bb16, %bb15, %bb14, %bb13, %bb11, %bb10
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  %103 = extractvalue { i8*, i32 } %101, 1
  %104 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %102, i8** %104, align 8
  %105 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %103, i32* %105, align 8
  br label %bb12
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert_fit
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$10insert_fit17h4a81eaf4e589d608E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32), %"alloc::string::String"* noalias nocapture dereferenceable(24) %key, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %val, i64* nonnull %edge.0, i64 %edge.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_66 = alloca i8, align 1
  %_65 = alloca i8, align 1
  %_62 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_61 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_53 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_45 = alloca { i64, i64 }, align 8
  %_37 = alloca %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %_29 = alloca %"serde_json::value::Value", align 8
  %_28 = alloca %"alloc::string::String", align 8
  %_26 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %self = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, align 8
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8
  store i8 0, i8* %_65, align 1
  store i8 0, i8* %_66, align 1
  store i8 1, i8* %_65, align 1
  store i8 1, i8* %_66, align 1
  br i1 false, label %bb2, label %bb7

bb1:                                              ; preds = %bb29, %bb4
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %8 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %9 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_9)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_7 = icmp ult i64 %9, 11
  %_6 = xor i1 %_7, true
  br i1 %_6, label %bb6, label %bb5

bb4:                                              ; preds = %bb30, %bb31
  %10 = load i8, i8* %_65, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb29, label %bb1

bb5:                                              ; preds = %bb3
  br label %bb7

bb6:                                              ; preds = %bb3
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @57 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @60 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb5, %start
  br i1 false, label %bb8, label %bb11

bb8:                                              ; preds = %bb7
  %12 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %12 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %13 to i64*
  %_19 = load i64, i64* %14, align 8
  %_18 = sub i64 %_19, 1
  %_16 = icmp eq i64 %edge.1, %_18
  %_15 = xor i1 %_16, true
  br i1 %_15, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [53 x i8] }>* @61 to [0 x i8]*), i64 53, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @62 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup

bb11:                                             ; preds = %bb9, %bb7
  %_27 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::cast_unchecked
  invoke void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$14cast_unchecked17hdc1289cb849f942fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_26, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32) %_27)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store i8 0, i8* %_65, align 1
  %15 = bitcast %"alloc::string::String"* %_28 to i8*
  %16 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  store i8 0, i8* %_66, align 1
  %17 = bitcast %"serde_json::value::Value"* %_29 to i8*
  %18 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_fit
  %19 = invoke %"serde_json::value::Value"* @"_ZN5alloc11collections5btree4node210Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$10insert_fit17hc85156301d216eabE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32) %_26, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_28, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_29)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  %20 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %20 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_mut
  %21 = invoke align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node119NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_mut17h784d2f9a1357398bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_38)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %21, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_37, align 8
  %22 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %_37, align 8, !nonnull !2
  %_36 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %22, i32 0, i32 3
  %_34.0 = bitcast [12 x i8*]* %_36 to [0 x i8*]*
  %23 = bitcast [0 x i8*]* %_34.0 to i64**
  br label %bb15

bb15:                                             ; preds = %bb14
  %24 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_40 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %24 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %25 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_40)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
; invoke core::slice::from_raw_parts_mut
  %26 = invoke { [0 x i64*]*, i64 } @_ZN4core5slice18from_raw_parts_mut17he8f47b8cdc453854E(i64** %23, i64 %25)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  %_31.0 = extractvalue { [0 x i64*]*, i64 } %26, 0
  %_31.1 = extractvalue { [0 x i64*]*, i64 } %26, 1
  %27 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %28 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %27, i32 0, i32 5
  %_42 = load i64, i64* %28, align 8
  %_41 = add i64 %_42, 1
; invoke alloc::collections::btree::node::slice_insert
  invoke void @_ZN5alloc11collections5btree4node12slice_insert17h08ee7b6ab38ce811E([0 x i64*]* nonnull align 8 %_31.0, i64 %_31.1, i64 %_41, i64* nonnull %edge.0)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb17
  %29 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %30 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %29, i32 0, i32 5
  %_47 = load i64, i64* %30, align 8
  %_46 = add i64 %_47, 1
  %31 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_50 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %31 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %32 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_50)
          to label %bb19 unwind label %cleanup

bb19:                                             ; preds = %bb18
  %_48 = add i64 %32, 1
  %33 = bitcast { i64, i64 }* %_45 to i64*
  store i64 %_46, i64* %33, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_45, i32 0, i32 1
  store i64 %_48, i64* %34, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_45, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_45, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %39 = invoke { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb727a63b56af1897E"(i64 %36, i64 %38)
          to label %bb20 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %41, i64* %43, align 8
  br label %bb21

bb21:                                             ; preds = %bb28, %bb20
; invoke core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %44 = invoke { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he5daec5ffae6a45aE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
          to label %bb22 unwind label %cleanup

bb22:                                             ; preds = %bb21
  store { i64, i64 } %44, { i64, i64 }* %_53, align 8
  %45 = bitcast { i64, i64 }* %_53 to i64*
  %_56 = load i64, i64* %45, align 8, !range !1
  switch i64 %_56, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ]

bb23:                                             ; preds = %bb22
  ret void

bb24:                                             ; preds = %bb22
  unreachable

bb25:                                             ; preds = %bb22
  %46 = bitcast { i64, i64 }* %_53 to %"core::option::Option<usize>::Some"*
  %47 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %46, i32 0, i32 1
  %val1 = load i64, i64* %47, align 8
  %48 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_63 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %48 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  invoke void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17h840a6b34bdcec63aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_62, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_63)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  invoke void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6788212853a7a5bcE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_61, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_62, i64 %val1)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::correct_parent_link
  invoke void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$19correct_parent_link17hc6170593cc6327efE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_61)
          to label %bb28 unwind label %cleanup

bb28:                                             ; preds = %bb27
  br label %bb21

bb29:                                             ; preds = %bb4
  store i8 0, i8* %_65, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %key) #14
  br label %bb1

bb30:                                             ; preds = %bb31
  store i8 0, i8* %_66, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %val) #14
  br label %bb4

bb31:                                             ; preds = %cleanup
  %49 = load i8, i8* %_66, align 1, !range !4
  %50 = trunc i8 %49 to i1
  br i1 %50, label %bb30, label %bb4

cleanup:                                          ; preds = %bb27, %bb26, %bb25, %bb21, %bb19, %bb18, %bb17, %bb16, %bb15, %bb13, %bb12, %bb11, %bb10, %bb6, %bb2
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  %53 = extractvalue { i8*, i32 } %51, 1
  %54 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %52, i8** %54, align 8
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %53, i32* %55, align 8
  br label %bb31

unreachable:                                      ; preds = %bb10, %bb6
  unreachable
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::cast_unchecked
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$14cast_unchecked17hdc1289cb849f942fE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32)) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %self = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, align 8
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %1, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %_3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %2 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::cast_unchecked
  call void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$14cast_unchecked17h343f35c0cedb2ad6E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %_2, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %3 = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"** %self, align 8, !nonnull !2
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %3, i32 0, i32 5
  %_4 = load i64, i64* %4, align 8
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17hb52752a7b9e23577E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_2, i64 %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::correct_parent_link
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$19correct_parent_link17hc6170593cc6327efE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %self.i.i.i = alloca i16*, align 8
  %self.i.i = alloca i16*, align 8
  %0 = alloca i16, align 2
  %self.i = alloca i16*, align 8
  %_16 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %_12 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %child = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %1 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_3 = load i64, i64* %1, align 8
  %idx = trunc i64 %_3 to i16
  %_8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_mut
  %_6 = call align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node119NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_mut17h784d2f9a1357398bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %_8)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_10 to i8*
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  call void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h437ba6869a967d83E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %child, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_10)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %4 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17hd6d3481459a8c908E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24) %child)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %4, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_12, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %5 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_12, align 8
  %6 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %5 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_6, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %6, align 8
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %7 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17hd6d3481459a8c908E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24) %child)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %7, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_16, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %8 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_16, align 8
  %_15 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %8, i32 0, i32 3
  store i16* %_15, i16** %self.i, align 8
  store i16 %idx, i16* %0, align 2
  %9 = load i16, i16* %0, align 2
  %10 = load i16*, i16** %self.i, align 8, !nonnull !2
  store i16 %9, i16* %10, align 2
  %_8.i = load i16*, i16** %self.i, align 8, !nonnull !2
  store i16* %_8.i, i16** %self.i.i, align 8
  %_5.i.i = load i16*, i16** %self.i.i, align 8, !nonnull !2
  store i16* %_5.i.i, i16** %self.i.i.i, align 8
  %_3.i.i.i = load i16*, i16** %self.i.i.i, align 8, !nonnull !2
  br label %bb5

bb5:                                              ; preds = %bb4
  ret void
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$6insert17hfd4157c9cc5c6331E"(%"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(104), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self, %"alloc::string::String"* noalias nocapture dereferenceable(24) %key, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %val, i64* nonnull %edge.0, i64 %edge.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_63 = alloca i8, align 1
  %_62 = alloca i8, align 1
  %_60 = alloca %"serde_json::value::Value", align 8
  %_59 = alloca %"alloc::string::String", align 8
  %_58 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_56 = alloca %"serde_json::value::Value", align 8
  %_55 = alloca %"alloc::string::String", align 8
  %_50 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_48 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_47 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_43 = alloca %"serde_json::value::Value", align 8
  %_42 = alloca %"alloc::string::String", align 8
  %_39 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_38 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_33 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_32 = alloca { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, align 8
  %right = alloca { i64*, i64 }, align 8
  %v = alloca %"serde_json::value::Value", align 8
  %k = alloca %"alloc::string::String", align 8
  %left = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_27 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %middle = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_24 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_23 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_21 = alloca %"serde_json::value::Value", align 8
  %_20 = alloca %"alloc::string::String", align 8
  store i8 0, i8* %_62, align 1
  store i8 0, i8* %_63, align 1
  store i8 1, i8* %_62, align 1
  store i8 1, i8* %_63, align 1
  br i1 false, label %bb2, label %bb6

bb1:                                              ; preds = %bb27, %bb5
  %2 = bitcast { i8*, i32 }* %1 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %8 to i64*
  %_10 = load i64, i64* %9, align 8
  %_9 = sub i64 %_10, 1
  %_7 = icmp eq i64 %edge.1, %_9
  %_6 = xor i1 %_7, true
  br i1 %_6, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb6

bb4:                                              ; preds = %bb2
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [53 x i8] }>* @61 to [0 x i8]*), i64 53, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @63 to %"core::panic::Location"*))
          to label %unreachable unwind label %cleanup

bb5:                                              ; preds = %bb28, %bb29
  %10 = load i8, i8* %_62, align 1, !range !4
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb27, label %bb1

bb6:                                              ; preds = %bb3, %start
  %_17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %12 = invoke i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %_17)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %_15 = icmp ult i64 %12, 11
  br i1 %_15, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_27 to i8*
  %15 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  invoke void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hce0850464f284c11E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %middle, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_27, i64 6)
          to label %bb12 unwind label %cleanup

bb9:                                              ; preds = %bb7
  store i8 0, i8* %_62, align 1
  %16 = bitcast %"alloc::string::String"* %_20 to i8*
  %17 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false)
  store i8 0, i8* %_63, align 1
  %18 = bitcast %"serde_json::value::Value"* %_21 to i8*
  %19 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert_fit
  invoke void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$10insert_fit17h4a81eaf4e589d608E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32) %self, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_20, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_21, i64* nonnull %edge.0, i64 %edge.1)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %21 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_24 to i8*
  %22 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false)
  %23 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_25 = load i64, i64* %23, align 8
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  invoke void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17hce0850464f284c11E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %_23, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_24, i64 %_25)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  %24 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Fit"*
  %25 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Fit", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Fit"* %24, i32 0, i32 1
  %26 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %25 to i8*
  %27 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 32, i1 false)
  %28 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to i64*
  store i64 0, i64* %28, align 8
  br label %bb26

bb12:                                             ; preds = %bb8
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_33 to i8*
  %30 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %middle to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split
  invoke void @"_ZN5alloc11collections5btree4node212Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..KV$GT$5split17had3d0b943d71e9a3E"({ [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(96) %_32, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture dereferenceable(32) %_33)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  %31 = bitcast { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %_32 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %32 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %left to i8*
  %33 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false)
  %34 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %_32, i32 0, i32 3
  %35 = bitcast %"alloc::string::String"* %k to i8*
  %36 = bitcast %"alloc::string::String"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false)
  %37 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %_32, i32 0, i32 5
  %38 = bitcast %"serde_json::value::Value"* %v to i8*
  %39 = bitcast %"serde_json::value::Value"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 32, i1 false)
  %40 = getelementptr inbounds { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }, { [0 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64], { i64*, i64 }, [0 x i64] }* %_32, i32 0, i32 7
  %41 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8, !nonnull !2
  %43 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %40, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %right, i32 0, i32 0
  store i64* %42, i64** %45, align 8
  %46 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %right, i32 0, i32 1
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_35 = load i64, i64* %47, align 8
  %_34 = icmp ule i64 %_35, 6
  br i1 %_34, label %bb17, label %bb16

bb14:                                             ; preds = %bb15
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %k) #14
  br label %bb29

bb15:                                             ; preds = %cleanup1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %v) #14
  br label %bb14

bb16:                                             ; preds = %bb13
; invoke alloc::collections::btree::node::Root<K,V>::as_mut
  invoke void @"_ZN5alloc11collections5btree4node17Root$LT$K$C$V$GT$6as_mut17h07a4250769d37a23E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_50, { i64*, i64 }* align 8 dereferenceable(16) %right)
          to label %bb21 unwind label %cleanup1

bb17:                                             ; preds = %bb13
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  invoke void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17h840a6b34bdcec63aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_39, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %left)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  %48 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_41 = load i64, i64* %48, align 8
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  invoke void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6788212853a7a5bcE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_38, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_39, i64 %_41)
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
  store i8 0, i8* %_62, align 1
  %49 = bitcast %"alloc::string::String"* %_42 to i8*
  %50 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false)
  store i8 0, i8* %_63, align 1
  %51 = bitcast %"serde_json::value::Value"* %_43 to i8*
  %52 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert_fit
  invoke void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$10insert_fit17h4a81eaf4e589d608E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32) %_38, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_42, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_43, i64* nonnull %edge.0, i64 %edge.1)
          to label %bb20 unwind label %cleanup1

bb20:                                             ; preds = %bb19
  br label %bb25

bb21:                                             ; preds = %bb16
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::cast_unchecked
  invoke void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$14cast_unchecked17h48ef0d7fa12d13f7E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_48, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24) %_50)
          to label %bb22 unwind label %cleanup1

bb22:                                             ; preds = %bb21
  %53 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 5
  %_53 = load i64, i64* %53, align 8
  %_52 = sub i64 %_53, 7
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  invoke void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6788212853a7a5bcE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_47, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_48, i64 %_52)
          to label %bb23 unwind label %cleanup1

bb23:                                             ; preds = %bb22
  store i8 0, i8* %_62, align 1
  %54 = bitcast %"alloc::string::String"* %_55 to i8*
  %55 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false)
  store i8 0, i8* %_63, align 1
  %56 = bitcast %"serde_json::value::Value"* %_56 to i8*
  %57 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 32, i1 false)
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert_fit
  invoke void @"_ZN5alloc11collections5btree4node214Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$10insert_fit17h4a81eaf4e589d608E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* align 8 dereferenceable(32) %_47, %"alloc::string::String"* noalias nocapture dereferenceable(24) %_55, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_56, i64* nonnull %edge.0, i64 %edge.1)
          to label %bb24 unwind label %cleanup1

bb24:                                             ; preds = %bb23
  br label %bb25

bb25:                                             ; preds = %bb24, %bb20
  %58 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_58 to i8*
  %59 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %left to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false)
  %60 = bitcast %"alloc::string::String"* %_59 to i8*
  %61 = bitcast %"alloc::string::String"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false)
  %62 = bitcast %"serde_json::value::Value"* %_60 to i8*
  %63 = bitcast %"serde_json::value::Value"* %v to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 32, i1 false)
  %64 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %right, i32 0, i32 0
  %_61.0 = load i64*, i64** %64, align 8, !nonnull !2
  %65 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %right, i32 0, i32 1
  %_61.1 = load i64, i64* %65, align 8
  %66 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %67 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %66, i32 0, i32 1
  %68 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %67 to i8*
  %69 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false)
  %70 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %71 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %70, i32 0, i32 3
  %72 = bitcast %"alloc::string::String"* %71 to i8*
  %73 = bitcast %"alloc::string::String"* %_59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false)
  %74 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %75 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %74, i32 0, i32 5
  %76 = bitcast %"serde_json::value::Value"* %75 to i8*
  %77 = bitcast %"serde_json::value::Value"* %_60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 32, i1 false)
  %78 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"*
  %79 = getelementptr inbounds %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split", %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>::Split"* %78, i32 0, i32 7
  %80 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %79, i32 0, i32 0
  store i64* %_61.0, i64** %80, align 8
  %81 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %79, i32 0, i32 1
  store i64 %_61.1, i64* %81, align 8
  %82 = bitcast %"alloc::collections::btree::node::InsertResult<alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to i64*
  store i64 1, i64* %82, align 8
  br label %bb26

bb26:                                             ; preds = %bb25, %bb11
  ret void

bb27:                                             ; preds = %bb5
  store i8 0, i8* %_62, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %key) #14
  br label %bb1

bb28:                                             ; preds = %bb29
  store i8 0, i8* %_63, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %val) #14
  br label %bb5

bb29:                                             ; preds = %bb14, %cleanup
  %83 = load i8, i8* %_63, align 1, !range !4
  %84 = trunc i8 %83 to i1
  br i1 %84, label %bb28, label %bb5

unreachable:                                      ; preds = %bb4
  unreachable

cleanup:                                          ; preds = %bb12, %bb8, %bb10, %bb9, %bb6, %bb4
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  %87 = extractvalue { i8*, i32 } %85, 1
  %88 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %86, i8** %88, align 8
  %89 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %87, i32* %89, align 8
  br label %bb29

cleanup1:                                         ; preds = %bb23, %bb22, %bb21, %bb16, %bb19, %bb18, %bb17
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = extractvalue { i8*, i32 } %90, 0
  %92 = extractvalue { i8*, i32 } %90, 1
  %93 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %91, i8** %93, align 8
  %94 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %92, i32* %94, align 8
  br label %bb15
}

; alloc::collections::btree::node::LeafNode<K,V>::new
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node21LeafNode$LT$K$C$V$GT$3new17h89ec8474ce0766fdE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(632)) unnamed_addr #1 {
start:
  %1 = alloca i16, align 2
  %_2 = alloca [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"], align 8
  %_1 = alloca [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"], align 8
  %2 = getelementptr inbounds [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"], [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_1, i64 0, i64 0
  %3 = getelementptr inbounds [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"], [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_1, i64 0, i64 11
  br label %repeat_loop_header

bb1:                                              ; preds = %repeat_loop_next3
  %4 = bitcast i16* %1 to {}*
  %5 = load i16, i16* %1, align 2
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %0 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**
  store %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* null, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %6, align 8
  %7 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %0, i32 0, i32 3
  store i16 %5, i16* %7, align 8
  %8 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %0, i32 0, i32 5
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %0, i32 0, i32 7
  %10 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %9 to i8*
  %11 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 264, i1 false)
  %12 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %0, i32 0, i32 9
  %13 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %12 to i8*
  %14 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 352, i1 false)
  ret void

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %15 = phi %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* [ %2, %start ], [ %18, %repeat_loop_body ]
  %16 = icmp ne %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %15, %3
  br i1 %16, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %17 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @64, i32 0, i32 0, i32 0), i64 24, i1 false)
  %18 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>", %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"* %15, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %19 = getelementptr inbounds [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"], [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_2, i64 0, i64 0
  %20 = getelementptr inbounds [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"], [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_2, i64 0, i64 11
  br label %repeat_loop_header1

repeat_loop_header1:                              ; preds = %repeat_loop_body2, %repeat_loop_next
  %21 = phi %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* [ %19, %repeat_loop_next ], [ %24, %repeat_loop_body2 ]
  %22 = icmp ne %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %21, %20
  br i1 %22, label %repeat_loop_body2, label %repeat_loop_next3

repeat_loop_body2:                                ; preds = %repeat_loop_header1
  %23 = bitcast %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 getelementptr inbounds (<{ [32 x i8] }>, <{ [32 x i8] }>* @65, i32 0, i32 0, i32 0), i64 32, i1 false)
  %24 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>", %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"* %21, i64 1
  br label %repeat_loop_header1

repeat_loop_next3:                                ; preds = %repeat_loop_header1
  br label %bb1
}

; alloc::collections::btree::node::BoxedNode<K,V>::from_internal
; Function Attrs: uwtable
define internal nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$13from_internal17hb43332087f20909fE"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %node) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
; call alloc::boxed::Box<T>::into_raw
  %1 = call %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17h0fa529b83d360907E"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %node)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %1 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
; call core::ptr::unique::Unique<T>::new_unchecked
  %2 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbbe03009970db42dE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64* %2, i64** %0, align 8
  %3 = load i64*, i64** %0, align 8, !nonnull !2
  ret i64* %3
}

; alloc::collections::btree::node::BoxedNode<K,V>::as_ptr
; Function Attrs: uwtable
define internal nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$6as_ptr17he309e7e3d77e6f7cE"(i64** noalias readonly align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_2 = load i64*, i64** %self, align 8, !nonnull !2
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call nonnull i64* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h9c734cddcbc898bcE"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; alloc::collections::btree::node::BoxedNode<K,V>::from_ptr
; Function Attrs: uwtable
define internal nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$8from_ptr17hf34edb81524c558aE"(i64* nonnull %ptr) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %1 = call nonnull i64* @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hbd8484c9d00fa41bE"(i64* nonnull %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %1, i64** %0, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !2
  ret i64* %2
}

; alloc::collections::btree::node::BoxedNode<K,V>::from_leaf
; Function Attrs: uwtable
define internal nonnull i64* @"_ZN5alloc11collections5btree4node22BoxedNode$LT$K$C$V$GT$9from_leaf17h720a60a20f64ae0cE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(632) %node) unnamed_addr #1 {
start:
  %0 = alloca i64*, align 8
; call alloc::boxed::Box<T>::into_unique
  %1 = call nonnull i64* @"_ZN5alloc5boxed12Box$LT$T$GT$11into_unique17h939091f8bcc9117dE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(632) %node)
  br label %bb1

bb1:                                              ; preds = %start
  store i64* %1, i64** %0, align 8
  %2 = load i64*, i64** %0, align 8, !nonnull !2
  ret i64* %2
}

; alloc::collections::btree::node::NodeHeader<K,V>::is_shared_root
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN5alloc11collections5btree4node23NodeHeader$LT$K$C$V$GT$14is_shared_root17h659d73444bf54fc0E"(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call core::ptr::eq
  %0 = call zeroext i1 @_ZN4core3ptr2eq17hb76f3c93c1503c8bE(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %self, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* bitcast (%"alloc::collections::btree::node::NodeHeader<(), (), ()>"* @_ZN5alloc11collections5btree4node15EMPTY_ROOT_NODE17h6eb12c3df8cca51dE to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*))
  br label %bb1

bb1:                                              ; preds = %start
  ret i1 %0
}

; alloc::collections::btree::node::Handle<Node,Type>::into_node
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h27905051ef258e97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; alloc::collections::btree::node::Handle<Node,Type>::into_node
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h9f64cb8d9a510b3dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to i8*
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  ret void
}

; alloc::collections::btree::node::InternalNode<K,V>::new
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node25InternalNode$LT$K$C$V$GT$3new17hb935534e56156294E"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(728)) unnamed_addr #1 {
start:
  %_2 = alloca [12 x i8*], align 8
  %_1 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", align 8
; call alloc::collections::btree::node::LeafNode<K,V>::new
  call void @"_ZN5alloc11collections5btree4node21LeafNode$LT$K$C$V$GT$3new17h89ec8474ce0766fdE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(632) %_1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load i8*, i8** bitcast (<{ [8 x i8] }>* @66 to i8**), align 8
  %2 = getelementptr inbounds [12 x i8*], [12 x i8*]* %_2, i64 0, i64 0
  %3 = getelementptr inbounds [12 x i8*], [12 x i8*]* %_2, i64 0, i64 0
  %4 = getelementptr inbounds [12 x i8*], [12 x i8*]* %_2, i64 0, i64 12
  br label %repeat_loop_header

repeat_loop_header:                               ; preds = %repeat_loop_body, %bb1
  %5 = phi i8** [ %3, %bb1 ], [ %7, %repeat_loop_body ]
  %6 = icmp ne i8** %5, %4
  br i1 %6, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  store i8* %1, i8** %5, align 8
  %7 = getelementptr inbounds i8*, i8** %5, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %8 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %0 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
  %9 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %8 to i8*
  %10 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 632, i1 false)
  %11 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %0, i32 0, i32 3
  %12 = bitcast [12 x i8*]* %11 to i8*
  %13 = bitcast [12 x i8*]* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 96, i1 false)
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h2b2bdac4af0f22e5E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_2 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h49edfedec144e7c4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_2, i64 0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h3686e3c7dd0c92c6E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_2 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h69d306c7168be61bE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_2, i64 0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h5e63645cc88577d1E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_2 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6788212853a7a5bcE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_2, i64 0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h0ef155c3678bd6a8E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_2 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hed72b25febd8e69eE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeHeader<K,V>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node23NodeHeader$LT$K$C$V$GT$14is_shared_root17h659d73444bf54fc0E"(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h4e282c8978f40a76E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_2 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17he9ddd9088ae593b1E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeHeader<K,V>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node23NodeHeader$LT$K$C$V$GT$14is_shared_root17h659d73444bf54fc0E"(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h7a7cc4af131cd917E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_2 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h921b40dd72427e21E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeHeader<K,V>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node23NodeHeader$LT$K$C$V$GT$14is_shared_root17h659d73444bf54fc0E"(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h8f81ba18c71b1e1aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_2 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h3221e534f9b3912bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeHeader<K,V>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node23NodeHeader$LT$K$C$V$GT$14is_shared_root17h659d73444bf54fc0E"(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17haa1b4f648f814b30E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_2 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hf731d4f7d1428bf8E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeHeader<K,V>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node23NodeHeader$LT$K$C$V$GT$14is_shared_root17h659d73444bf54fc0E"(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17hc5ab78cd049fa864E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_2 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hc4545a94a10513fdE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeHeader<K,V>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node23NodeHeader$LT$K$C$V$GT$14is_shared_root17h659d73444bf54fc0E"(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
; Function Attrs: uwtable
define internal zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17hce12f7e1e0b5171aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_2 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17he3d83072370ddb63E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeHeader<K,V>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node23NodeHeader$LT$K$C$V$GT$14is_shared_root17h659d73444bf54fc0E"(%"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* noalias readonly align 8 dereferenceable(16) %_2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i1 %0
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h0d787b1b43e91302E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %0 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hed72b25febd8e69eE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %0, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, i32 0, i32 5
  %_2 = load i16, i16* %2, align 2
  %3 = zext i16 %_2 to i64
  ret i64 %3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h61f05b955e6cbc7dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %0 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17he3d83072370ddb63E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %0, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, i32 0, i32 5
  %_2 = load i16, i16* %2, align 2
  %3 = zext i16 %_2 to i64
  ret i64 %3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h7d825bf0cd1ce642E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %0 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17he9ddd9088ae593b1E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %0, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, i32 0, i32 5
  %_2 = load i16, i16* %2, align 2
  %3 = zext i16 %_2 to i64
  ret i64 %3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %0 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hf731d4f7d1428bf8E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %0, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, i32 0, i32 5
  %_2 = load i16, i16* %2, align 2
  %3 = zext i16 %_2 to i64
  ret i64 %3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h823b7d2c45f08c97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %0 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hc4545a94a10513fdE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %0, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, i32 0, i32 5
  %_2 = load i16, i16* %2, align 2
  %3 = zext i16 %_2 to i64
  ret i64 %3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hc5f79ed557296febE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %0 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h3221e534f9b3912bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %0, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, i32 0, i32 5
  %_2 = load i16, i16* %2, align 2
  %3 = zext i16 %_2 to i64
  ret i64 %3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hd9e6e829918e6000E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %0 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h921b40dd72427e21E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %0, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, i32 0, i32 5
  %_2 = load i16, i16* %2, align 2
  %3 = zext i16 %_2 to i64
  ret i64 %3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hebcf91dd23d8d6d7E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %0 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h5487ee7d2bb1daeeE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %0, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_3, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, i32 0, i32 5
  %_2 = load i16, i16* %2, align 2
  %3 = zext i16 %_2 to i64
  ret i64 %3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::keys
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4keys17h6947d5eec8b12321E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h947b42d7aaaa43efE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %_3, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_key_slice
  %0 = call { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_key_slice17h7d9c1a8de605999dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_3)
  %1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 0
  %2 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %1, 0
  %4 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %3, i64 %2, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %4
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::keys
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4keys17hbd846af33abe5b69E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h26e6e7f13cbae8a5E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_3, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_key_slice
  %0 = call { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_key_slice17he9cb1797ae680b71E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_3)
  %1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 0
  %2 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %1, 0
  %4 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %3, i64 %2, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %4
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::keys
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4keys17hf3629ff00d93abc6E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h6157b15adc793f87E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_3, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_key_slice
  %0 = call { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_key_slice17ha4d5f93714bfc7d1E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_3)
  %1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 0
  %2 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %1, 0
  %4 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %3, i64 %2, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %4
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::vals
; Function Attrs: uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4vals17h36777a052a0a8d95E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h26e6e7f13cbae8a5E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_3, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_val_slice
  %0 = call { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_val_slice17ha01116aac7932468E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_3)
  %1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 0
  %2 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %1, 0
  %4 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %3, i64 %2, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %4
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::vals
; Function Attrs: uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4vals17h63d17f5ef6b91b05E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h947b42d7aaaa43efE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %_3, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_val_slice
  %0 = call { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_val_slice17h3b6b4e9041ad9319E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_3)
  %1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 0
  %2 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %1, 0
  %4 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %3, i64 %2, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %4
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h16f3d90dcbddbc68E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(40), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %self.i.i = alloca i16*, align 8
  %self.i = alloca i16*, align 8
  %_26 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_25 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_23 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
  %_18 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca i64*, align 8
  %_4 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %1 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h5487ee7d2bb1daeeE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_4, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %2 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**
  %_3 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %3, align 8
  %parent_as_leaf = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_3 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
; call core::ptr::non_null::NonNull<T>::new
  %4 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h99e69bed8aa25602E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %parent_as_leaf)
  store i64* %4, i64** %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast i64** %_6 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp ule {}* %6, null
  %_10 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_10, 1
  br i1 %8, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_26 to i8*
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err"* %11, i32 0, i32 1
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %12 to i8*
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb8

bb4:                                              ; preds = %bb2
  %non_zero = load i64*, i64** %_6, align 8, !nonnull !2
  %16 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i64*
  %_15 = load i64, i64* %16, align 8
  %_14 = add i64 %_15, 1
  %17 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self, i32 0, i32 7
  %_17 = load { i64*, i64 }*, { i64*, i64 }** %17, align 8
  %18 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i64*
  store i64 %_14, i64* %18, align 8
  %19 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13, i32 0, i32 5
  store i64* %non_zero, i64** %19, align 8
  %20 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13, i32 0, i32 7
  store { i64*, i64 }* %_17, { i64*, i64 }** %20, align 8
  %21 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %22 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h5487ee7d2bb1daeeE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %22, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_23, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %23 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_23, align 8, !nonnull !2
  %_22 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %23, i32 0, i32 3
  store i16* %_22, i16** %self.i, align 8, !noalias !114
  %_5.i = load i16*, i16** %self.i, align 8, !noalias !114, !nonnull !2
  store i16* %_5.i, i16** %self.i.i, align 8, !noalias !117
  %_2.i.i = load i16*, i16** %self.i.i, align 8, !noalias !117, !nonnull !2
  br label %bb6

bb6:                                              ; preds = %bb5
  %_20 = load i16, i16* %_2.i.i, align 2
; call core::num::<impl core::convert::From<u16> for usize>::from
  %24 = call i64 @"_ZN4core3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17hf6b8b0ad292da3b7E"(i16 %_20)
  br label %bb7

bb7:                                              ; preds = %bb6
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %26 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %25 to i8*
  %27 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  %28 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12, i32 0, i32 5
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  %30 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok"*
  %31 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok"* %30, i32 0, i32 1
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %31 to i8*
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false)
  %34 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 0, i64* %34, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h5051ccdfd5393a28E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(40), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %self.i.i = alloca i16*, align 8
  %self.i = alloca i16*, align 8
  %_26 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_25 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_23 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
  %_18 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca i64*, align 8
  %_4 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %1 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hf731d4f7d1428bf8E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_4, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %2 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**
  %_3 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %3, align 8
  %parent_as_leaf = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_3 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
; call core::ptr::non_null::NonNull<T>::new
  %4 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h99e69bed8aa25602E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %parent_as_leaf)
  store i64* %4, i64** %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast i64** %_6 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp ule {}* %6, null
  %_10 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_10, 1
  br i1 %8, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_26 to i8*
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Err"* %11, i32 0, i32 1
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %12 to i8*
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb8

bb4:                                              ; preds = %bb2
  %non_zero = load i64*, i64** %_6, align 8, !nonnull !2
  %16 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i64*
  %_15 = load i64, i64* %16, align 8
  %_14 = add i64 %_15, 1
  %17 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self, i32 0, i32 7
  %_17 = load { i64*, i64 }*, { i64*, i64 }** %17, align 8
  %18 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i64*
  store i64 %_14, i64* %18, align 8
  %19 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13, i32 0, i32 5
  store i64* %non_zero, i64** %19, align 8
  %20 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13, i32 0, i32 7
  store { i64*, i64 }* %_17, { i64*, i64 }** %20, align 8
  %21 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %22 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hf731d4f7d1428bf8E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %22, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_23, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %23 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_23, align 8, !nonnull !2
  %_22 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %23, i32 0, i32 3
  store i16* %_22, i16** %self.i, align 8, !noalias !120
  %_5.i = load i16*, i16** %self.i, align 8, !noalias !120, !nonnull !2
  store i16* %_5.i, i16** %self.i.i, align 8, !noalias !123
  %_2.i.i = load i16*, i16** %self.i.i, align 8, !noalias !123, !nonnull !2
  br label %bb6

bb6:                                              ; preds = %bb5
  %_20 = load i16, i16* %_2.i.i, align 2
; call core::num::<impl core::convert::From<u16> for usize>::from
  %24 = call i64 @"_ZN4core3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17hf6b8b0ad292da3b7E"(i16 %_20)
  br label %bb7

bb7:                                              ; preds = %bb6
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %26 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %25 to i8*
  %27 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  %28 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12, i32 0, i32 5
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  %30 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok"*
  %31 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Ok"* %30, i32 0, i32 1
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %31 to i8*
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false)
  %34 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 0, i64* %34, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h5e010f984a3d2166E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* noalias nocapture sret dereferenceable(40), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %self.i.i = alloca i16*, align 8
  %self.i = alloca i16*, align 8
  %_26 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_25 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_23 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
  %_18 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca i64*, align 8
  %_4 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %1 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hc4545a94a10513fdE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_4, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %2 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**
  %_3 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %3, align 8
  %parent_as_leaf = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_3 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
; call core::ptr::non_null::NonNull<T>::new
  %4 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h99e69bed8aa25602E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %parent_as_leaf)
  store i64* %4, i64** %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast i64** %_6 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp ule {}* %6, null
  %_10 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_10, 1
  br i1 %8, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_26 to i8*
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err"* %11, i32 0, i32 1
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %12 to i8*
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb8

bb4:                                              ; preds = %bb2
  %non_zero = load i64*, i64** %_6, align 8, !nonnull !2
  %16 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self to i64*
  %_15 = load i64, i64* %16, align 8
  %_14 = add i64 %_15, 1
  %17 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self, i32 0, i32 7
  %_17 = load { i64*, i64 }*, { i64*, i64 }** %17, align 8
  %18 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i64*
  store i64 %_14, i64* %18, align 8
  %19 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13, i32 0, i32 5
  store i64* %non_zero, i64** %19, align 8
  %20 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13, i32 0, i32 7
  store { i64*, i64 }* %_17, { i64*, i64 }** %20, align 8
  %21 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %22 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hc4545a94a10513fdE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %22, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_23, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %23 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_23, align 8, !nonnull !2
  %_22 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %23, i32 0, i32 3
  store i16* %_22, i16** %self.i, align 8, !noalias !126
  %_5.i = load i16*, i16** %self.i, align 8, !noalias !126, !nonnull !2
  store i16* %_5.i, i16** %self.i.i, align 8, !noalias !129
  %_2.i.i = load i16*, i16** %self.i.i, align 8, !noalias !129, !nonnull !2
  br label %bb6

bb6:                                              ; preds = %bb5
  %_20 = load i16, i16* %_2.i.i, align 2
; call core::num::<impl core::convert::From<u16> for usize>::from
  %24 = call i64 @"_ZN4core3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17hf6b8b0ad292da3b7E"(i16 %_20)
  br label %bb7

bb7:                                              ; preds = %bb6
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %26 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %25 to i8*
  %27 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  %28 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12, i32 0, i32 5
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  %30 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok"*
  %31 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok"* %30, i32 0, i32 1
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %31 to i8*
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false)
  %34 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %0 to i64*
  store i64 0, i64* %34, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17hea293cd3f44898e5E"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* noalias nocapture sret dereferenceable(40), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %self.i.i = alloca i16*, align 8
  %self.i = alloca i16*, align 8
  %_26 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_25 = alloca %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", align 1
  %_23 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
  %_18 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>", align 1
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca i64*, align 8
  %_4 = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %1 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h921b40dd72427e21E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %1, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_4, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_4, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %2 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"**
  %_3 = load %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"** %3, align 8
  %parent_as_leaf = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_3 to %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*
; call core::ptr::non_null::NonNull<T>::new
  %4 = call i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h99e69bed8aa25602E"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %parent_as_leaf)
  store i64* %4, i64** %_6, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = bitcast i64** %_6 to {}**
  %6 = load {}*, {}** %5, align 8
  %7 = icmp ule {}* %6, null
  %_10 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_10, 1
  br i1 %8, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_26 to i8*
  %10 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err"*
  %12 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Err"* %11, i32 0, i32 1
  %13 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %12 to i8*
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  %15 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %0 to i64*
  store i64 1, i64* %15, align 8
  br label %bb8

bb4:                                              ; preds = %bb2
  %non_zero = load i64*, i64** %_6, align 8, !nonnull !2
  %16 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self to i64*
  %_15 = load i64, i64* %16, align 8
  %_14 = add i64 %_15, 1
  %17 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self, i32 0, i32 7
  %_17 = load { i64*, i64 }*, { i64*, i64 }** %17, align 8
  %18 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i64*
  store i64 %_14, i64* %18, align 8
  %19 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13, i32 0, i32 5
  store i64* %non_zero, i64** %19, align 8
  %20 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13, i32 0, i32 7
  store { i64*, i64 }* %_17, { i64*, i64 }** %20, align 8
  %21 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %22 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h921b40dd72427e21E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %22, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_23, align 8
  br label %bb5

bb5:                                              ; preds = %bb4
  %23 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"** %_23, align 8, !nonnull !2
  %_22 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %23, i32 0, i32 3
  store i16* %_22, i16** %self.i, align 8, !noalias !132
  %_5.i = load i16*, i16** %self.i, align 8, !noalias !132, !nonnull !2
  store i16* %_5.i, i16** %self.i.i, align 8, !noalias !135
  %_2.i.i = load i16*, i16** %self.i.i, align 8, !noalias !135, !nonnull !2
  br label %bb6

bb6:                                              ; preds = %bb5
  %_20 = load i16, i16* %_2.i.i, align 2
; call core::num::<impl core::convert::From<u16> for usize>::from
  %24 = call i64 @"_ZN4core3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17hf6b8b0ad292da3b7E"(i16 %_20)
  br label %bb7

bb7:                                              ; preds = %bb6
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*
  %26 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %25 to i8*
  %27 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false)
  %28 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12, i32 0, i32 5
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>"*
  %30 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok"*
  %31 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>::Ok"* %30, i32 0, i32 1
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %31 to i8*
  %33 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 32, i1 false)
  %34 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>>"* %0 to i64*
  store i64 0, i64* %34, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf
; Function Attrs: uwtable
define internal align 8 dereferenceable(632) %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$7as_leaf17h9f6c8eefabe90e75E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %_3 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1, i32 0, i32 5
; call core::ptr::non_null::NonNull<T>::as_ref
  %2 = call align 8 dereferenceable(632) %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hc3fcbb6e915cb933E"(i64** noalias readonly align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %2
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf
; Function Attrs: uwtable
define internal align 8 dereferenceable(632) %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$7as_leaf17hdcf5d588b772d469E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %_3 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, i32 0, i32 5
; call core::ptr::non_null::NonNull<T>::as_ref
  %2 = call align 8 dereferenceable(632) %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hc3fcbb6e915cb933E"(i64** noalias readonly align 8 dereferenceable(8) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %2
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h26e6e7f13cbae8a5E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Internal)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Internal)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h6157b15adc793f87E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17h947b42d7aaaa43efE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Leaf)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Leaf)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17hae775b8341b3c2caE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Leaf)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Leaf)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::reborrow
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$8reborrow17hd49dae5df2f6bb7dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Internal)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut, alloc::collections::btree::node::marker::Internal)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h3221e534f9b3912bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*
  ret %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h5487ee7d2bb1daeeE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*
  ret %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h921b40dd72427e21E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*
  ret %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hc4545a94a10513fdE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*
  ret %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17he3d83072370ddb63E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*
  ret %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17he9ddd9088ae593b1E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*
  ret %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hed72b25febd8e69eE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*
  ret %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hf731d4f7d1428bf8E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"*
  ret %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::last_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9last_edge17h215c2b6108bc33c8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_4 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %_5 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hd9e6e829918e6000E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h49edfedec144e7c4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_4, i64 %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::last_edge
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9last_edge17h2a478fa9ae291bf0E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_4 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %_5 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hebcf91dd23d8d6d7E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_4 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h69d306c7168be61bE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_4, i64 %_5)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
; Function Attrs: uwtable
define internal %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5d208d521508e34cE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, i32 0, i32 5
  %_2 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
; Function Attrs: uwtable
define internal %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5dd015efe4c410d0E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1, i32 0, i32 5
  %_2 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
; Function Attrs: uwtable
define internal %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17hd6d3481459a8c908E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %1, i32 0, i32 5
  %_2 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17h840a6b34bdcec63aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17hac8de1f99dd43816E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17hb4f4d5dfe4291a0aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::LeafOrInternal)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::LeafOrInternal)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_root_mut
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) { i64*, i64 }* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$13into_root_mut17h555e901e705b630cE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self, i32 0, i32 7
  %_6 = load { i64*, i64 }*, { i64*, i64 }** %0, align 8
  ret { i64*, i64 }* %_6
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_root_mut
; Function Attrs: uwtable
define internal align 8 dereferenceable(16) { i64*, i64 }* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$13into_root_mut17h5c432d3124f69089E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self, i32 0, i32 7
  %_6 = load { i64*, i64 }*, { i64*, i64 }** %0, align 8
  ret { i64*, i64 }* %_6
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::cast_unchecked
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$14cast_unchecked17h343f35c0cedb2ad6E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::cast_unchecked
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$14cast_unchecked17h48ef0d7fa12d13f7E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::cast_unchecked
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$14cast_unchecked17h6147b7382bf63dccE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %_5 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>", align 1
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %1, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8
  %2 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %2 to i64*
  %_2 = load i64, i64* %3, align 8
  %4 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %4, i32 0, i32 5
  %_3 = load i64*, i64** %5, align 8, !nonnull !2
  %6 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"** %self, align 8, !nonnull !2
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %6, i32 0, i32 7
  %_4 = load { i64*, i64 }*, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to i64*
  store i64 %_2, i64* %8, align 8
  %9 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 5
  store i64* %_3, i64** %9, align 8
  %10 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0, i32 0, i32 7
  store { i64*, i64 }* %_4, { i64*, i64 }** %10, align 8
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %0 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>"*
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_slices_mut
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$15into_slices_mut17h38525288f7608a13E"({ [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %leaf = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %1 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17hc5ab78cd049fa864E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %1, true
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @43 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @67 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %_20 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h823b7d2c45f08c97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %2 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5dd015efe4c410d0E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %2, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %leaf, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %3 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %leaf, align 8
  %_19 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3, i32 0, i32 7
  %_17.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_19 to [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]*
  %4 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_17.0 to %"alloc::string::String"*
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::slice::from_raw_parts_mut
  %5 = call { [0 x %"alloc::string::String"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h3d3444bbaa527763E(%"alloc::string::String"* %4, i64 %_20)
  %_27.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %5, 0
  %_27.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %5, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %6 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %leaf, align 8
  %_25 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %6, i32 0, i32 9
  %_23.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_25 to [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]*
  %7 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_23.0 to %"serde_json::value::Value"*
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::slice::from_raw_parts_mut
  %8 = call { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h1cdf6ab51244c554E(%"serde_json::value::Value"* %7, i64 %_20)
  %_28.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %8, 0
  %_28.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %8, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %9 = bitcast { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %0 to { [0 x %"alloc::string::String"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %9, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %_27.0, [0 x %"alloc::string::String"]** %10, align 8
  %11 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %9, i32 0, i32 1
  store i64 %_27.1, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %0, i32 0, i32 3
  %13 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %12, i32 0, i32 0
  store [0 x %"serde_json::value::Value"]* %_28.0, [0 x %"serde_json::value::Value"]** %13, align 8
  %14 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %12, i32 0, i32 1
  store i64 %_28.1, i64* %14, align 8
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_slices_mut
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$15into_slices_mut17h7b90a2ff29611662E"({ [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %leaf = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %1 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17hce12f7e1e0b5171aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %1, true
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @43 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @67 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %_20 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h61f05b955e6cbc7dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb6

bb6:                                              ; preds = %bb5
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %2 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17hd6d3481459a8c908E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %2, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %leaf, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %3 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %leaf, align 8
  %_19 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3, i32 0, i32 7
  %_17.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_19 to [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]*
  %4 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_17.0 to %"alloc::string::String"*
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::slice::from_raw_parts_mut
  %5 = call { [0 x %"alloc::string::String"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h3d3444bbaa527763E(%"alloc::string::String"* %4, i64 %_20)
  %_27.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %5, 0
  %_27.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %5, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %6 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %leaf, align 8
  %_25 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %6, i32 0, i32 9
  %_23.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_25 to [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]*
  %7 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_23.0 to %"serde_json::value::Value"*
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::slice::from_raw_parts_mut
  %8 = call { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h1cdf6ab51244c554E(%"serde_json::value::Value"* %7, i64 %_20)
  %_28.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %8, 0
  %_28.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %8, 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %9 = bitcast { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %0 to { [0 x %"alloc::string::String"]*, i64 }*
  %10 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %9, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %_27.0, [0 x %"alloc::string::String"]** %10, align 8
  %11 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %9, i32 0, i32 1
  store i64 %_27.1, i64* %11, align 8
  %12 = getelementptr inbounds { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %0, i32 0, i32 3
  %13 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %12, i32 0, i32 0
  store [0 x %"serde_json::value::Value"]* %_28.0, [0 x %"serde_json::value::Value"]** %13, align 8
  %14 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %12, i32 0, i32 1
  store i64 %_28.1, i64* %14, align 8
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_key_slice_mut
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$18into_key_slice_mut17h989ae3dfea0d0d5aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %_20 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca { [0 x %"alloc::string::String"]*, i64 }, align 8
  store i64 8, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %_4, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb6
  store i8 0, i8* %_4, align 1
  br label %bb4

bb3:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %3 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17haa1b4f648f814b30E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb7

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %_4, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb9, label %bb8

bb5:                                              ; preds = %start
  store i64 8, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %_5 = icmp ugt i64 %2, %6
  br i1 %_5, label %bb3, label %bb2

bb7:                                              ; preds = %bb3
  br i1 %3, label %bb1, label %bb2

bb8:                                              ; preds = %bb4
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %7 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5d208d521508e34cE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %7, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_20, align 8
  br label %bb10

bb9:                                              ; preds = %bb4
  %8 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 0
  store [0 x %"alloc::string::String"]* inttoptr (i64 8 to [0 x %"alloc::string::String"]*), [0 x %"alloc::string::String"]** %8, align 8
  %9 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 1
  store i64 0, i64* %9, align 8
  br label %bb14

bb10:                                             ; preds = %bb8
  %10 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_20, align 8
  %_19 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %10, i32 0, i32 7
  %_17.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_19 to [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]*
  %11 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_17.0 to %"alloc::string::String"*
  br label %bb11

bb11:                                             ; preds = %bb10
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %12 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::slice::from_raw_parts_mut
  %13 = call { [0 x %"alloc::string::String"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h3d3444bbaa527763E(%"alloc::string::String"* %11, i64 %12)
  %_14.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %13, 0
  %_14.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %13, 1
  br label %bb13

bb13:                                             ; preds = %bb12
  %14 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %_14.0, [0 x %"alloc::string::String"]** %14, align 8
  %15 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 1
  store i64 %_14.1, i64* %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb9
  %16 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 0
  %_2.0 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %16, align 8, !nonnull !2
  %17 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 1
  %_2.1 = load i64, i64* %17, align 8
  %18 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %_2.0, 0
  %19 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %18, i64 %_2.1, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %19
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_key_slice_mut
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$18into_key_slice_mut17ha66bfe5471b25013E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %_20 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca { [0 x %"alloc::string::String"]*, i64 }, align 8
  store i64 8, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %_4, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb6
  store i8 0, i8* %_4, align 1
  br label %bb4

bb3:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %3 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17hc5ab78cd049fa864E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb7

bb4:                                              ; preds = %bb2, %bb1
  %4 = load i8, i8* %_4, align 1, !range !4
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb9, label %bb8

bb5:                                              ; preds = %start
  store i64 8, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %_5 = icmp ugt i64 %2, %6
  br i1 %_5, label %bb3, label %bb2

bb7:                                              ; preds = %bb3
  br i1 %3, label %bb1, label %bb2

bb8:                                              ; preds = %bb4
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %7 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5dd015efe4c410d0E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %7, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_20, align 8
  br label %bb10

bb9:                                              ; preds = %bb4
  %8 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 0
  store [0 x %"alloc::string::String"]* inttoptr (i64 8 to [0 x %"alloc::string::String"]*), [0 x %"alloc::string::String"]** %8, align 8
  %9 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 1
  store i64 0, i64* %9, align 8
  br label %bb14

bb10:                                             ; preds = %bb8
  %10 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_20, align 8
  %_19 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %10, i32 0, i32 7
  %_17.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_19 to [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]*
  %11 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<alloc::string::String>"]* %_17.0 to %"alloc::string::String"*
  br label %bb11

bb11:                                             ; preds = %bb10
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %12 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h823b7d2c45f08c97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb12

bb12:                                             ; preds = %bb11
; call core::slice::from_raw_parts_mut
  %13 = call { [0 x %"alloc::string::String"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h3d3444bbaa527763E(%"alloc::string::String"* %11, i64 %12)
  %_14.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %13, 0
  %_14.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %13, 1
  br label %bb13

bb13:                                             ; preds = %bb12
  %14 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %_14.0, [0 x %"alloc::string::String"]** %14, align 8
  %15 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 1
  store i64 %_14.1, i64* %15, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb9
  %16 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 0
  %_2.0 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %16, align 8, !nonnull !2
  %17 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %_3, i32 0, i32 1
  %_2.1 = load i64, i64* %17, align 8
  %18 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %_2.0, 0
  %19 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %18, i64 %_2.1, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %19
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_val_slice_mut
; Function Attrs: uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$18into_val_slice_mut17h25655a2cc61cf333E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_18 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17hc5ab78cd049fa864E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @43 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @68 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %1 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5dd015efe4c410d0E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %1, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_18, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %2 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_18, align 8
  %_17 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %2, i32 0, i32 9
  %_15.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_17 to [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]*
  %3 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_15.0 to %"serde_json::value::Value"*
  br label %bb7

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %4 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h823b7d2c45f08c97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::slice::from_raw_parts_mut
  %5 = call { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h1cdf6ab51244c554E(%"serde_json::value::Value"* %3, i64 %4)
  %_12.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, 0
  %_12.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %6 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %_12.0, 0
  %7 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %6, i64 %_12.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %7
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_val_slice_mut
; Function Attrs: uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$18into_val_slice_mut17h35e0a4ed763ff8e4E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_18 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17haa1b4f648f814b30E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %0, true
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @43 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @68 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::as_leaf_mut
  %1 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$11as_leaf_mut17h5d208d521508e34cE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %1, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_18, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %2 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_18, align 8
  %_17 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %2, i32 0, i32 9
  %_15.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_17 to [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]*
  %3 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_15.0 to %"serde_json::value::Value"*
  br label %bb7

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %4 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h808a364569bf6d01E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::slice::from_raw_parts_mut
  %5 = call { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h1cdf6ab51244c554E(%"serde_json::value::Value"* %3, i64 %4)
  %_12.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, 0
  %_12.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %6 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %_12.0, 0
  %7 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %6, i64 %_12.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %7
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::keys_mut
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$8keys_mut17h26b3b0fe33edae85E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  call void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17hac8de1f99dd43816E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %_5, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_key_slice_mut
  %0 = call { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$18into_key_slice_mut17ha66bfe5471b25013E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_5)
  %_3.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %_3.0, 0
  %2 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %2
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::keys_mut
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$8keys_mut17h5fde1313cb1a3273E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  call void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17h840a6b34bdcec63aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_5, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_key_slice_mut
  %0 = call { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$18into_key_slice_mut17h989ae3dfea0d0d5aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_5)
  %_3.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %_3.0, 0
  %2 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %2
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::vals_mut
; Function Attrs: uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$8vals_mut17h09c47555a3581871E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  call void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17h840a6b34bdcec63aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_5, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_val_slice_mut
  %0 = call { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$18into_val_slice_mut17h35e0a4ed763ff8e4E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_5)
  %_3.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %_3.0, 0
  %2 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %2
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::vals_mut
; Function Attrs: uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$8vals_mut17h89695f529b1e7462E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::reborrow_mut
  call void @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$12reborrow_mut17hac8de1f99dd43816E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %_5, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* align 8 dereferenceable(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,Type>::into_val_slice_mut
  %0 = call { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node74NodeRef$LT$alloc..collections..btree..node..marker..Mut$C$K$C$V$C$Type$GT$18into_val_slice_mut17h25655a2cc61cf333E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_5)
  %_3.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 0
  %_3.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %1 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %_3.0, 0
  %2 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %1, i64 %_3.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %2
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_slices
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$11into_slices17h1c1b120cf34fc699E"({ [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_11 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_8 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %k = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
; call core::ptr::read
  call void @_ZN4core3ptr4read17h0babe39685e982c8E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %k, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_8 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_key_slice
  %3 = call { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_key_slice17he9cb1797ae680b71E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_8)
  %_6.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %3, 0
  %_6.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %3, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_11 to i8*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_val_slice
  %6 = call { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_val_slice17ha01116aac7932468E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_11)
  %_9.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %6, 0
  %_9.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %6, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = bitcast { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %0 to { [0 x %"alloc::string::String"]*, i64 }*
  %8 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %7, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %_6.0, [0 x %"alloc::string::String"]** %8, align 8
  %9 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %7, i32 0, i32 1
  store i64 %_6.1, i64* %9, align 8
  %10 = getelementptr inbounds { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %0, i32 0, i32 3
  %11 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %10, i32 0, i32 0
  store [0 x %"serde_json::value::Value"]* %_9.0, [0 x %"serde_json::value::Value"]** %11, align 8
  %12 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %10, i32 0, i32 1
  store i64 %_9.1, i64* %12, align 8
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_slices
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$11into_slices17h91e947fa8d1c67a2E"({ [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_11 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_8 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %k = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
; call core::ptr::read
  call void @_ZN4core3ptr4read17h0019ecb6f850fbbeE(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %k, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_8 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_key_slice
  %3 = call { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_key_slice17h7d9c1a8de605999dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_8)
  %_6.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %3, 0
  %_6.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %3, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_11 to i8*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_val_slice
  %6 = call { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_val_slice17h3b6b4e9041ad9319E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_11)
  %_9.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %6, 0
  %_9.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %6, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %7 = bitcast { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %0 to { [0 x %"alloc::string::String"]*, i64 }*
  %8 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %7, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %_6.0, [0 x %"alloc::string::String"]** %8, align 8
  %9 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %7, i32 0, i32 1
  store i64 %_6.1, i64* %9, align 8
  %10 = getelementptr inbounds { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }, { [0 x i64], { [0 x %"alloc::string::String"]*, i64 }, [0 x i64], { [0 x %"serde_json::value::Value"]*, i64 }, [0 x i64] }* %0, i32 0, i32 3
  %11 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %10, i32 0, i32 0
  store [0 x %"serde_json::value::Value"]* %_9.0, [0 x %"serde_json::value::Value"]** %11, align 8
  %12 = getelementptr inbounds { [0 x %"serde_json::value::Value"]*, i64 }, { [0 x %"serde_json::value::Value"]*, i64 }* %10, i32 0, i32 1
  store i64 %_9.1, i64* %12, align 8
  ret void
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_key_slice
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_key_slice17h7d9c1a8de605999dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %header = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"*, align 8
  %_2 = alloca i8, align 1
  %4 = alloca { [0 x %"alloc::string::String"]*, i64 }, align 8
  store i64 8, i64* %3, align 8
  %5 = load i64, i64* %3, align 8
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %_2, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb6
  store i8 0, i8* %_2, align 1
  br label %bb4

bb3:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %6 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h4e282c8978f40a76E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb7

bb4:                                              ; preds = %bb2, %bb1
  %7 = load i8, i8* %_2, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

bb5:                                              ; preds = %start
  store i64 8, i64* %2, align 8
  %9 = load i64, i64* %2, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %_3 = icmp ugt i64 %5, %9
  br i1 %_3, label %bb3, label %bb2

bb7:                                              ; preds = %bb3
  br i1 %6, label %bb1, label %bb2

bb8:                                              ; preds = %bb4
  store i64 16, i64* %1, align 8
  %10 = load i64, i64* %1, align 8
  br label %bb10

bb9:                                              ; preds = %bb4
  %11 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  store [0 x %"alloc::string::String"]* inttoptr (i64 8 to [0 x %"alloc::string::String"]*), [0 x %"alloc::string::String"]** %11, align 8
  %12 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  store i64 0, i64* %12, align 8
  br label %bb17

bb10:                                             ; preds = %bb8
  store i64 16, i64* %0, align 8
  %13 = load i64, i64* %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  %_11 = icmp eq i64 %10, %13
  %_10 = xor i1 %_11, true
  br i1 %_10, label %bb13, label %bb12

bb12:                                             ; preds = %bb11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_21 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17he9ddd9088ae593b1E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb14

bb13:                                             ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [93 x i8] }>* @69 to [0 x i8]*), i64 93, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @70 to %"core::panic::Location"*))
  unreachable

bb14:                                             ; preds = %bb12
  %14 = bitcast %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_21 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"*
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"* %14, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"** %header, align 8
  %15 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"** %header, align 8
  %_28 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"* %15, i32 0, i32 7
  %keys = bitcast [0 x %"alloc::string::String"]* %_28 to %"alloc::string::String"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %16 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h7d825bf0cd1ce642E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::slice::from_raw_parts
  %17 = call { [0 x %"alloc::string::String"]*, i64 } @_ZN4core5slice14from_raw_parts17h00ea9ece2e311064E(%"alloc::string::String"* %keys, i64 %16)
  %18 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %17, 0
  %19 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %17, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %20 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %18, [0 x %"alloc::string::String"]** %20, align 8
  %21 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  store i64 %19, i64* %21, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb9
  %22 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  %23 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %22, align 8, !nonnull !2
  %24 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %23, 0
  %27 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %26, i64 %25, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %27
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_key_slice
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_key_slice17ha4d5f93714bfc7d1E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %header = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"*, align 8
  %_2 = alloca i8, align 1
  %4 = alloca { [0 x %"alloc::string::String"]*, i64 }, align 8
  store i64 8, i64* %3, align 8
  %5 = load i64, i64* %3, align 8
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %_2, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb6
  store i8 0, i8* %_2, align 1
  br label %bb4

bb3:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %6 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h0ef155c3678bd6a8E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb7

bb4:                                              ; preds = %bb2, %bb1
  %7 = load i8, i8* %_2, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

bb5:                                              ; preds = %start
  store i64 8, i64* %2, align 8
  %9 = load i64, i64* %2, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %_3 = icmp ugt i64 %5, %9
  br i1 %_3, label %bb3, label %bb2

bb7:                                              ; preds = %bb3
  br i1 %6, label %bb1, label %bb2

bb8:                                              ; preds = %bb4
  store i64 16, i64* %1, align 8
  %10 = load i64, i64* %1, align 8
  br label %bb10

bb9:                                              ; preds = %bb4
  %11 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  store [0 x %"alloc::string::String"]* inttoptr (i64 8 to [0 x %"alloc::string::String"]*), [0 x %"alloc::string::String"]** %11, align 8
  %12 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  store i64 0, i64* %12, align 8
  br label %bb17

bb10:                                             ; preds = %bb8
  store i64 16, i64* %0, align 8
  %13 = load i64, i64* %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  %_11 = icmp eq i64 %10, %13
  %_10 = xor i1 %_11, true
  br i1 %_10, label %bb13, label %bb12

bb12:                                             ; preds = %bb11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_21 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17hed72b25febd8e69eE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb14

bb13:                                             ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [93 x i8] }>* @69 to [0 x i8]*), i64 93, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @70 to %"core::panic::Location"*))
  unreachable

bb14:                                             ; preds = %bb12
  %14 = bitcast %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_21 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"*
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"* %14, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"** %header, align 8
  %15 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"** %header, align 8
  %_28 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"* %15, i32 0, i32 7
  %keys = bitcast [0 x %"alloc::string::String"]* %_28 to %"alloc::string::String"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %16 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h0d787b1b43e91302E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::slice::from_raw_parts
  %17 = call { [0 x %"alloc::string::String"]*, i64 } @_ZN4core5slice14from_raw_parts17h00ea9ece2e311064E(%"alloc::string::String"* %keys, i64 %16)
  %18 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %17, 0
  %19 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %17, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %20 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %18, [0 x %"alloc::string::String"]** %20, align 8
  %21 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  store i64 %19, i64* %21, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb9
  %22 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  %23 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %22, align 8, !nonnull !2
  %24 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %23, 0
  %27 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %26, i64 %25, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %27
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_key_slice
; Function Attrs: uwtable
define internal { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_key_slice17he9cb1797ae680b71E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %header = alloca %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"*, align 8
  %_2 = alloca i8, align 1
  %4 = alloca { [0 x %"alloc::string::String"]*, i64 }, align 8
  store i64 8, i64* %3, align 8
  %5 = load i64, i64* %3, align 8
  br label %bb5

bb1:                                              ; preds = %bb7
  store i8 1, i8* %_2, align 1
  br label %bb4

bb2:                                              ; preds = %bb7, %bb6
  store i8 0, i8* %_2, align 1
  br label %bb4

bb3:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %6 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h8f81ba18c71b1e1aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb7

bb4:                                              ; preds = %bb2, %bb1
  %7 = load i8, i8* %_2, align 1, !range !4
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb8

bb5:                                              ; preds = %start
  store i64 8, i64* %2, align 8
  %9 = load i64, i64* %2, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %_3 = icmp ugt i64 %5, %9
  br i1 %_3, label %bb3, label %bb2

bb7:                                              ; preds = %bb3
  br i1 %6, label %bb1, label %bb2

bb8:                                              ; preds = %bb4
  store i64 16, i64* %1, align 8
  %10 = load i64, i64* %1, align 8
  br label %bb10

bb9:                                              ; preds = %bb4
  %11 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  store [0 x %"alloc::string::String"]* inttoptr (i64 8 to [0 x %"alloc::string::String"]*), [0 x %"alloc::string::String"]** %11, align 8
  %12 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  store i64 0, i64* %12, align 8
  br label %bb17

bb10:                                             ; preds = %bb8
  store i64 16, i64* %0, align 8
  %13 = load i64, i64* %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10
  %_11 = icmp eq i64 %10, %13
  %_10 = xor i1 %_11, true
  br i1 %_10, label %bb13, label %bb12

bb12:                                             ; preds = %bb11
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_header
  %_21 = call align 8 dereferenceable(16) %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$9as_header17h3221e534f9b3912bE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb14

bb13:                                             ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [93 x i8] }>* @69 to [0 x i8]*), i64 93, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @70 to %"core::panic::Location"*))
  unreachable

bb14:                                             ; preds = %bb12
  %14 = bitcast %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, ()>"* %_21 to %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"*
  store %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"* %14, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"** %header, align 8
  %15 = load %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"*, %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"** %header, align 8
  %_28 = getelementptr inbounds %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>", %"alloc::collections::btree::node::NodeHeader<alloc::string::String, serde_json::value::Value, alloc::string::String>"* %15, i32 0, i32 7
  %keys = bitcast [0 x %"alloc::string::String"]* %_28 to %"alloc::string::String"*
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %16 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hc5f79ed557296febE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb15

bb15:                                             ; preds = %bb14
; call core::slice::from_raw_parts
  %17 = call { [0 x %"alloc::string::String"]*, i64 } @_ZN4core5slice14from_raw_parts17h00ea9ece2e311064E(%"alloc::string::String"* %keys, i64 %16)
  %18 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %17, 0
  %19 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %17, 1
  br label %bb16

bb16:                                             ; preds = %bb15
  %20 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  store [0 x %"alloc::string::String"]* %18, [0 x %"alloc::string::String"]** %20, align 8
  %21 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  store i64 %19, i64* %21, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb9
  %22 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 0
  %23 = load [0 x %"alloc::string::String"]*, [0 x %"alloc::string::String"]** %22, align 8, !nonnull !2
  %24 = getelementptr inbounds { [0 x %"alloc::string::String"]*, i64 }, { [0 x %"alloc::string::String"]*, i64 }* %4, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = insertvalue { [0 x %"alloc::string::String"]*, i64 } undef, [0 x %"alloc::string::String"]* %23, 0
  %27 = insertvalue { [0 x %"alloc::string::String"]*, i64 } %26, i64 %25, 1
  ret { [0 x %"alloc::string::String"]*, i64 } %27
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_val_slice
; Function Attrs: uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_val_slice17h3b6b4e9041ad9319E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_16 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h4e282c8978f40a76E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %0, true
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @43 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @71 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf
  %1 = call align 8 dereferenceable(632) %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$7as_leaf17h9f6c8eefabe90e75E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %1, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_16, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %2 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_16, align 8, !nonnull !2
  %_15 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %2, i32 0, i32 9
  %_13.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_15 to [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]*
  %3 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_13.0 to %"serde_json::value::Value"*
  br label %bb7

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %4 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h7d825bf0cd1ce642E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::slice::from_raw_parts
  %5 = call { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core5slice14from_raw_parts17hddc6ff619bd676b7E(%"serde_json::value::Value"* %3, i64 %4)
  %6 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, 0
  %7 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %8 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %6, 0
  %9 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %8, i64 %7, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %9
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut,K,V,Type>::into_val_slice
; Function Attrs: uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Immut$C$K$C$V$C$Type$GT$14into_val_slice17ha01116aac7932468E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_16 = alloca %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %0 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h8f81ba18c71b1e1aE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %0, true
  %_3 = xor i1 %_4, true
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @43 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @71 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf
  %1 = call align 8 dereferenceable(632) %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$7as_leaf17hdcf5d588b772d469E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  store %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %1, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_16, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %2 = load %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"** %_16, align 8, !nonnull !2
  %_15 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>", %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %2, i32 0, i32 9
  %_13.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_15 to [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]*
  %3 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<serde_json::value::Value>"]* %_13.0 to %"serde_json::value::Value"*
  br label %bb7

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %4 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17hc5f79ed557296febE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24) %self)
  br label %bb8

bb8:                                              ; preds = %bb7
; call core::slice::from_raw_parts
  %5 = call { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core5slice14from_raw_parts17hddc6ff619bd676b7E(%"serde_json::value::Value"* %3, i64 %4)
  %6 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, 0
  %7 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %8 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %6, 0
  %9 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %8, i64 %7, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %9
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal
; Function Attrs: uwtable
define internal align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11as_internal17h9d799b74e6467bd6E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*
  ret %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal
; Function Attrs: uwtable
define internal align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11as_internal17hfcc8c56f86cd89cdE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, align 8
  store %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %0, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8
  %1 = load %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"*, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %1, i32 0, i32 5
  %_5 = load i64*, i64** %2, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::as_ptr
  %3 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9f7a5f10394ae806E"(i64* nonnull %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %3 to %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"*
  ret %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_3
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17hae6e2193ee484661E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_13 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>", align 1
  %_9 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_8 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>", align 1
  %_4 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self to i64*
  %_3 = load i64, i64* %1, align 8
  %_2 = icmp eq i64 %_3, 0
  br i1 %_2, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self to i64*
  %_10 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self, i32 0, i32 5
  %_11 = load i64*, i64** %3, align 8, !nonnull !2
  %4 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self, i32 0, i32 7
  %_12 = load { i64*, i64 }*, { i64*, i64 }** %4, align 8
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9 to i64*
  store i64 %_10, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9, i32 0, i32 5
  store i64* %_11, i64** %6, align 8
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9, i32 0, i32 7
  store { i64*, i64 }* %_12, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Internal)>"*
  %9 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"*
  %10 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"* %9, i32 0, i32 1
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %10 to i8*
  %12 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %13 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 1, i64* %13, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self to i64*
  %_5 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self, i32 0, i32 5
  %_6 = load i64*, i64** %15, align 8, !nonnull !2
  %16 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self, i32 0, i32 7
  %_7 = load { i64*, i64 }*, { i64*, i64 }** %16, align 8
  %17 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4 to i64*
  store i64 %_5, i64* %17, align 8
  %18 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4, i32 0, i32 5
  store i64* %_6, i64** %18, align 8
  %19 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4, i32 0, i32 7
  store { i64*, i64 }* %_7, { i64*, i64 }** %19, align 8
  %20 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut, alloc::collections::btree::node::marker::Leaf)>"*
  %21 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"*
  %22 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"* %21, i32 0, i32 1
  %23 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %22 to i8*
  %24 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false)
  %25 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 0, i64* %25, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
; Function Attrs: uwtable
define internal void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17hbc14f608e7521773E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* noalias nocapture sret dereferenceable(32), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_13 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>", align 1
  %_9 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_8 = alloca %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>", align 1
  %_4 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self to i64*
  %_3 = load i64, i64* %1, align 8
  %_2 = icmp eq i64 %_3, 0
  br i1 %_2, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self to i64*
  %_10 = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self, i32 0, i32 5
  %_11 = load i64*, i64** %3, align 8, !nonnull !2
  %4 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self, i32 0, i32 7
  %_12 = load { i64*, i64 }*, { i64*, i64 }** %4, align 8
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9 to i64*
  store i64 %_10, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9, i32 0, i32 5
  store i64* %_11, i64** %6, align 8
  %7 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9, i32 0, i32 7
  store { i64*, i64 }* %_12, { i64*, i64 }** %7, align 8
  %8 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>"*
  %9 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"*
  %10 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Internal"* %9, i32 0, i32 1
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %10 to i8*
  %12 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %13 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 1, i64* %13, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %14 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self to i64*
  %_5 = load i64, i64* %14, align 8
  %15 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self, i32 0, i32 5
  %_6 = load i64*, i64** %15, align 8, !nonnull !2
  %16 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %self, i32 0, i32 7
  %_7 = load { i64*, i64 }*, { i64*, i64 }** %16, align 8
  %17 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4 to i64*
  store i64 %_5, i64* %17, align 8
  %18 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4, i32 0, i32 5
  store i64* %_6, i64** %18, align 8
  %19 = getelementptr inbounds %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4, i32 0, i32 7
  store { i64*, i64 }* %_7, { i64*, i64 }** %19, align 8
  %20 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4 to %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>"*
  %21 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"*
  %22 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>::Leaf"* %21, i32 0, i32 1
  %23 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %22 to i8*
  %24 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false)
  %25 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*
  store i64 0, i64* %25, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  ret void
}

; alloc::collections::btree::search::search_node
; Function Attrs: uwtable
define internal void @_ZN5alloc11collections5btree6search11search_node17h35c23d31a3dce31cE(%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(40), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %node, %"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %key) unnamed_addr #1 {
start:
  %_13 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_8 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
; call alloc::collections::btree::search::search_linear
  %1 = call { i64, i8 } @_ZN5alloc11collections5btree6search13search_linear17h7b1a969f2eae57f2E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %node, %"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %key)
  %idx = extractvalue { i64, i8 } %1, 0
  %2 = extractvalue { i64, i8 } %1, 1
  %3 = trunc i8 %2 to i1
  br label %bb1

bb1:                                              ; preds = %start
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %4 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_9 to i8*
  %5 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h68a2bee74f1ea0efE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* noalias nocapture sret dereferenceable(32) %_8, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_9, i64 %idx)
  br label %bb3

bb3:                                              ; preds = %bb2
  %6 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::Found"*
  %7 = getelementptr inbounds %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::Found", %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::Found"* %6, i32 0, i32 1
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %7 to i8*
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to i64*
  store i64 0, i64* %10, align 8
  br label %bb6

bb4:                                              ; preds = %bb1
  %11 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_13 to i8*
  %12 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h7b995aea9b2e779aE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_12, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_13, i64 %idx)
  br label %bb5

bb5:                                              ; preds = %bb4
  %13 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::GoDown"*
  %14 = getelementptr inbounds %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::GoDown", %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::GoDown"* %13, i32 0, i32 1
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %14 to i8*
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false)
  %17 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>"* %0 to i64*
  store i64 1, i64* %17, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  ret void
}

; alloc::collections::btree::search::search_tree
; Function Attrs: uwtable
define internal void @_ZN5alloc11collections5btree6search11search_tree17h2b22e922a6bcbc03E(%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(40), %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %node, %"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %key) unnamed_addr #1 {
start:
  %_17 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_16 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %internal = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_14 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %leaf = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_10 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %handle1 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_8 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %handle = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_4 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_3 = alloca %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  br label %bb1

bb1:                                              ; preds = %bb11, %start
  %1 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_4 to i8*
  %2 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
; call alloc::collections::btree::search::search_node
  call void @_ZN5alloc11collections5btree6search11search_node17h35c23d31a3dce31cE(%"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(40) %_3, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture dereferenceable(24) %_4, %"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %key)
  br label %bb2

bb2:                                              ; preds = %bb1
  %3 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>"* %_3 to i64*
  %_6 = load i64, i64* %3, align 8, !range !1
  switch i64 %_6, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb6
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %4 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>"* %_3 to %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::Found"*
  %5 = getelementptr inbounds %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::Found", %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::Found"* %4, i32 0, i32 1
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %handle to i8*
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false)
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_8 to i8*
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %handle to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>"* %0 to %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::Found"*
  %11 = getelementptr inbounds %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::Found", %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::Found"* %10, i32 0, i32 1
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %11 to i8*
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
  %14 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>"* %0 to i64*
  store i64 0, i64* %14, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb9
  ret void

bb6:                                              ; preds = %bb2
  %15 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>"* %_3 to %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::GoDown"*
  %16 = getelementptr inbounds %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::GoDown", %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>::GoDown"* %15, i32 0, i32 1
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %handle1 to i8*
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_11 to i8*
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %handle1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,HandleType>::force
  call void @"_ZN5alloc11collections5btree4node151Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$HandleType$GT$5force17hb097abac1ce6a8ceE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(40) %_10, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_11)
  br label %bb7

bb7:                                              ; preds = %bb6
  %21 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_10 to i64*
  %_12 = load i64, i64* %21, align 8, !range !1
  switch i64 %_12, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb10
  ]

bb8:                                              ; preds = %bb7
  unreachable

bb9:                                              ; preds = %bb7
  %22 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_10 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"*
  %23 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Leaf"* %22, i32 0, i32 1
  %24 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf to i8*
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false)
  %26 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_14 to i8*
  %27 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 32, i1 false)
  %28 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>"* %0 to %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::GoDown"*
  %29 = getelementptr inbounds %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::GoDown", %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>::GoDown"* %28, i32 0, i32 1
  %30 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %29 to i8*
  %31 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 32, i1 false)
  %32 = bitcast %"alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>"* %0 to i64*
  store i64 1, i64* %32, align 8
  br label %bb5

bb10:                                             ; preds = %bb7
  %33 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_10 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"*
  %34 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Internal"* %33, i32 0, i32 1
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %internal to i8*
  %36 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 32, i1 false)
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_17 to i8*
  %38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %internal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  call void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17h437ba6869a967d83E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias nocapture sret dereferenceable(24) %_16, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_17)
  br label %bb11

bb11:                                             ; preds = %bb10
  %39 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %node to i8*
  %40 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* %_16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false)
  br label %bb1
}

; alloc::collections::btree::search::search_linear
; Function Attrs: uwtable
define internal { i64, i8 } @_ZN5alloc11collections5btree6search13search_linear17h7b1a969f2eae57f2E(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %node, %"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %key) unnamed_addr #1 {
start:
  %_19 = alloca i8, align 1
  %_11 = alloca { i64, i64* }, align 8
  %iter = alloca %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>", align 8
  %_4 = alloca %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>", align 8
  %_3 = alloca %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>", align 8
  %0 = alloca { i64, i8 }, align 8
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::keys
  %1 = call { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4keys17hf3629ff00d93abc6E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %node)
  %_6.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %1, 0
  %_6.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %2 = call { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hba3b518ca89c473eE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %_6.0, i64 %_6.1)
  %3 = extractvalue { i64*, i64* } %2, 0
  %4 = extractvalue { i64*, i64* } %2, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h953b107c14c52446E(%"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* noalias nocapture sret dereferenceable(24) %_4, i64* %3, i64* %4)
  br label %bb3

bb3:                                              ; preds = %bb2
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdc700fa769d2e561E"(%"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* noalias nocapture sret dereferenceable(24) %_3, %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* noalias nocapture dereferenceable(24) %_4)
  br label %bb4

bb4:                                              ; preds = %bb3
  %5 = bitcast %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %iter to i8*
  %6 = bitcast %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb14, %bb4
; call <core::iter::adapters::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i64, i64* } @"_ZN99_$LT$core..iter..adapters..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0dd19be316ad08adE"(%"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* align 8 dereferenceable(24) %iter)
  store { i64, i64* } %7, { i64, i64* }* %_11, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_11, i32 0, i32 1
  %9 = bitcast i64** %8 to {}**
  %10 = load {}*, {}** %9, align 8
  %11 = icmp ule {}* %10, null
  %_14 = select i1 %11, i64 0, i64 1
  switch i64 %_14, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ]

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::keys
  %12 = call { [0 x %"alloc::string::String"]*, i64 } @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$4keys17hf3629ff00d93abc6E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::LeafOrInternal>"* noalias readonly align 8 dereferenceable(24) %node)
  %_28.0 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %12, 0
  %_28.1 = extractvalue { [0 x %"alloc::string::String"]*, i64 } %12, 1
  br label %bb18

bb8:                                              ; preds = %bb6
  unreachable

bb9:                                              ; preds = %bb6
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_11, i32 0, i32 0
  %val.0 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_11, i32 0, i32 1
  %val.1 = load i64*, i64** %14, align 8, !nonnull !2
  %k = bitcast i64* %val.1 to %"alloc::string::String"*
; call <T as core::borrow::Borrow<T>>::borrow
  %_21 = call align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17hdd92206ea117c6b5E"(%"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %k)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <alloc::string::String as core::cmp::Ord>::cmp
  %15 = call i8 @"_ZN56_$LT$alloc..string..String$u20$as$u20$core..cmp..Ord$GT$3cmp17h412bb8a8bdc7f93dE"(%"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %key, %"alloc::string::String"* noalias readonly align 8 dereferenceable(24) %_21), !range !16
  store i8 %15, i8* %_19, align 1
  br label %bb11

bb11:                                             ; preds = %bb10
  %16 = load i8, i8* %_19, align 1, !range !16
  %_24 = sext i8 %16 to i64
  switch i64 %_24, label %bb13 [
    i64 -1, label %bb12
    i64 0, label %bb15
    i64 1, label %bb14
  ]

bb12:                                             ; preds = %bb11
  %17 = bitcast { i64, i8 }* %0 to i64*
  store i64 %val.0, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 0, i8* %18, align 8
  br label %bb17

bb13:                                             ; preds = %bb11
  unreachable

bb14:                                             ; preds = %bb11
  br label %bb5

bb15:                                             ; preds = %bb11
  %19 = bitcast { i64, i8 }* %0 to i64*
  store i64 %val.0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 1, i8* %20, align 8
  br label %bb17

bb16:                                             ; preds = %bb19, %bb17
  %21 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !4
  %25 = trunc i8 %24 to i1
  %26 = zext i1 %25 to i8
  %27 = insertvalue { i64, i8 } undef, i64 %22, 0
  %28 = insertvalue { i64, i8 } %27, i8 %26, 1
  ret { i64, i8 } %28

bb17:                                             ; preds = %bb12, %bb15
  br label %bb16

bb18:                                             ; preds = %bb7
; call core::slice::<impl [T]>::len
  %29 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h2a3c878ec09fe90eE"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %_28.0, i64 %_28.1)
  br label %bb19

bb19:                                             ; preds = %bb18
  %30 = bitcast { i64, i8 }* %0 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1
  store i8 0, i8* %31, align 8
  br label %bb16
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint uwtable
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hd9e7cf79cb120421E"(%"alloc::string::String"* noalias nocapture sret dereferenceable(24), [0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2.i = alloca %"core::str::{{impl}}::as_bytes::Slices", align 8
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %1 = bitcast %"core::str::{{impl}}::as_bytes::Slices"* %_2.i to { [0 x i8]*, i64 }*
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8, !noalias !138
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8, !noalias !138
  %4 = bitcast %"core::str::{{impl}}::as_bytes::Slices"* %_2.i to { [0 x i8]*, i64 }*
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0
  %6 = load [0 x i8]*, [0 x i8]** %5, align 8, !noalias !138, !nonnull !2
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1
  %8 = load i64, i64* %7, align 8, !noalias !138
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %6, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1
  %_3.0 = extractvalue { [0 x i8]*, i64 } %10, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %10, 1
  br label %bb1

bb1:                                              ; preds = %start
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17h930c99799a4b98bfE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24) %_2, [0 x i8]* noalias nonnull readonly align 1 %_3.0, i64 %_3.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h3e6be4e4b01db994E(%"alloc::string::String"* noalias nocapture sret dereferenceable(24) %0, %"alloc::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %_2)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::vec::SetLenOnDrop::decrement_len
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc3vec12SetLenOnDrop13decrement_len17h45464a6b68f8f85eE({ i64*, i64 }* align 8 dereferenceable(16), i64 %decrement) unnamed_addr #0 {
start:
  %self = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %0, { i64*, i64 }** %self, align 8
  %1 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  %3 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = sub i64 %5, %decrement
  store i64 %6, i64* %2, align 8
  ret void
}

; alloc::vec::SetLenOnDrop::new
; Function Attrs: inlinehint uwtable
define internal { i64*, i64 } @_ZN5alloc3vec12SetLenOnDrop3new17hced5485d27303b80E(i64* align 8 dereferenceable(8) %len) unnamed_addr #0 {
start:
  %0 = alloca { i64*, i64 }, align 8
  %_2 = load i64, i64* %len, align 8
  %1 = bitcast { i64*, i64 }* %0 to i64**
  store i64* %len, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  store i64 %_2, i64* %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8, !nonnull !2
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = insertvalue { i64*, i64 } undef, i64* %4, 0
  %8 = insertvalue { i64*, i64 } %7, i64 %6, 1
  ret { i64*, i64 } %8
}

; alloc::vec::Vec<T>::as_mut_ptr
; Function Attrs: inlinehint uwtable
define internal %"serde_json::value::Value"* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17h269a9361d28c85a6E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %self = alloca %"alloc::vec::Vec<serde_json::value::Value>"*, align 8
  store %"alloc::vec::Vec<serde_json::value::Value>"* %0, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8
  %1 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_3 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %1 to { i64*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_7 = call %"serde_json::value::Value"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h31feb2587f2db75fE"({ i64*, i64 }* noalias readonly align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *mut T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h12419e701c54d1b6E"(%"serde_json::value::Value"* %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %2, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret %"serde_json::value::Value"* %_7
}

; alloc::vec::Vec<T>::as_mut_ptr
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17hbc0c5f9f7068086bE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %self = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %self, align 8
  %1 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %_3 = bitcast %"alloc::vec::Vec<u8>"* %1 to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_7 = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h64ed3ec0cb204733E"({ i8*, i64 }* noalias readonly align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *mut T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h30853d363a242cd3E"(i8* %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %2, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %_7
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h3f46cd4d65db8508E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24), i64 %capacity) unnamed_addr #0 {
start:
; call alloc::raw_vec::RawVec<T>::with_capacity
  %1 = call { i8*, i64 } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17h73527aae48ada285E"(i64 %capacity)
  %2 = extractvalue { i8*, i64 } %1, 0
  %3 = extractvalue { i8*, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 0
  store i8* %2, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 1
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 3
  store i64 0, i64* %7, align 8
  ret void
}

; alloc::vec::Vec<T>::extend_from_slice
; Function Attrs: uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$17extend_from_slice17hbe74cb868a246a6eE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, [0 x i8]* noalias nonnull readonly align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
; call core::slice::<impl [T]>::iter
  %0 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he2406e67e1a15259E"([0 x i8]* noalias nonnull readonly align 1 %other.0, i64 %other.1)
  %1 = extractvalue { i8*, i8* } %0, 0
  %2 = extractvalue { i8*, i8* } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as alloc::vec::SpecExtend<&T,core::slice::Iter<T>>>::spec_extend
  call void @"_ZN109_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..SpecExtend$LT$$RF$T$C$core..slice..Iter$LT$T$GT$$GT$$GT$11spec_extend17hc740559ffb375a4dE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i8* %1, i8* %2)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; alloc::vec::Vec<T>::len
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN5alloc3vec12Vec$LT$T$GT$3len17ha1386654566913eaE"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %self = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %self, align 8
  %1 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %1, i32 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h193ac73394eb716fE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24)) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*
  %2 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @72 to { i8*, i64 }*), i32 0, i32 0), align 8, !nonnull !2
  %3 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @72 to { i8*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 3
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hd3eccbe48c58c096E"(%"alloc::vec::Vec<serde_json::value::Value>"* noalias nocapture sret dereferenceable(24)) unnamed_addr #0 {
start:
  %1 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %0 to { i64*, i64 }*
  %2 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @73 to { i64*, i64 }*), i32 0, i32 0), align 8, !nonnull !2
  %3 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @73 to { i64*, i64 }*), i32 0, i32 1), align 8
  %4 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 0
  store i64* %2, i64** %4, align 8
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1, i32 0, i32 1
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"alloc::vec::Vec<serde_json::value::Value>", %"alloc::vec::Vec<serde_json::value::Value>"* %0, i32 0, i32 3
  store i64 0, i64* %6, align 8
  ret void
}

; alloc::vec::Vec<T>::push
; Function Attrs: inlinehint uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$4push17h66c29a1ebe7b1591E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24), %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %value) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_16 = alloca i8, align 1
  %_15 = alloca %"serde_json::value::Value", align 8
  %self = alloca %"alloc::vec::Vec<serde_json::value::Value>"*, align 8
  store %"alloc::vec::Vec<serde_json::value::Value>"* %0, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8
  store i8 0, i8* %_16, align 1
  store i8 1, i8* %_16, align 1
  %4 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
  %5 = getelementptr inbounds %"alloc::vec::Vec<serde_json::value::Value>", %"alloc::vec::Vec<serde_json::value::Value>"* %4, i32 0, i32 3
  %_4 = load i64, i64* %5, align 8
  %6 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_6 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %6 to { i64*, i64 }*
  store i64 32, i64* %1, align 8, !noalias !141
  %7 = load i64, i64* %1, align 8, !noalias !141
  %_2.i = icmp eq i64 %7, 0
  br i1 %_2.i, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %start
  %8 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_6, i32 0, i32 1
  %9 = load i64, i64* %8, align 8, !alias.scope !141
  store i64 %9, i64* %2, align 8, !noalias !141
  br label %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E.exit"

bb3.i:                                            ; preds = %start
  store i64 -1, i64* %2, align 8, !noalias !141
  br label %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E.exit"

"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E.exit": ; preds = %bb2.i, %bb3.i
  %10 = load i64, i64* %2, align 8, !noalias !141
  br label %bb2

bb1:                                              ; preds = %bb9, %bb10
  %11 = bitcast { i8*, i32 }* %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16

bb2:                                              ; preds = %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E.exit"
  %_3 = icmp eq i64 %_4, %10
  br i1 %_3, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %_8 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
; invoke alloc::vec::Vec<T>::reserve
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$7reserve17h4d9e61f516d70182E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %_8, i64 1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %_11 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
; invoke alloc::vec::Vec<T>::as_mut_ptr
  %17 = invoke %"serde_json::value::Value"* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17h269a9361d28c85a6E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %_11)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %18 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
  %19 = getelementptr inbounds %"alloc::vec::Vec<serde_json::value::Value>", %"alloc::vec::Vec<serde_json::value::Value>"* %18, i32 0, i32 3
  %_12 = load i64, i64* %19, align 8
; invoke core::ptr::<impl *mut T>::add
  %_14 = invoke %"serde_json::value::Value"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb6153962084a15b9E"(%"serde_json::value::Value"* %17, i64 %_12)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_16, align 1
  %20 = bitcast %"serde_json::value::Value"* %_15 to i8*
  %21 = bitcast %"serde_json::value::Value"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 32, i1 false)
; invoke core::ptr::write
  invoke void @_ZN4core3ptr5write17hf1a244efc178a16cE(%"serde_json::value::Value"* %_14, %"serde_json::value::Value"* noalias nocapture dereferenceable(32) %_15)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %22 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
  %23 = getelementptr inbounds %"alloc::vec::Vec<serde_json::value::Value>", %"alloc::vec::Vec<serde_json::value::Value>"* %22, i32 0, i32 3
  %24 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
  %25 = getelementptr inbounds %"alloc::vec::Vec<serde_json::value::Value>", %"alloc::vec::Vec<serde_json::value::Value>"* %24, i32 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %23, align 8
  ret void

bb9:                                              ; preds = %bb10
  store i8 0, i8* %_16, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %value) #14
  br label %bb1

bb10:                                             ; preds = %cleanup
  %28 = load i8, i8* %_16, align 1, !range !4
  %29 = trunc i8 %28 to i1
  br i1 %29, label %bb9, label %bb1

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb3
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %32, i32* %34, align 8
  br label %bb10
}

; alloc::vec::Vec<T>::clear
; Function Attrs: inlinehint uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$5clear17h424b6ad15462e554E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T>::truncate
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$8truncate17h2ed5297d5a7ee6aaE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self, i64 0)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T>::as_ptr
; Function Attrs: inlinehint uwtable
define internal i8* @"_ZN5alloc3vec12Vec$LT$T$GT$6as_ptr17hc5a8c5d53bf1553aE"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %self = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %self, align 8
  %1 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %_3 = bitcast %"alloc::vec::Vec<u8>"* %1 to { i8*, i64 }*
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_7 = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h64ed3ec0cb204733E"({ i8*, i64 }* noalias readonly align 8 dereferenceable(16) %_3)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *mut T>::is_null
  %2 = call zeroext i1 @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h30853d363a242cd3E"(i8* %_7)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %2, true
  call void @llvm.assume(i1 %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %_7
}

; alloc::vec::Vec<T>::reserve
; Function Attrs: uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$7reserve17h4d9e61f516d70182E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24), i64 %additional) unnamed_addr #1 {
start:
  %self = alloca %"alloc::vec::Vec<serde_json::value::Value>"*, align 8
  store %"alloc::vec::Vec<serde_json::value::Value>"* %0, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8
  %1 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_4 = bitcast %"alloc::vec::Vec<serde_json::value::Value>"* %1 to { i64*, i64 }*
  %2 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds %"alloc::vec::Vec<serde_json::value::Value>", %"alloc::vec::Vec<serde_json::value::Value>"* %2, i32 0, i32 3
  %_5 = load i64, i64* %3, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17heb554f1568ed679bE"({ i64*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T>::reserve
; Function Attrs: uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$7reserve17h5212ae0671e06415E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24), i64 %additional) unnamed_addr #1 {
start:
  %self = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %self, align 8
  %1 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %_4 = bitcast %"alloc::vec::Vec<u8>"* %1 to { i8*, i64 }*
  %2 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %2, i32 0, i32 3
  %_5 = load i64, i64* %3, align 8
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h2a6843e8662ade54E"({ i8*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::vec::Vec<T>::set_len
; Function Attrs: inlinehint uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$7set_len17hbfe99e7e439e91d5E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24), i64 %new_len) unnamed_addr #0 {
start:
  %self = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %self, align 8
  br i1 false, label %bb1, label %bb5

bb1:                                              ; preds = %start
  %_8 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
; call alloc::vec::Vec<T>::capacity
  %1 = call i64 @"_ZN5alloc3vec12Vec$LT$T$GT$8capacity17h79bb5993894c6977E"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24) %_8)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_5 = icmp ule i64 %new_len, %1
  %_4 = xor i1 %_5, true
  br i1 %_4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [44 x i8] }>* @74 to [0 x i8]*), i64 44, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @76 to %"core::panic::Location"*))
  unreachable

bb5:                                              ; preds = %bb3, %start
  %2 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %2, i32 0, i32 3
  store i64 %new_len, i64* %3, align 8
  ret void
}

; alloc::vec::Vec<T>::capacity
; Function Attrs: inlinehint uwtable
define internal i64 @"_ZN5alloc3vec12Vec$LT$T$GT$8capacity17h79bb5993894c6977E"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %self = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %self, align 8
  %3 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %_2 = bitcast %"alloc::vec::Vec<u8>"* %3 to { i8*, i64 }*
  store i64 1, i64* %1, align 8, !noalias !144
  %4 = load i64, i64* %1, align 8, !noalias !144
  %_2.i = icmp eq i64 %4, 0
  br i1 %_2.i, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %start
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_2, i32 0, i32 1
  %6 = load i64, i64* %5, align 8, !alias.scope !144
  store i64 %6, i64* %2, align 8, !noalias !144
  br label %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E.exit"

bb3.i:                                            ; preds = %start
  store i64 -1, i64* %2, align 8, !noalias !144
  br label %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E.exit"

"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E.exit": ; preds = %bb2.i, %bb3.i
  %7 = load i64, i64* %2, align 8, !noalias !144
  br label %bb1

bb1:                                              ; preds = %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E.exit"
  ret i64 %7
}

; alloc::vec::Vec<T>::truncate
; Function Attrs: uwtable
define internal void @"_ZN5alloc3vec12Vec$LT$T$GT$8truncate17h2ed5297d5a7ee6aaE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24), i64 %len) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_18 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %local_len = alloca { i64*, i64 }, align 8
  %ptr = alloca i8*, align 8
  %self = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %self, align 8
; call core::mem::needs_drop
  %2 = call zeroext i1 @_ZN4core3mem10needs_drop17h31d0057b544fa456E()
  br label %bb2

bb1:                                              ; preds = %bb9
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  br i1 %2, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %9 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %10 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %9, i32 0, i32 3
  %_32 = load i64, i64* %10, align 8
  %_30 = icmp ule i64 %len, %_32
  br i1 %_30, label %bb19, label %bb20

bb4:                                              ; preds = %bb2
  %11 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %12 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %11, i32 0, i32 3
  %current_len = load i64, i64* %12, align 8
  %_7 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
; call alloc::vec::Vec<T>::as_mut_ptr
  %13 = call i8* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17hbc0c5f9f7068086bE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_7)
  br label %bb5

bb5:                                              ; preds = %bb4
  %14 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %15 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %14, i32 0, i32 3
  %_8 = load i64, i64* %15, align 8
; call core::ptr::<impl *mut T>::add
  %16 = call i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h53a1d84ce18af2b4E"(i8* %13, i64 %_8)
  store i8* %16, i8** %ptr, align 8
  br label %bb6

bb6:                                              ; preds = %bb5
  %17 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %_11 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %17, i32 0, i32 3
; call alloc::vec::SetLenOnDrop::new
  %18 = call { i64*, i64 } @_ZN5alloc3vec12SetLenOnDrop3new17hced5485d27303b80E(i64* align 8 dereferenceable(8) %_11)
  store { i64*, i64 } %18, { i64*, i64 }* %local_len, align 8
  br label %bb7

bb7:                                              ; preds = %bb6
  %19 = bitcast { i64, i64 }* %_13 to i64*
  store i64 %len, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  store i64 %current_len, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %25 = invoke { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb727a63b56af1897E"(i64 %22, i64 %24)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %26 = extractvalue { i64, i64 } %25, 0
  %27 = extractvalue { i64, i64 } %25, 1
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1
  store i64 %27, i64* %29, align 8
  br label %bb10

bb9:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h1c670304e478fd14E({ i64*, i64 }* align 8 dereferenceable(16) %local_len) #14
  br label %bb1

bb10:                                             ; preds = %bb17, %bb8
; invoke core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %30 = invoke { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17he5daec5ffae6a45aE"({ i64, i64 }* align 8 dereferenceable(16) %iter)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  store { i64, i64 } %30, { i64, i64 }* %_18, align 8
  %31 = bitcast { i64, i64 }* %_18 to i64*
  %_21 = load i64, i64* %31, align 8, !range !1
  switch i64 %_21, label %bb13 [
    i64 0, label %bb12
    i64 1, label %bb14
  ]

bb12:                                             ; preds = %bb11
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h1c670304e478fd14E({ i64*, i64 }* align 8 dereferenceable(16) %local_len)
  br label %bb18

bb13:                                             ; preds = %bb11
  unreachable

bb14:                                             ; preds = %bb11
  %32 = bitcast { i64, i64 }* %_18 to %"core::option::Option<usize>::Some"*
  %33 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %32, i32 0, i32 1
  %val = load i64, i64* %33, align 8
; invoke alloc::vec::SetLenOnDrop::decrement_len
  invoke void @_ZN5alloc3vec12SetLenOnDrop13decrement_len17h45464a6b68f8f85eE({ i64*, i64 }* align 8 dereferenceable(16) %local_len, i64 1)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  %_27 = load i8*, i8** %ptr, align 8
; invoke core::ptr::<impl *mut T>::offset
  %34 = invoke i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h16cc69566f64fda6E"(i8* %_27, i64 -1)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  store i8* %34, i8** %ptr, align 8
  %_29 = load i8*, i8** %ptr, align 8
  br label %bb17

bb17:                                             ; preds = %bb16
  br label %bb10

bb18:                                             ; preds = %bb12
  br label %bb21

bb19:                                             ; preds = %bb3
  %35 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %36 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %35, i32 0, i32 3
  store i64 %len, i64* %36, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb3
  br label %bb21

bb21:                                             ; preds = %bb20, %bb18
  ret void

cleanup:                                          ; preds = %bb15, %bb14, %bb10, %bb7
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb9
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint uwtable
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17h84d4babc2e3863bbE(i64, i64) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::Layout::size
  %4 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::Layout::align
  %5 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = call i8* @__rust_alloc_zeroed(i64 %4, i64 %5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %6
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17h1e4f418ec741a5cbE(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %0 = alloca i8*, align 8
  %_3 = icmp eq i64 %size, 0
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
; call core::alloc::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %size, i64 %align)
  %_10.0 = extractvalue { i64, i64 } %1, 0
  %_10.1 = extractvalue { i64, i64 } %1, 1
  br label %bb3

bb2:                                              ; preds = %start
  %2 = inttoptr i64 %align to i8*
  store i8* %2, i8** %0, align 8
  br label %bb8

bb3:                                              ; preds = %bb1
; call alloc::alloc::alloc
  %_13 = call i8* @_ZN5alloc5alloc5alloc17ha9209d6434eacc6dE(i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::ptr::<impl *mut T>::is_null
  %3 = call zeroext i1 @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h30853d363a242cd3E"(i8* %_13)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_11 = xor i1 %3, true
  br i1 %_11, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17ha9817a3b2f207634E(i64 %_10.0, i64 %_10.1)
  unreachable

bb7:                                              ; preds = %bb5
  store i8* %_13, i8** %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb2
  %4 = load i8*, i8** %0, align 8
  ret i8* %4
}

; alloc::alloc::alloc
; Function Attrs: inlinehint uwtable
define internal i8* @_ZN5alloc5alloc5alloc17ha9209d6434eacc6dE(i64, i64) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::Layout::size
  %4 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::Layout::align
  %5 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = call i8* @__rust_alloc(i64 %4, i64 %5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %6
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc5alloc7dealloc17hf8c13e3b2729a0baE(i8* %ptr, i64, i64) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::Layout::size
  %4 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::Layout::align
  %5 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %4, i64 %5)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; alloc::alloc::realloc
; Function Attrs: inlinehint uwtable
define internal i8* @_ZN5alloc5alloc7realloc17h893b9067f438dc26E(i8* %ptr, i64, i64, i64 %new_size) unnamed_addr #0 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
; call core::alloc::Layout::size
  %4 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb1

bb1:                                              ; preds = %start
; call core::alloc::Layout::align
  %5 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb2

bb2:                                              ; preds = %bb1
  %6 = call i8* @__rust_realloc(i8* %ptr, i64 %4, i64 %5, i64 %new_size)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i8* %6
}

; alloc::alloc::box_free
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc5alloc8box_free17h1b8b080570ed8314E(i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17heb62f1aa527caa9eE"(i8* nonnull %ptr.0, i64 %ptr.1)
  %_6.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = mul i64 %_6.1, 1
  store i64 %3, i64* %1, align 8
  %_11 = load i64, i64* %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %4 = mul i64 %_6.1, 1
  store i64 1, i64* %0, align 8
  %_14 = load i64, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = icmp ne i64 %_11, 0
  br i1 %_10, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
; call core::alloc::Layout::from_size_align_unchecked
  %5 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %_11, i64 %_14)
  %_18.0 = extractvalue { i64, i64 } %5, 0
  %_18.1 = extractvalue { i64, i64 } %5, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %_16 = bitcast [0 x i8]* %_6.0 to i8*
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17hf8c13e3b2729a0baE(i8* %_16, i64 %_18.0, i64 %_18.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc5alloc8box_free17h284aa316ff9e6a63E(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
; call core::ptr::unique::Unique<T>::as_ptr
  %_6 = call %"std::io::error::Custom"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb886e99a86fb960bE"(i64* nonnull %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i64 24, i64* %1, align 8
  %_11 = load i64, i64* %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64 8, i64* %0, align 8
  %_14 = load i64, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = icmp ne i64 %_11, 0
  br i1 %_10, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
; call core::alloc::Layout::from_size_align_unchecked
  %2 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %_11, i64 %_14)
  %_18.0 = extractvalue { i64, i64 } %2, 0
  %_18.1 = extractvalue { i64, i64 } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %_16 = bitcast %"std::io::error::Custom"* %_6 to i8*
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17hf8c13e3b2729a0baE(i8* %_16, i64 %_18.0, i64 %_18.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc5alloc8box_free17h2dc0fdec5dcc27f8E(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
; call core::ptr::unique::Unique<T>::as_ptr
  %_6 = call %"serde_json::error::ErrorImpl"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb147840082b3164dE"(i64* nonnull %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i64 40, i64* %1, align 8
  %_11 = load i64, i64* %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64 8, i64* %0, align 8
  %_14 = load i64, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = icmp ne i64 %_11, 0
  br i1 %_10, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
; call core::alloc::Layout::from_size_align_unchecked
  %2 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %_11, i64 %_14)
  %_18.0 = extractvalue { i64, i64 } %2, 0
  %_18.1 = extractvalue { i64, i64 } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %_16 = bitcast %"serde_json::error::ErrorImpl"* %_6 to i8*
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17hf8c13e3b2729a0baE(i8* %_16, i64 %_18.0, i64 %_18.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc5alloc8box_free17h54c22ee91bc765abE(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
; call core::ptr::unique::Unique<T>::as_ptr
  %_6 = call %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hd4bc0c0e7c063ec1E"(i64* nonnull %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i64 632, i64* %1, align 8
  %_11 = load i64, i64* %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64 8, i64* %0, align 8
  %_14 = load i64, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = icmp ne i64 %_11, 0
  br i1 %_10, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
; call core::alloc::Layout::from_size_align_unchecked
  %2 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %_11, i64 %_14)
  %_18.0 = extractvalue { i64, i64 } %2, 0
  %_18.1 = extractvalue { i64, i64 } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %_16 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_6 to i8*
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17hf8c13e3b2729a0baE(i8* %_16, i64 %_18.0, i64 %_18.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc5alloc8box_free17haf65effeee696eebE(i64* nonnull %ptr) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
; call core::ptr::unique::Unique<T>::as_ptr
  %_6 = call %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h3d9c5e2b1907df05E"(i64* nonnull %ptr)
  br label %bb1

bb1:                                              ; preds = %start
  store i64 728, i64* %1, align 8
  %_11 = load i64, i64* %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64 8, i64* %0, align 8
  %_14 = load i64, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = icmp ne i64 %_11, 0
  br i1 %_10, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
; call core::alloc::Layout::from_size_align_unchecked
  %2 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %_11, i64 %_14)
  %_18.0 = extractvalue { i64, i64 } %2, 0
  %_18.1 = extractvalue { i64, i64 } %2, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %_16 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_6 to i8*
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17hf8c13e3b2729a0baE(i8* %_16, i64 %_18.0, i64 %_18.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void
}

; alloc::alloc::box_free
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc5alloc8box_free17hbe0df5002b0d92c2E(i8* nonnull %ptr.0, i64* noalias readonly align 8 dereferenceable(24) %ptr.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { {}*, [3 x i64]* } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha28c77819d6299ccE"(i8* nonnull %ptr.0, i64* noalias readonly align 8 dereferenceable(24) %ptr.1)
  %_6.0 = extractvalue { {}*, [3 x i64]* } %2, 0
  %_6.1 = extractvalue { {}*, [3 x i64]* } %2, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = bitcast [3 x i64]* %_6.1 to i64*
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = load i64, i64* %4, align 8, !invariant.load !2
  %6 = bitcast [3 x i64]* %_6.1 to i64*
  %7 = getelementptr inbounds i64, i64* %6, i64 2
  %8 = load i64, i64* %7, align 8, !invariant.load !2
  store i64 %5, i64* %1, align 8
  %_11 = load i64, i64* %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast [3 x i64]* %_6.1 to i64*
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = load i64, i64* %10, align 8, !invariant.load !2
  %12 = bitcast [3 x i64]* %_6.1 to i64*
  %13 = getelementptr inbounds i64, i64* %12, i64 2
  %14 = load i64, i64* %13, align 8, !invariant.load !2
  store i64 %14, i64* %0, align 8
  %_14 = load i64, i64* %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_10 = icmp ne i64 %_11, 0
  br i1 %_10, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
; call core::alloc::Layout::from_size_align_unchecked
  %15 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %_11, i64 %_14)
  %_18.0 = extractvalue { i64, i64 } %15, 0
  %_18.1 = extractvalue { i64, i64 } %15, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %_16 = bitcast {}* %_6.0 to i8*
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17hf8c13e3b2729a0baE(i8* %_16, i64 %_18.0, i64 %_18.1)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  ret void
}

; alloc::boxed::Box<T>::into_unique
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN5alloc5boxed12Box$LT$T$GT$11into_unique17h137f2170913366afE"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %b) unnamed_addr #0 {
start:
  %unique = alloca i64*, align 8
  %0 = bitcast %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %b to i64*
  store i64* %0, i64** %unique, align 8
; call core::mem::forget
  call void @_ZN4core3mem6forget17hade2db9dd77e4124E(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %b)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::as_mut
  %_6 = call align 8 dereferenceable(728) %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_mut17heb78ac564543efc8E"(i64** align 8 dereferenceable(8) %unique)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h0fc94f61e1d6af3cE"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64* %1
}

; alloc::boxed::Box<T>::into_unique
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN5alloc5boxed12Box$LT$T$GT$11into_unique17h939091f8bcc9117dE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(632) %b) unnamed_addr #0 {
start:
  %unique = alloca i64*, align 8
  %0 = bitcast %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %b to i64*
  store i64* %0, i64** %unique, align 8
; call core::mem::forget
  call void @_ZN4core3mem6forget17h9d730f8dd4ca169aE(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(632) %b)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::as_mut
  %_6 = call align 8 dereferenceable(632) %"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_mut17h17738d4634fa16feE"(i64** align 8 dereferenceable(8) %unique)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call nonnull i64* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hbbe03009970db42dE"(%"alloc::collections::btree::node::LeafNode<alloc::string::String, serde_json::value::Value>"* %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret i64* %1
}

; alloc::boxed::Box<T>::into_raw_non_null
; Function Attrs: inlinehint uwtable
define internal nonnull i64* @"_ZN5alloc5boxed12Box$LT$T$GT$17into_raw_non_null17he9d720860ff23784E"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %b) unnamed_addr #0 {
start:
; call alloc::boxed::Box<T>::into_unique
  %0 = call nonnull i64* @"_ZN5alloc5boxed12Box$LT$T$GT$11into_unique17h137f2170913366afE"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %b)
  br label %bb1

bb1:                                              ; preds = %start
; call <T as core::convert::Into<U>>::into
  %1 = call nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17haf979fea14c70202E"(i64* nonnull %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64* %1
}

; alloc::boxed::Box<T>::into_raw
; Function Attrs: inlinehint uwtable
define internal %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17h0fa529b83d360907E"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %b) unnamed_addr #0 {
start:
; call alloc::boxed::Box<T>::into_raw_non_null
  %0 = call nonnull i64* @"_ZN5alloc5boxed12Box$LT$T$GT$17into_raw_non_null17he9d720860ff23784E"(%"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* noalias align 8 dereferenceable(728) %b)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %1 = call %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4ee35685b99b38fdE"(i64* nonnull %0)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret %"alloc::collections::btree::node::InternalNode<alloc::string::String, serde_json::value::Value>"* %1
}

; alloc::slice::<impl [T]>::to_vec
; Function Attrs: inlinehint uwtable
define internal void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17h43b8b4245dbbcb7bE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24), [0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::to_vec
  call void @_ZN5alloc5slice4hack6to_vec17he79b4f175e70b57fE(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24) %0, [0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::slice::hack::to_vec
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc5slice4hack6to_vec17he79b4f175e70b57fE(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24), [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %vector = alloca %"alloc::vec::Vec<u8>", align 8
; call core::slice::<impl [T]>::len
  %2 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1)
  br label %bb2

bb1:                                              ; preds = %bb5
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h3f46cd4d65db8508E"(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24) %vector, i64 %2)
  br label %bb3

bb3:                                              ; preds = %bb2
; invoke alloc::vec::Vec<T>::extend_from_slice
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$17extend_from_slice17hbe74cb868a246a6eE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %vector, [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %9 = bitcast %"alloc::vec::Vec<u8>"* %0 to i8*
  %10 = bitcast %"alloc::vec::Vec<u8>"* %vector to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  ret void

bb5:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17haafb84759d87e45dE(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %vector) #14
  br label %bb1

cleanup:                                          ; preds = %bb3
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb5
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
; Function Attrs: uwtable
define internal void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17h930c99799a4b98bfE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24), [0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17h43b8b4245dbbcb7bE"(%"alloc::vec::Vec<u8>"* noalias nocapture sret dereferenceable(24) %0, [0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; alloc::string::String::from_utf8_unchecked
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc6string6String19from_utf8_unchecked17h3e6be4e4b01db994E(%"alloc::string::String"* noalias nocapture sret dereferenceable(24), %"alloc::vec::Vec<u8>"* noalias nocapture dereferenceable(24) %bytes) unnamed_addr #0 {
start:
  %_2 = alloca %"alloc::vec::Vec<u8>", align 8
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  %2 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %3 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*
  %4 = bitcast %"alloc::vec::Vec<u8>"* %3 to i8*
  %5 = bitcast %"alloc::vec::Vec<u8>"* %_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false)
  ret void
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint uwtable
define internal void @_ZN5alloc7raw_vec11alloc_guard17hab45d9b83a0cc337E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), i64 %alloc_size) unnamed_addr #0 {
start:
  %1 = alloca i64, align 8
  %_9 = alloca {}, align 1
  %_8 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store i64 8, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  br label %bb5

bb1:                                              ; preds = %bb3
  store i8 1, i8* %_2, align 1
  br label %bb4

bb2:                                              ; preds = %bb3, %bb5
  store i8 0, i8* %_2, align 1
  br label %bb4

bb3:                                              ; preds = %bb5
  %_5 = icmp ugt i64 %alloc_size, 9223372036854775807
  br i1 %_5, label %bb1, label %bb2

bb4:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %_2, align 1, !range !4
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb7, label %bb6

bb5:                                              ; preds = %start
  %_3 = icmp ult i64 %2, 8
  br i1 %_3, label %bb3, label %bb2

bb6:                                              ; preds = %bb4
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Ok", %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"* %5, i32 0, i32 1
  %7 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %7, align 8
  br label %bb8

bb7:                                              ; preds = %bb4
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  store i64 0, i64* %8, align 8
  %9 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %10 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %9, i32 0, i32 1
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 0
  store i64 %12, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i32 0, i32 1
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %17, align 8
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret void
}

; alloc::raw_vec::RawVec<T>::with_capacity
; Function Attrs: inlinehint uwtable
define internal { i8*, i64 } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17h73527aae48ada285E"(i64 %capacity) unnamed_addr #0 {
start:
  %_3 = alloca %"alloc::alloc::Global", align 1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %0 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h974ff8029ba866c4E"(i64 %capacity, i1 zeroext false)
  %1 = extractvalue { i8*, i64 } %0, 0
  %2 = extractvalue { i8*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1
  ret { i8*, i64 } %4
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: uwtable
define internal { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h974ff8029ba866c4E"(i64 %capacity, i1 zeroext %zeroed) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %result = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %_13 = alloca %"alloc::raw_vec::{{impl}}::allocate_in::{{closure}}<u8, alloc::alloc::Global>.0", align 1
  %_11 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_9 = alloca %"alloc::raw_vec::{{impl}}::allocate_in::{{closure}}<u8, alloc::alloc::Global>", align 1
  %3 = alloca { i8*, i64 }, align 8
  %a = alloca %"alloc::alloc::Global", align 1
  store i64 1, i64* %1, align 8
  %4 = load i64, i64* %1, align 8
  br label %bb2

bb1:                                              ; preds = %bb3
  %5 = bitcast { i8*, i32 }* %2 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
; invoke core::num::<impl usize>::checked_mul
  %11 = invoke { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h94d413bee1b445dbE"(i64 %capacity, i64 %4)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  br label %bb1

bb4:                                              ; preds = %bb2
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
; invoke core::option::Option<T>::unwrap_or_else
  %_12 = invoke i64 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17he95a5dcb2bed2414E"(i64 %12, i64 %13)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke alloc::raw_vec::alloc_guard
  invoke void @_ZN5alloc7raw_vec11alloc_guard17hab45d9b83a0cc337E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_11, i64 %_12)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke core::result::Result<T,E>::unwrap_or_else
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h08e3f07520f3a80bE"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_11)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %_15 = icmp eq i64 %_12, 0
  br i1 %_15, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  store i64 1, i64* %0, align 8
  %14 = load i64, i64* %0, align 8
  br label %bb10

bb9:                                              ; preds = %bb7
; invoke core::ptr::non_null::NonNull<T>::dangling
  %15 = invoke nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h3a1268a6073a01bfE"()
          to label %bb24 unwind label %cleanup

bb10:                                             ; preds = %bb8
; invoke core::alloc::Layout::from_size_align
  %16 = invoke { i64, i64 } @_ZN4core5alloc6Layout15from_size_align17h0adef352dbe7f645E(i64 %_12, i64 %14)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = extractvalue { i64, i64 } %16, 1
; invoke core::result::Result<T,E>::unwrap
  %19 = invoke { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h99e177f4d9a634efE"(i64 %17, i64 %18)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %_25.0 = extractvalue { i64, i64 } %19, 0
  %_25.1 = extractvalue { i64, i64 } %19, 1
  br i1 %zeroed, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
; invoke <alloc::alloc::Global as core::alloc::Alloc>::alloc
  %20 = invoke i8* @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$5alloc17hd4690fed23a31fc1E"(%"alloc::alloc::Global"* nonnull align 1 %a, i64 %_25.0, i64 %_25.1)
          to label %bb16 unwind label %cleanup

bb14:                                             ; preds = %bb12
; invoke <alloc::alloc::Global as core::alloc::Alloc>::alloc_zeroed
  %21 = invoke i8* @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$12alloc_zeroed17h6cbc57dcfbbcb93cE"(%"alloc::alloc::Global"* nonnull align 1 %a, i64 %_25.0, i64 %_25.1)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  store i8* %21, i8** %result, align 8
  br label %bb17

bb16:                                             ; preds = %bb13
  store i8* %20, i8** %result, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %22 = bitcast i8** %result to {}**
  %23 = load {}*, {}** %22, align 8
  %24 = icmp ule {}* %23, null
  %_28 = select i1 %24, i64 1, i64 0
  switch i64 %_28, label %bb19 [
    i64 0, label %bb20
    i64 1, label %bb18
  ]

bb18:                                             ; preds = %bb17
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17ha9817a3b2f207634E(i64 %_25.0, i64 %_25.1)
          to label %unreachable unwind label %cleanup

bb19:                                             ; preds = %bb17
  unreachable

bb20:                                             ; preds = %bb17
  %ptr1 = load i8*, i8** %result, align 8, !nonnull !2
; invoke core::ptr::non_null::NonNull<T>::cast
  %25 = invoke nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h704a5e13d3777f84E"(i8* nonnull %ptr1)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb20
  store i8* %25, i8** %ptr, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb24
  %_33 = load i8*, i8** %ptr, align 8, !nonnull !2
; invoke <T as core::convert::Into<U>>::into
  %26 = invoke nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h95e1d751cb404257E"(i8* nonnull %_33)
          to label %bb23 unwind label %cleanup

bb23:                                             ; preds = %bb22
  %27 = bitcast { i8*, i64 }* %3 to i8**
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  store i64 %capacity, i64* %28, align 8
  %29 = bitcast { i8*, i64 }* %3 to %"alloc::alloc::Global"*
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8, !nonnull !2
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = insertvalue { i8*, i64 } undef, i8* %31, 0
  %35 = insertvalue { i8*, i64 } %34, i64 %33, 1
  ret { i8*, i64 } %35

bb24:                                             ; preds = %bb9
  store i8* %15, i8** %ptr, align 8
  br label %bb22

cleanup:                                          ; preds = %bb22, %bb20, %bb18, %bb13, %bb14, %bb11, %bb10, %bb9, %bb6, %bb5, %bb4, %bb2
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  %38 = extractvalue { i8*, i32 } %36, 1
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %38, i32* %40, align 8
  br label %bb3

unreachable:                                      ; preds = %bb18
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::allocate_in::{{closure}}
; Function Attrs: uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h28802fe0a557cd06E"(i64 %_2.0, i64 %_2.1) unnamed_addr #1 {
start:
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hd96c417e4217a689E()
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::allocate_in::{{closure}}
; Function Attrs: uwtable
define internal i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in28_$u7b$$u7b$closure$u7d$$u7d$17h8af7d74692f2d036E"() unnamed_addr #1 {
start:
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hd96c417e4217a689E()
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::current_layout
; Function Attrs: uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_layout17h2f97f1992cb8f5d5E"({ i64*, i64 }* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_3 = load i64, i64* %3, align 8
  %_2 = icmp eq i64 %_3, 0
  br i1 %_2, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i64 8, i64* %1, align 8
  %4 = load i64, i64* %1, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 0, i64* %5, align 8
  br label %bb6

bb3:                                              ; preds = %bb1
  store i64 32, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_7 = load i64, i64* %7, align 8
  %size = mul i64 %6, %_7
; call core::alloc::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %size, i64 %4)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %10, i64* %12, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; alloc::raw_vec::RawVec<T,A>::current_layout
; Function Attrs: uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_layout17h6ef18dc9a7cd4f39E"({ i8*, i64 }* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_3 = load i64, i64* %3, align 8
  %_2 = icmp eq i64 %_3, 0
  br i1 %_2, label %bb2, label %bb1

bb1:                                              ; preds = %start
  store i64 1, i64* %1, align 8
  %4 = load i64, i64* %1, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 0, i64* %5, align 8
  br label %bb6

bb3:                                              ; preds = %bb1
  store i64 1, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_7 = load i64, i64* %7, align 8
  %size = mul i64 %6, %_7
; call core::alloc::Layout::from_size_align_unchecked
  %8 = call { i64, i64 } @_ZN4core5alloc6Layout25from_size_align_unchecked17h43636a87a38c2e2eE(i64 %size, i64 %4)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  br label %bb5

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %10, i64* %12, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; alloc::raw_vec::RawVec<T,A>::dealloc_buffer
; Function Attrs: uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14dealloc_buffer17h15949f4ebcc0f0f2E"({ i64*, i64 }* align 8 dereferenceable(16)) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %_5 = alloca { i64, i64 }, align 8
  %self = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %0, { i64*, i64 }** %self, align 8
  store i64 32, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp ne i64 %2, 0
  br i1 %_3, label %bb2, label %bb9

bb2:                                              ; preds = %bb1
  %_6 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
; call alloc::raw_vec::RawVec<T,A>::current_layout
  %3 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_layout17h2f97f1992cb8f5d5E"({ i64*, i64 }* noalias readonly align 8 dereferenceable(16) %_6)
  store { i64, i64 } %3, { i64, i64 }* %_5, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ule i64 %5, 0
  %_7 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_7, 1
  br i1 %7, label %bb4, label %bb8

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %layout.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %layout.1 = load i64, i64* %9, align 8, !range !28
  %10 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %_10 = bitcast { i64*, i64 }* %10 to %"alloc::alloc::Global"*
  %11 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %12 = bitcast { i64*, i64 }* %11 to i64**
  %_13 = load i64*, i64** %12, align 8, !nonnull !2
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %13 = call nonnull i64* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h7a43e202f2a069c3E"(i64* nonnull %_13)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::ptr::non_null::NonNull<T>::cast
  %14 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6f90f88bb419c9daE"(i64* nonnull %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <alloc::alloc::Global as core::alloc::Alloc>::dealloc
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$7dealloc17hf008da6327a79dbdE"(%"alloc::alloc::Global"* nonnull align 1 %_10, i8* nonnull %14, i64 %layout.0, i64 %layout.1)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9

bb9:                                              ; preds = %bb8, %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::dealloc_buffer
; Function Attrs: uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14dealloc_buffer17h72b04f78cb022be9E"({ i8*, i64 }* align 8 dereferenceable(16)) unnamed_addr #1 {
start:
  %1 = alloca i64, align 8
  %_5 = alloca { i64, i64 }, align 8
  %self = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %0, { i8*, i64 }** %self, align 8
  store i64 1, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp ne i64 %2, 0
  br i1 %_3, label %bb2, label %bb9

bb2:                                              ; preds = %bb1
  %_6 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
; call alloc::raw_vec::RawVec<T,A>::current_layout
  %3 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_layout17h6ef18dc9a7cd4f39E"({ i8*, i64 }* noalias readonly align 8 dereferenceable(16) %_6)
  store { i64, i64 } %3, { i64, i64 }* %_5, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ule i64 %5, 0
  %_7 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_7, 1
  br i1 %7, label %bb4, label %bb8

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0
  %layout.0 = load i64, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1
  %layout.1 = load i64, i64* %9, align 8, !range !28
  %10 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
  %_10 = bitcast { i8*, i64 }* %10 to %"alloc::alloc::Global"*
  %11 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
  %12 = bitcast { i8*, i64 }* %11 to i8**
  %_13 = load i8*, i8** %12, align 8, !nonnull !2
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %13 = call nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h1ffab30719b4bf3dE"(i8* nonnull %_13)
  br label %bb5

bb5:                                              ; preds = %bb4
; call core::ptr::non_null::NonNull<T>::cast
  %14 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h704a5e13d3777f84E"(i8* nonnull %13)
  br label %bb6

bb6:                                              ; preds = %bb5
; call <alloc::alloc::Global as core::alloc::Alloc>::dealloc
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$7dealloc17hf008da6327a79dbdE"(%"alloc::alloc::Global"* nonnull align 1 %_10, i8* nonnull %14, i64 %layout.0, i64 %layout.1)
  br label %bb7

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9

bb9:                                              ; preds = %bb8, %bb1
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_internal
; Function Attrs: uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_internal17h3bc240abe88fc944E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), { i64*, i64 }* align 8 dereferenceable(16), i64 %used_capacity, i64 %needed_extra_capacity, i1 zeroext %fallibility, i1 zeroext) unnamed_addr #1 {
start:
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %_97 = alloca {}, align 1
  %_91 = alloca {}, align 1
  %_89 = alloca { i64, i64 }, align 8
  %_83 = alloca { i8*, i8 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %_58 = alloca { i64, i64 }, align 8
  %res = alloca i8*, align 8
  %_49 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_48 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_41 = alloca %"alloc::raw_vec::{{impl}}::reserve_internal::{{closure}}<serde_json::value::Value, alloc::alloc::Global>", align 1
  %_38 = alloca %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>", align 8
  %_37 = alloca %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %_27 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %_26 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %_20 = alloca { i64, i64 }, align 8
  %_16 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %_15 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %new_cap = alloca i64, align 8
  %_12 = alloca {}, align 1
  %strategy = alloca i8, align 1
  %self = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %1, { i64*, i64 }** %self, align 8
  %5 = zext i1 %2 to i8
  store i8 %5, i8* %strategy, align 1
  %_9 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  store i64 32, i64* %3, align 8, !noalias !147
  %6 = load i64, i64* %3, align 8, !noalias !147
  %_2.i = icmp eq i64 %6, 0
  br i1 %_2.i, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %start
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_9, i32 0, i32 1
  %8 = load i64, i64* %7, align 8, !alias.scope !147
  store i64 %8, i64* %4, align 8, !noalias !147
  br label %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E.exit"

bb3.i:                                            ; preds = %start
  store i64 -1, i64* %4, align 8, !noalias !147
  br label %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E.exit"

"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E.exit": ; preds = %bb2.i, %bb3.i
  %9 = load i64, i64* %4, align 8, !noalias !147
  br label %bb1

bb1:                                              ; preds = %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E.exit"
; call core::num::<impl usize>::wrapping_sub
  %10 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h38504eb62fe2ddbeE"(i64 %9, i64 %used_capacity)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_6 = icmp uge i64 %10, %needed_extra_capacity
  br i1 %_6, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %11 = load i8, i8* %strategy, align 1, !range !4
  %12 = trunc i8 %11 to i1
  %_14 = zext i1 %12 to i64
  switch i64 %_14, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb4:                                              ; preds = %bb2
  %13 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Ok", %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"* %13, i32 0, i32 1
  %15 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %15, align 8
  br label %bb5

bb5:                                              ; preds = %bb66, %bb16, %bb4
  ret void

bb6:                                              ; preds = %bb3
  %_28 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
; call alloc::raw_vec::RawVec<T,A>::amortized_new_size
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$18amortized_new_size17h1e86e234977b512fE"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_27, { i64*, i64 }* noalias readonly align 8 dereferenceable(16) %_28, i64 %used_capacity, i64 %needed_extra_capacity)
  br label %bb18

bb7:                                              ; preds = %bb3
  unreachable

bb8:                                              ; preds = %bb3
; call core::num::<impl usize>::checked_add
  %16 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h993a87cd7fb4ce2fE"(i64 %used_capacity, i64 %needed_extra_capacity)
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = extractvalue { i64, i64 } %16, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_20, i32 0, i32 1
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_20, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_20, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h866b39de6d7069e9E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_16, i64 %17, i64 %18, i64 %21, i64 %23)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha902dd9cbf70afcfE"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_15, %"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_16)
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_15 to i64*
  %_21 = load i64, i64* %24, align 8, !range !1
  switch i64 %_21, label %bb12 [
    i64 0, label %bb17
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb11
  unreachable

bb13:                                             ; preds = %bb11
  %25 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_15 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Err", %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  %err.01 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  %err.12 = load i64, i64* %28, align 8
; call <T as core::convert::From<T>>::from
  %29 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.01, i64 %err.12)
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h621c194233337c39E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %30, i64 %31)
  br label %bb15

bb15:                                             ; preds = %bb14
  br label %bb16

bb16:                                             ; preds = %bb33, %bb15, %bb23
  br label %bb5

bb17:                                             ; preds = %bb11
  %32 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_15 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"*
  %33 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"* %32, i32 0, i32 1
  %val3 = load i64, i64* %33, align 8
  store i64 %val3, i64* %new_cap, align 8
  br label %bb25

bb18:                                             ; preds = %bb6
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha902dd9cbf70afcfE"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_26, %"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_27)
  br label %bb19

bb19:                                             ; preds = %bb18
  %34 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_26 to i64*
  %_31 = load i64, i64* %34, align 8, !range !1
  switch i64 %_31, label %bb20 [
    i64 0, label %bb24
    i64 1, label %bb21
  ]

bb20:                                             ; preds = %bb19
  unreachable

bb21:                                             ; preds = %bb19
  %35 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_26 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"*
  %36 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Err", %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"* %35, i32 0, i32 1
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0
  %err.0 = load i64, i64* %37, align 8
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1
  %err.1 = load i64, i64* %38, align 8
; call <T as core::convert::From<T>>::from
  %39 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.0, i64 %err.1)
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  br label %bb22

bb22:                                             ; preds = %bb21
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h621c194233337c39E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %40, i64 %41)
  br label %bb23

bb23:                                             ; preds = %bb22
  br label %bb16

bb24:                                             ; preds = %bb19
  %42 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_26 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"*
  %43 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"* %42, i32 0, i32 1
  %val = load i64, i64* %43, align 8
  store i64 %val, i64* %new_cap, align 8
  br label %bb25

bb25:                                             ; preds = %bb17, %bb24
  %_40 = load i64, i64* %new_cap, align 8
; call core::alloc::Layout::array
  %44 = call { i64, i64 } @_ZN4core5alloc6Layout5array17h5f8fefd61ec91d02E(i64 %_40)
  %45 = extractvalue { i64, i64 } %44, 0
  %46 = extractvalue { i64, i64 } %44, 1
  br label %bb26

bb26:                                             ; preds = %bb25
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17haa4aa4cca1b4d4f8E"(%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_38, i64 %45, i64 %46)
  br label %bb27

bb27:                                             ; preds = %bb26
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h8e66be9ca5b15ea6E"(%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_37, %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_38)
  br label %bb28

bb28:                                             ; preds = %bb27
  %47 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %_37 to i64*
  %_42 = load i64, i64* %47, align 8, !range !1
  switch i64 %_42, label %bb29 [
    i64 0, label %bb34
    i64 1, label %bb30
  ]

bb29:                                             ; preds = %bb28
  unreachable

bb30:                                             ; preds = %bb28
  %48 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %_37 to %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err"*
  %49 = getelementptr inbounds %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err"* %48, i32 0, i32 1
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0
  %err.04 = load i64, i64* %50, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1
  %err.15 = load i64, i64* %51, align 8
; call <T as core::convert::From<T>>::from
  %52 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.04, i64 %err.15)
  %53 = extractvalue { i64, i64 } %52, 0
  %54 = extractvalue { i64, i64 } %52, 1
  br label %bb31

bb31:                                             ; preds = %bb30
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h621c194233337c39E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %53, i64 %54)
  br label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb60, %bb41, %bb32
  br label %bb16

bb34:                                             ; preds = %bb28
  %55 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %_37 to %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok"*
  %56 = getelementptr inbounds %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok"* %55, i32 0, i32 1
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %56, i32 0, i32 0
  %val.0 = load i64, i64* %57, align 8
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %56, i32 0, i32 1
  %val.1 = load i64, i64* %58, align 8, !range !28
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %val.0, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %val.1, i64* %60, align 8
; call core::alloc::Layout::size
  %61 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %new_layout)
  br label %bb35

bb35:                                             ; preds = %bb34
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17hab45d9b83a0cc337E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_49, i64 %61)
  br label %bb36

bb36:                                             ; preds = %bb35
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h17a5f3d199c35768E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_48, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_49)
  br label %bb37

bb37:                                             ; preds = %bb36
  %62 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_48 to i64*
  %_52 = load i64, i64* %62, align 8, !range !1
  switch i64 %_52, label %bb38 [
    i64 0, label %bb42
    i64 1, label %bb39
  ]

bb38:                                             ; preds = %bb37
  unreachable

bb39:                                             ; preds = %bb37
  %63 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_48 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %64 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %63, i32 0, i32 1
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %64, i32 0, i32 0
  %err.06 = load i64, i64* %65, align 8
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %64, i32 0, i32 1
  %err.17 = load i64, i64* %66, align 8
; call <T as core::convert::From<T>>::from
  %67 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.06, i64 %err.17)
  %68 = extractvalue { i64, i64 } %67, 0
  %69 = extractvalue { i64, i64 } %67, 1
  br label %bb40

bb40:                                             ; preds = %bb39
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h621c194233337c39E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %68, i64 %69)
  br label %bb41

bb41:                                             ; preds = %bb40
  br label %bb33

bb42:                                             ; preds = %bb37
  %_59 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
; call alloc::raw_vec::RawVec<T,A>::current_layout
  %70 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_layout17h2f97f1992cb8f5d5E"({ i64*, i64 }* noalias readonly align 8 dereferenceable(16) %_59)
  store { i64, i64 } %70, { i64, i64 }* %_58, align 8
  br label %bb43

bb43:                                             ; preds = %bb42
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp ule i64 %72, 0
  %_60 = select i1 %73, i64 0, i64 1
  switch i64 %_60, label %bb45 [
    i64 0, label %bb44
    i64 1, label %bb46
  ]

bb44:                                             ; preds = %bb43
  %74 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %_80 = bitcast { i64*, i64 }* %74 to %"alloc::alloc::Global"*
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_81.0 = load i64, i64* %75, align 8
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_81.1 = load i64, i64* %76, align 8, !range !28
; call <alloc::alloc::Global as core::alloc::Alloc>::alloc
  %77 = call i8* @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$5alloc17hd4690fed23a31fc1E"(%"alloc::alloc::Global"* nonnull align 1 %_80, i64 %_81.0, i64 %_81.1)
  store i8* %77, i8** %res, align 8
  br label %bb57

bb45:                                             ; preds = %bb43
  unreachable

bb46:                                             ; preds = %bb43
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1
  %81 = load i64, i64* %80, align 8, !range !28
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %79, i64* %82, align 8
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %81, i64* %83, align 8
  br i1 false, label %bb47, label %bb52

bb47:                                             ; preds = %bb46
; call core::alloc::Layout::align
  %84 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %new_layout)
  br label %bb48

bb48:                                             ; preds = %bb47
; call core::alloc::Layout::align
  %85 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb49

bb49:                                             ; preds = %bb48
  %_64 = icmp eq i64 %84, %85
  %_63 = xor i1 %_64, true
  br i1 %_63, label %bb51, label %bb50

bb50:                                             ; preds = %bb49
  br label %bb52

bb51:                                             ; preds = %bb49
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [54 x i8] }>* @77 to [0 x i8]*), i64 54, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @79 to %"core::panic::Location"*))
  unreachable

bb52:                                             ; preds = %bb50, %bb46
  %86 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %_73 = bitcast { i64*, i64 }* %86 to %"alloc::alloc::Global"*
  %87 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %88 = bitcast { i64*, i64 }* %87 to i64**
  %_76 = load i64*, i64** %88, align 8, !nonnull !2
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %89 = call nonnull i64* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h7a43e202f2a069c3E"(i64* nonnull %_76)
  br label %bb53

bb53:                                             ; preds = %bb52
; call core::ptr::non_null::NonNull<T>::cast
  %90 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6f90f88bb419c9daE"(i64* nonnull %89)
  br label %bb54

bb54:                                             ; preds = %bb53
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_77.0 = load i64, i64* %91, align 8
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_77.1 = load i64, i64* %92, align 8, !range !28
; call core::alloc::Layout::size
  %93 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %new_layout)
  br label %bb55

bb55:                                             ; preds = %bb54
; call <alloc::alloc::Global as core::alloc::Alloc>::realloc
  %94 = call i8* @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$7realloc17hb76fae960f35a09bE"(%"alloc::alloc::Global"* nonnull align 1 %_73, i8* nonnull %90, i64 %_77.0, i64 %_77.1, i64 %93)
  store i8* %94, i8** %res, align 8
  br label %bb56

bb56:                                             ; preds = %bb55
  br label %bb58

bb57:                                             ; preds = %bb44
  br label %bb58

bb58:                                             ; preds = %bb57, %bb56
  %_84 = load i8*, i8** %res, align 8
  %95 = bitcast { i8*, i8 }* %_83 to i8**
  store i8* %_84, i8** %95, align 8
  %96 = getelementptr inbounds { i8*, i8 }, { i8*, i8 }* %_83, i32 0, i32 1
  %97 = zext i1 %fallibility to i8
  store i8 %97, i8* %96, align 8
  %98 = bitcast { i8*, i8 }* %_83 to i8**
  %99 = bitcast i8** %98 to {}**
  %100 = load {}*, {}** %99, align 8
  %101 = icmp ule {}* %100, null
  %_87 = select i1 %101, i64 1, i64 0
  switch i64 %_87, label %bb63 [
    i64 0, label %bb64
    i64 1, label %bb61
  ]

bb59:                                             ; preds = %bb61
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_88.0 = load i64, i64* %102, align 8
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_88.1 = load i64, i64* %103, align 8, !range !28
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17ha9817a3b2f207634E(i64 %_88.0, i64 %_88.1)
  unreachable

bb60:                                             ; preds = %bb61
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_90.0 = load i64, i64* %104, align 8
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_90.1 = load i64, i64* %105, align 8, !range !28
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_89, i32 0, i32 0
  store i64 %_90.0, i64* %106, align 8
  %107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_89, i32 0, i32 1
  store i64 %_90.1, i64* %107, align 8
  %108 = bitcast { i64, i64 }* %_89 to {}*
  %109 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %110 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %109, i32 0, i32 1
  %111 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_89, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_89, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %110, i32 0, i32 0
  store i64 %112, i64* %115, align 8
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %110, i32 0, i32 1
  store i64 %114, i64* %116, align 8
  %117 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %117, align 8
  br label %bb33

bb61:                                             ; preds = %bb58
  %118 = getelementptr inbounds { i8*, i8 }, { i8*, i8 }* %_83, i32 0, i32 1
  %119 = load i8, i8* %118, align 8, !range !4
  %120 = trunc i8 %119 to i1
  %_86 = zext i1 %120 to i64
  switch i64 %_86, label %bb62 [
    i64 0, label %bb60
    i64 1, label %bb59
  ]

bb62:                                             ; preds = %bb61
  unreachable

bb63:                                             ; preds = %bb58
  unreachable

bb64:                                             ; preds = %bb58
  %121 = bitcast { i8*, i8 }* %_83 to i8**
  %ptr = load i8*, i8** %121, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::cast
  %122 = call nonnull i64* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h44e0a131ff9f5c12E"(i8* nonnull %ptr)
  br label %bb65

bb65:                                             ; preds = %bb64
; call <T as core::convert::Into<U>>::into
  %123 = call nonnull i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h442520f3b930bae4E"(i64* nonnull %122)
  br label %bb66

bb66:                                             ; preds = %bb65
  %124 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %125 = bitcast { i64*, i64 }* %124 to i64**
  store i64* %123, i64** %125, align 8
  %_96 = load i64, i64* %new_cap, align 8
  %126 = load { i64*, i64 }*, { i64*, i64 }** %self, align 8, !nonnull !2
  %127 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %126, i32 0, i32 1
  store i64 %_96, i64* %127, align 8
  %128 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"*
  %129 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Ok", %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"* %128, i32 0, i32 1
  %130 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %130, align 8
  br label %bb5
}

; alloc::raw_vec::RawVec<T,A>::reserve_internal
; Function Attrs: uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_internal17hc320efef15822f89E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), { i8*, i64 }* align 8 dereferenceable(16), i64 %used_capacity, i64 %needed_extra_capacity, i1 zeroext %fallibility, i1 zeroext) unnamed_addr #1 {
start:
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %_97 = alloca {}, align 1
  %_91 = alloca {}, align 1
  %_89 = alloca { i64, i64 }, align 8
  %_83 = alloca { i8*, i8 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %_58 = alloca { i64, i64 }, align 8
  %res = alloca i8*, align 8
  %_49 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_48 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  %_41 = alloca %"alloc::raw_vec::{{impl}}::reserve_internal::{{closure}}<u8, alloc::alloc::Global>", align 1
  %_38 = alloca %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>", align 8
  %_37 = alloca %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %_27 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %_26 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %_20 = alloca { i64, i64 }, align 8
  %_16 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %_15 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %new_cap = alloca i64, align 8
  %_12 = alloca {}, align 1
  %strategy = alloca i8, align 1
  %self = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %1, { i8*, i64 }** %self, align 8
  %5 = zext i1 %2 to i8
  store i8 %5, i8* %strategy, align 1
  %_9 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
  store i64 1, i64* %3, align 8, !noalias !150
  %6 = load i64, i64* %3, align 8, !noalias !150
  %_2.i = icmp eq i64 %6, 0
  br i1 %_2.i, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %start
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_9, i32 0, i32 1
  %8 = load i64, i64* %7, align 8, !alias.scope !150
  store i64 %8, i64* %4, align 8, !noalias !150
  br label %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E.exit"

bb3.i:                                            ; preds = %start
  store i64 -1, i64* %4, align 8, !noalias !150
  br label %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E.exit"

"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E.exit": ; preds = %bb2.i, %bb3.i
  %9 = load i64, i64* %4, align 8, !noalias !150
  br label %bb1

bb1:                                              ; preds = %"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E.exit"
; call core::num::<impl usize>::wrapping_sub
  %10 = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h38504eb62fe2ddbeE"(i64 %9, i64 %used_capacity)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_6 = icmp uge i64 %10, %needed_extra_capacity
  br i1 %_6, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %11 = load i8, i8* %strategy, align 1, !range !4
  %12 = trunc i8 %11 to i1
  %_14 = zext i1 %12 to i64
  switch i64 %_14, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
  ]

bb4:                                              ; preds = %bb2
  %13 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"*
  %14 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Ok", %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"* %13, i32 0, i32 1
  %15 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %15, align 8
  br label %bb5

bb5:                                              ; preds = %bb66, %bb16, %bb4
  ret void

bb6:                                              ; preds = %bb3
  %_28 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
; call alloc::raw_vec::RawVec<T,A>::amortized_new_size
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$18amortized_new_size17hcaa20d3ee6564040E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_27, { i8*, i64 }* noalias readonly align 8 dereferenceable(16) %_28, i64 %used_capacity, i64 %needed_extra_capacity)
  br label %bb18

bb7:                                              ; preds = %bb3
  unreachable

bb8:                                              ; preds = %bb3
; call core::num::<impl usize>::checked_add
  %16 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h993a87cd7fb4ce2fE"(i64 %used_capacity, i64 %needed_extra_capacity)
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = extractvalue { i64, i64 } %16, 1
  br label %bb9

bb9:                                              ; preds = %bb8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_20, i32 0, i32 1
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_20, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_20, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h866b39de6d7069e9E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_16, i64 %17, i64 %18, i64 %21, i64 %23)
  br label %bb10

bb10:                                             ; preds = %bb9
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha902dd9cbf70afcfE"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_15, %"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_16)
  br label %bb11

bb11:                                             ; preds = %bb10
  %24 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_15 to i64*
  %_21 = load i64, i64* %24, align 8, !range !1
  switch i64 %_21, label %bb12 [
    i64 0, label %bb17
    i64 1, label %bb13
  ]

bb12:                                             ; preds = %bb11
  unreachable

bb13:                                             ; preds = %bb11
  %25 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_15 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Err", %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"* %25, i32 0, i32 1
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0
  %err.01 = load i64, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1
  %err.12 = load i64, i64* %28, align 8
; call <T as core::convert::From<T>>::from
  %29 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.01, i64 %err.12)
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  br label %bb14

bb14:                                             ; preds = %bb13
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h621c194233337c39E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %30, i64 %31)
  br label %bb15

bb15:                                             ; preds = %bb14
  br label %bb16

bb16:                                             ; preds = %bb33, %bb15, %bb23
  br label %bb5

bb17:                                             ; preds = %bb11
  %32 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_15 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"*
  %33 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"* %32, i32 0, i32 1
  %val3 = load i64, i64* %33, align 8
  store i64 %val3, i64* %new_cap, align 8
  br label %bb25

bb18:                                             ; preds = %bb6
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha902dd9cbf70afcfE"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_26, %"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_27)
  br label %bb19

bb19:                                             ; preds = %bb18
  %34 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_26 to i64*
  %_31 = load i64, i64* %34, align 8, !range !1
  switch i64 %_31, label %bb20 [
    i64 0, label %bb24
    i64 1, label %bb21
  ]

bb20:                                             ; preds = %bb19
  unreachable

bb21:                                             ; preds = %bb19
  %35 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_26 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"*
  %36 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Err", %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"* %35, i32 0, i32 1
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0
  %err.0 = load i64, i64* %37, align 8
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1
  %err.1 = load i64, i64* %38, align 8
; call <T as core::convert::From<T>>::from
  %39 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.0, i64 %err.1)
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  br label %bb22

bb22:                                             ; preds = %bb21
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h621c194233337c39E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %40, i64 %41)
  br label %bb23

bb23:                                             ; preds = %bb22
  br label %bb16

bb24:                                             ; preds = %bb19
  %42 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_26 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"*
  %43 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"* %42, i32 0, i32 1
  %val = load i64, i64* %43, align 8
  store i64 %val, i64* %new_cap, align 8
  br label %bb25

bb25:                                             ; preds = %bb17, %bb24
  %_40 = load i64, i64* %new_cap, align 8
; call core::alloc::Layout::array
  %44 = call { i64, i64 } @_ZN4core5alloc6Layout5array17heb5ebc3b1eca02deE(i64 %_40)
  %45 = extractvalue { i64, i64 } %44, 0
  %46 = extractvalue { i64, i64 } %44, 1
  br label %bb26

bb26:                                             ; preds = %bb25
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h078f593f1fee3cbfE"(%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_38, i64 %45, i64 %46)
  br label %bb27

bb27:                                             ; preds = %bb26
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h8e66be9ca5b15ea6E"(%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_37, %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_38)
  br label %bb28

bb28:                                             ; preds = %bb27
  %47 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %_37 to i64*
  %_42 = load i64, i64* %47, align 8, !range !1
  switch i64 %_42, label %bb29 [
    i64 0, label %bb34
    i64 1, label %bb30
  ]

bb29:                                             ; preds = %bb28
  unreachable

bb30:                                             ; preds = %bb28
  %48 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %_37 to %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err"*
  %49 = getelementptr inbounds %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Err"* %48, i32 0, i32 1
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0
  %err.04 = load i64, i64* %50, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1
  %err.15 = load i64, i64* %51, align 8
; call <T as core::convert::From<T>>::from
  %52 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.04, i64 %err.15)
  %53 = extractvalue { i64, i64 } %52, 0
  %54 = extractvalue { i64, i64 } %52, 1
  br label %bb31

bb31:                                             ; preds = %bb30
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h621c194233337c39E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %53, i64 %54)
  br label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb60, %bb41, %bb32
  br label %bb16

bb34:                                             ; preds = %bb28
  %55 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %_37 to %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok"*
  %56 = getelementptr inbounds %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>::Ok"* %55, i32 0, i32 1
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %56, i32 0, i32 0
  %val.0 = load i64, i64* %57, align 8
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %56, i32 0, i32 1
  %val.1 = load i64, i64* %58, align 8, !range !28
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %val.0, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %val.1, i64* %60, align 8
; call core::alloc::Layout::size
  %61 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %new_layout)
  br label %bb35

bb35:                                             ; preds = %bb34
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17hab45d9b83a0cc337E(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_49, i64 %61)
  br label %bb36

bb36:                                             ; preds = %bb35
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h17a5f3d199c35768E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_48, %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_49)
  br label %bb37

bb37:                                             ; preds = %bb36
  %62 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_48 to i64*
  %_52 = load i64, i64* %62, align 8, !range !1
  switch i64 %_52, label %bb38 [
    i64 0, label %bb42
    i64 1, label %bb39
  ]

bb38:                                             ; preds = %bb37
  unreachable

bb39:                                             ; preds = %bb37
  %63 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_48 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %64 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %63, i32 0, i32 1
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %64, i32 0, i32 0
  %err.06 = load i64, i64* %65, align 8
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %64, i32 0, i32 1
  %err.17 = load i64, i64* %66, align 8
; call <T as core::convert::From<T>>::from
  %67 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.06, i64 %err.17)
  %68 = extractvalue { i64, i64 } %67, 0
  %69 = extractvalue { i64, i64 } %67, 1
  br label %bb40

bb40:                                             ; preds = %bb39
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h621c194233337c39E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %68, i64 %69)
  br label %bb41

bb41:                                             ; preds = %bb40
  br label %bb33

bb42:                                             ; preds = %bb37
  %_59 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
; call alloc::raw_vec::RawVec<T,A>::current_layout
  %70 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_layout17h6ef18dc9a7cd4f39E"({ i8*, i64 }* noalias readonly align 8 dereferenceable(16) %_59)
  store { i64, i64 } %70, { i64, i64 }* %_58, align 8
  br label %bb43

bb43:                                             ; preds = %bb42
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp ule i64 %72, 0
  %_60 = select i1 %73, i64 0, i64 1
  switch i64 %_60, label %bb45 [
    i64 0, label %bb44
    i64 1, label %bb46
  ]

bb44:                                             ; preds = %bb43
  %74 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
  %_80 = bitcast { i8*, i64 }* %74 to %"alloc::alloc::Global"*
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_81.0 = load i64, i64* %75, align 8
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_81.1 = load i64, i64* %76, align 8, !range !28
; call <alloc::alloc::Global as core::alloc::Alloc>::alloc
  %77 = call i8* @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$5alloc17hd4690fed23a31fc1E"(%"alloc::alloc::Global"* nonnull align 1 %_80, i64 %_81.0, i64 %_81.1)
  store i8* %77, i8** %res, align 8
  br label %bb57

bb45:                                             ; preds = %bb43
  unreachable

bb46:                                             ; preds = %bb43
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1
  %81 = load i64, i64* %80, align 8, !range !28
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %79, i64* %82, align 8
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %81, i64* %83, align 8
  br i1 false, label %bb47, label %bb52

bb47:                                             ; preds = %bb46
; call core::alloc::Layout::align
  %84 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %new_layout)
  br label %bb48

bb48:                                             ; preds = %bb47
; call core::alloc::Layout::align
  %85 = call i64 @_ZN4core5alloc6Layout5align17hce5b55c36a8bfe51E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %layout)
  br label %bb49

bb49:                                             ; preds = %bb48
  %_64 = icmp eq i64 %84, %85
  %_63 = xor i1 %_64, true
  br i1 %_63, label %bb51, label %bb50

bb50:                                             ; preds = %bb49
  br label %bb52

bb51:                                             ; preds = %bb49
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [54 x i8] }>* @77 to [0 x i8]*), i64 54, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @79 to %"core::panic::Location"*))
  unreachable

bb52:                                             ; preds = %bb50, %bb46
  %86 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
  %_73 = bitcast { i8*, i64 }* %86 to %"alloc::alloc::Global"*
  %87 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
  %88 = bitcast { i8*, i64 }* %87 to i8**
  %_76 = load i8*, i8** %88, align 8, !nonnull !2
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %89 = call nonnull i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h1ffab30719b4bf3dE"(i8* nonnull %_76)
  br label %bb53

bb53:                                             ; preds = %bb52
; call core::ptr::non_null::NonNull<T>::cast
  %90 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h704a5e13d3777f84E"(i8* nonnull %89)
  br label %bb54

bb54:                                             ; preds = %bb53
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  %_77.0 = load i64, i64* %91, align 8
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  %_77.1 = load i64, i64* %92, align 8, !range !28
; call core::alloc::Layout::size
  %93 = call i64 @_ZN4core5alloc6Layout4size17he1c546514a112598E({ i64, i64 }* noalias readonly align 8 dereferenceable(16) %new_layout)
  br label %bb55

bb55:                                             ; preds = %bb54
; call <alloc::alloc::Global as core::alloc::Alloc>::realloc
  %94 = call i8* @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Alloc$GT$7realloc17hb76fae960f35a09bE"(%"alloc::alloc::Global"* nonnull align 1 %_73, i8* nonnull %90, i64 %_77.0, i64 %_77.1, i64 %93)
  store i8* %94, i8** %res, align 8
  br label %bb56

bb56:                                             ; preds = %bb55
  br label %bb58

bb57:                                             ; preds = %bb44
  br label %bb58

bb58:                                             ; preds = %bb57, %bb56
  %_84 = load i8*, i8** %res, align 8
  %95 = bitcast { i8*, i8 }* %_83 to i8**
  store i8* %_84, i8** %95, align 8
  %96 = getelementptr inbounds { i8*, i8 }, { i8*, i8 }* %_83, i32 0, i32 1
  %97 = zext i1 %fallibility to i8
  store i8 %97, i8* %96, align 8
  %98 = bitcast { i8*, i8 }* %_83 to i8**
  %99 = bitcast i8** %98 to {}**
  %100 = load {}*, {}** %99, align 8
  %101 = icmp ule {}* %100, null
  %_87 = select i1 %101, i64 1, i64 0
  switch i64 %_87, label %bb63 [
    i64 0, label %bb64
    i64 1, label %bb61
  ]

bb59:                                             ; preds = %bb61
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_88.0 = load i64, i64* %102, align 8
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_88.1 = load i64, i64* %103, align 8, !range !28
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17ha9817a3b2f207634E(i64 %_88.0, i64 %_88.1)
  unreachable

bb60:                                             ; preds = %bb61
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  %_90.0 = load i64, i64* %104, align 8
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  %_90.1 = load i64, i64* %105, align 8, !range !28
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_89, i32 0, i32 0
  store i64 %_90.0, i64* %106, align 8
  %107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_89, i32 0, i32 1
  store i64 %_90.1, i64* %107, align 8
  %108 = bitcast { i64, i64 }* %_89 to {}*
  %109 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %110 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %109, i32 0, i32 1
  %111 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_89, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_89, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %110, i32 0, i32 0
  store i64 %112, i64* %115, align 8
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %110, i32 0, i32 1
  store i64 %114, i64* %116, align 8
  %117 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %117, align 8
  br label %bb33

bb61:                                             ; preds = %bb58
  %118 = getelementptr inbounds { i8*, i8 }, { i8*, i8 }* %_83, i32 0, i32 1
  %119 = load i8, i8* %118, align 8, !range !4
  %120 = trunc i8 %119 to i1
  %_86 = zext i1 %120 to i64
  switch i64 %_86, label %bb62 [
    i64 0, label %bb60
    i64 1, label %bb59
  ]

bb62:                                             ; preds = %bb61
  unreachable

bb63:                                             ; preds = %bb58
  unreachable

bb64:                                             ; preds = %bb58
  %121 = bitcast { i8*, i8 }* %_83 to i8**
  %ptr = load i8*, i8** %121, align 8, !nonnull !2
; call core::ptr::non_null::NonNull<T>::cast
  %122 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h704a5e13d3777f84E"(i8* nonnull %ptr)
  br label %bb65

bb65:                                             ; preds = %bb64
; call <T as core::convert::Into<U>>::into
  %123 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h95e1d751cb404257E"(i8* nonnull %122)
  br label %bb66

bb66:                                             ; preds = %bb65
  %124 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
  %125 = bitcast { i8*, i64 }* %124 to i8**
  store i8* %123, i8** %125, align 8
  %_96 = load i64, i64* %new_cap, align 8
  %126 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !nonnull !2
  %127 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %126, i32 0, i32 1
  store i64 %_96, i64* %127, align 8
  %128 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"*
  %129 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Ok", %"core::result::Result<(), alloc::collections::TryReserveError>::Ok"* %128, i32 0, i32 1
  %130 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %130, align 8
  br label %bb5
}

; alloc::raw_vec::RawVec<T,A>::reserve_internal::{{closure}}
; Function Attrs: uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_internal28_$u7b$$u7b$closure$u7d$$u7d$17h1a898b1e74837107E"() unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; alloc::raw_vec::RawVec<T,A>::reserve_internal::{{closure}}
; Function Attrs: uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_internal28_$u7b$$u7b$closure$u7d$$u7d$17hc426952e539db309E"() unnamed_addr #1 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; alloc::raw_vec::RawVec<T,A>::amortized_new_size
; Function Attrs: uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$18amortized_new_size17h1e86e234977b512fE"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), { i64*, i64 }* noalias readonly align 8 dereferenceable(16) %self, i64 %used_capacity, i64 %needed_extra_capacity) unnamed_addr #1 {
start:
  %_10 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %_5 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h993a87cd7fb4ce2fE"(i64 %used_capacity, i64 %needed_extra_capacity)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h866b39de6d7069e9E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_6, i64 %2, i64 %3, i64 %6, i64 %8)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha902dd9cbf70afcfE"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_5, %"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_5 to i64*
  %_11 = load i64, i64* %9, align 8, !range !1
  switch i64 %_11, label %bb4 [
    i64 0, label %bb9
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
  %10 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_5 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"*
  %11 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Err", %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  %err.0 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %err.1 = load i64, i64* %13, align 8
; call <T as core::convert::From<T>>::from
  %14 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.0, i64 %err.1)
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  br label %bb7

bb6:                                              ; preds = %bb10, %bb8
  ret void

bb7:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hff13d985bced0a33E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %15, i64 %16)
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb6

bb9:                                              ; preds = %bb3
  %17 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_5 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"* %17, i32 0, i32 1
  %val = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_17 = load i64, i64* %19, align 8
  %double_cap = mul i64 %_17, 2
; call core::cmp::max
  %20 = call i64 @_ZN4core3cmp3max17he9d11212e0f33ea6E(i64 %double_cap, i64 %val)
  br label %bb10

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"*
  %22 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"* %21, i32 0, i32 1
  store i64 %20, i64* %22, align 8
  %23 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %23, align 8
  br label %bb6
}

; alloc::raw_vec::RawVec<T,A>::amortized_new_size
; Function Attrs: uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$18amortized_new_size17hcaa20d3ee6564040E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), { i8*, i64 }* noalias readonly align 8 dereferenceable(16) %self, i64 %used_capacity, i64 %needed_extra_capacity) unnamed_addr #1 {
start:
  %_10 = alloca { i64, i64 }, align 8
  %_6 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
  %_5 = alloca %"core::result::Result<usize, alloc::collections::TryReserveError>", align 8
; call core::num::<impl usize>::checked_add
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h993a87cd7fb4ce2fE"(i64 %used_capacity, i64 %needed_extra_capacity)
  %2 = extractvalue { i64, i64 } %1, 0
  %3 = extractvalue { i64, i64 } %1, 1
  br label %bb1

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h866b39de6d7069e9E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_6, i64 %2, i64 %3, i64 %6, i64 %8)
  br label %bb2

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try::Try>::into_result
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha902dd9cbf70afcfE"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_5, %"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_6)
  br label %bb3

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_5 to i64*
  %_11 = load i64, i64* %9, align 8, !range !1
  switch i64 %_11, label %bb4 [
    i64 0, label %bb9
    i64 1, label %bb5
  ]

bb4:                                              ; preds = %bb3
  unreachable

bb5:                                              ; preds = %bb3
  %10 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_5 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"*
  %11 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Err", %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"* %10, i32 0, i32 1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  %err.0 = load i64, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  %err.1 = load i64, i64* %13, align 8
; call <T as core::convert::From<T>>::from
  %14 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3e2dc4df4e108aa7E"(i64 %err.0, i64 %err.1)
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  br label %bb7

bb6:                                              ; preds = %bb10, %bb8
  ret void

bb7:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try::Try>::from_error
  call void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hff13d985bced0a33E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %0, i64 %15, i64 %16)
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb6

bb9:                                              ; preds = %bb3
  %17 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %_5 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"* %17, i32 0, i32 1
  %val = load i64, i64* %18, align 8
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  %_17 = load i64, i64* %19, align 8
  %double_cap = mul i64 %_17, 2
; call core::cmp::max
  %20 = call i64 @_ZN4core3cmp3max17he9d11212e0f33ea6E(i64 %double_cap, i64 %val)
  br label %bb10

bb10:                                             ; preds = %bb9
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"*
  %22 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveError>::Ok"* %21, i32 0, i32 1
  store i64 %20, i64* %22, align 8
  %23 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 0, i64* %23, align 8
  br label %bb6
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: uwtable
define internal %"serde_json::value::Value"* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h31feb2587f2db75fE"({ i64*, i64 }* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i64*, i64 }* %self to i64**
  %_2 = load i64*, i64** %0, align 8, !nonnull !2
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call %"serde_json::value::Value"* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h05f232026ed3a42cE"(i64* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret %"serde_json::value::Value"* %1
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: uwtable
define internal i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h64ed3ec0cb204733E"({ i8*, i64 }* noalias readonly align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
  %0 = bitcast { i8*, i64 }* %self to i8**
  %_2 = load i8*, i8** %0, align 8, !nonnull !2
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha970c2ca3f55878cE"(i8* nonnull %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret i8* %1
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h2a6843e8662ade54E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %used_capacity, i64 %needed_extra_capacity) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_4 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  store i8 1, i8* %_8, align 1
  store i8 1, i8* %_9, align 1
  %0 = load i8, i8* %_8, align 1, !range !4
  %1 = trunc i8 %0 to i1
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
; call alloc::raw_vec::RawVec<T,A>::reserve_internal
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_internal17hc320efef15822f89E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_4, { i8*, i64 }* align 8 dereferenceable(16) %self, i64 %used_capacity, i64 %needed_extra_capacity, i1 zeroext %1, i1 zeroext %3)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_4 to i64*
  %_11 = load i64, i64* %4, align 8, !range !1
  switch i64 %_11, label %bb7 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb2:                                              ; preds = %bb5
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hd96c417e4217a689E()
  unreachable

bb3:                                              ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @80 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @81 to %"core::panic::Location"*))
  unreachable

bb4:                                              ; preds = %bb1
  ret void

bb5:                                              ; preds = %bb1
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_4 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ule i64 %8, 0
  %_10 = select i1 %9, i64 0, i64 1
  switch i64 %_10, label %bb6 [
    i64 0, label %bb2
    i64 1, label %bb3
  ]

bb6:                                              ; preds = %bb5
  unreachable

bb7:                                              ; preds = %bb1
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17heb554f1568ed679bE"({ i64*, i64 }* align 8 dereferenceable(16) %self, i64 %used_capacity, i64 %needed_extra_capacity) unnamed_addr #1 {
start:
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_4 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  store i8 1, i8* %_8, align 1
  store i8 1, i8* %_9, align 1
  %0 = load i8, i8* %_8, align 1, !range !4
  %1 = trunc i8 %0 to i1
  %2 = load i8, i8* %_9, align 1, !range !4
  %3 = trunc i8 %2 to i1
; call alloc::raw_vec::RawVec<T,A>::reserve_internal
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_internal17h3bc240abe88fc944E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24) %_4, { i64*, i64 }* align 8 dereferenceable(16) %self, i64 %used_capacity, i64 %needed_extra_capacity, i1 zeroext %1, i1 zeroext %3)
  br label %bb1

bb1:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_4 to i64*
  %_11 = load i64, i64* %4, align 8, !range !1
  switch i64 %_11, label %bb7 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb2:                                              ; preds = %bb5
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hd96c417e4217a689E()
  unreachable

bb3:                                              ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [40 x i8] }>* @80 to [0 x i8]*), i64 40, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @81 to %"core::panic::Location"*))
  unreachable

bb4:                                              ; preds = %bb1
  ret void

bb5:                                              ; preds = %bb1
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %_4 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %6 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %5, i32 0, i32 1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ule i64 %8, 0
  %_10 = select i1 %9, i64 0, i64 1
  switch i64 %_10, label %bb6 [
    i64 0, label %bb2
    i64 1, label %bb3
  ]

bb6:                                              ; preds = %bb5
  unreachable

bb7:                                              ; preds = %bb1
  unreachable
}

; serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize
; Function Attrs: uwtable
define internal void @"_ZN5serde2de5impls74_$LT$impl$u20$serde..de..Deserialize$u20$for$u20$alloc..string..String$GT$11deserialize17h14b8016608f23eeeE"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), i64* align 8 dereferenceable(56) %deserializer) unnamed_addr #1 {
start:
  %_3 = alloca %"serde::de::impls::StringVisitor", align 1
; call <serde_json::de::MapKey<R> as serde::de::Deserializer>::deserialize_string
  call void @"_ZN75_$LT$serde_json..de..MapKey$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17hfe0e4b80040d5fd2E"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, i64* align 8 dereferenceable(56) %deserializer)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde::de::Visitor::visit_borrowed_str
; Function Attrs: inlinehint uwtable
define internal void @_ZN5serde2de7Visitor18visit_borrowed_str17h0ef1f3d74cd925bbE(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), [0 x i8]* noalias nonnull readonly align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
; call <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str
  call void @"_ZN70_$LT$serde..de..impls..StringVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_str17h554bb79c6a1a931cE"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, [0 x i8]* noalias nonnull readonly align 1 %v.0, i64 %v.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde::de::Visitor::visit_borrowed_str
; Function Attrs: inlinehint uwtable
define internal void @_ZN5serde2de7Visitor18visit_borrowed_str17h88555f1314eca455E(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), [0 x i8]* noalias nonnull readonly align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
; call <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_str
  call void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_str17h093b57885c99cd41E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, [0 x i8]* noalias nonnull readonly align 1 %v.0, i64 %v.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde::de::Visitor::visit_borrowed_str
; Function Attrs: inlinehint uwtable
define internal void @_ZN5serde2de7Visitor18visit_borrowed_str17hfd9d1b33e93c8e6bE(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), [0 x i8]* noalias nonnull readonly align 1 %v.0, i64 %v.1) unnamed_addr #0 {
start:
; call <serde_json::value::de::KeyClassifier as serde::de::Visitor>::visit_str
  call void @"_ZN75_$LT$serde_json..value..de..KeyClassifier$u20$as$u20$serde..de..Visitor$GT$9visit_str17h076d1410e3ea5d3bE"(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, [0 x i8]* noalias nonnull readonly align 1 %v.0, i64 %v.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde::de::MapAccess::next_entry
; Function Attrs: inlinehint uwtable
define internal void @_ZN5serde2de9MapAccess10next_entry17h1dee50ad54a8953eE(%"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(64), { i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_4 = alloca %"core::marker::PhantomData<serde_json::value::Value>", align 1
  %_3 = alloca %"core::marker::PhantomData<alloc::string::String>", align 1
; call serde::de::MapAccess::next_entry_seed
  call void @_ZN5serde2de9MapAccess15next_entry_seed17h159c995cb56fdf96E(%"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(64) %0, { i64*, i8 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde::de::MapAccess::next_value
; Function Attrs: inlinehint uwtable
define internal void @_ZN5serde2de9MapAccess10next_value17h6cd2067e24e2a08bE(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), { i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::marker::PhantomData<serde_json::value::Value>", align 1
; call <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed
  call void @"_ZN75_$LT$serde_json..de..MapAccess$LT$R$GT$$u20$as$u20$serde..de..MapAccess$GT$15next_value_seed17h06219794d3fb9a47E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, { i64*, i8 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; serde::de::MapAccess::next_entry_seed
; Function Attrs: inlinehint uwtable
define internal void @_ZN5serde2de9MapAccess15next_entry_seed17h159c995cb56fdf96E(%"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(64), { i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_32 = alloca i8, align 1
  %_31 = alloca i8, align 1
  %_30 = alloca i8, align 1
  %_29 = alloca i8, align 1
  %_28 = alloca %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", align 8
  %_27 = alloca %"serde_json::value::Value", align 8
  %_26 = alloca %"alloc::string::String", align 8
  %_25 = alloca { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, align 8
  %_24 = alloca %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", align 8
  %val1 = alloca %"serde_json::value::Value", align 8
  %_16 = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %value = alloca %"serde_json::value::Value", align 8
  %key = alloca %"alloc::string::String", align 8
  %val = alloca %"core::option::Option<alloc::string::String>", align 8
  %_5 = alloca %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>", align 8
  %_4 = alloca %"core::option::Option<alloc::string::String>", align 8
  store i8 0, i8* %_31, align 1
  store i8 0, i8* %_30, align 1
  store i8 0, i8* %_32, align 1
  store i8 0, i8* %_29, align 1
  store i8 1, i8* %_29, align 1
; invoke <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_key_seed
  invoke void @"_ZN75_$LT$serde_json..de..MapAccess$LT$R$GT$$u20$as$u20$serde..de..MapAccess$GT$13next_key_seed17h50e81f4def0009d1E"(%"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %_5, { i64*, i8 }* align 8 dereferenceable(16) %self)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 1, i8* %_30, align 1
  store i8 1, i8* %_31, align 1
  %2 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to i64*
  %_8 = load i64, i64* %2, align 8, !range !1
  switch i64 %_8, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb2:                                              ; preds = %bb22, %bb23
  %3 = bitcast { i8*, i32 }* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb3:                                              ; preds = %bb32, %bb13, %cleanup2
  %9 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to i64*
  %_33 = load i64, i64* %9, align 8, !range !1
  %10 = icmp eq i64 %_33, 0
  br i1 %10, label %bb24, label %bb26

bb4:                                              ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb1
  store i8 0, i8* %_31, align 1
  %11 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"*
  %12 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"* %11, i32 0, i32 1
  %13 = bitcast %"core::option::Option<alloc::string::String>"* %val to i8*
  %14 = bitcast %"core::option::Option<alloc::string::String>"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  store i8 1, i8* %_32, align 1
  %15 = bitcast %"core::option::Option<alloc::string::String>"* %_4 to i8*
  %16 = bitcast %"core::option::Option<alloc::string::String>"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  %17 = bitcast %"core::option::Option<alloc::string::String>"* %_4 to {}**
  %18 = load {}*, {}** %17, align 8
  %19 = icmp ule {}* %18, null
  %_13 = select i1 %19, i64 0, i64 1
  switch i64 %_13, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ]

bb6:                                              ; preds = %bb1
  store i8 0, i8* %_30, align 1
  %20 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %21 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %20, i32 0, i32 1
  %err = load i64*, i64** %21, align 8, !nonnull !2
; invoke <T as core::convert::From<T>>::from
  %22 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb04c24f980f8caabE"(i64* noalias align 8 dereferenceable(40) %err)
          to label %bb8 unwind label %cleanup2

bb7:                                              ; preds = %bb49, %bb47, %bb30, %bb31
  ret void

bb8:                                              ; preds = %bb6
  %23 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"*
  %24 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"* %23, i32 0, i32 1
  store i64* %22, i64** %24, align 8
  %25 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %25, align 8
  %26 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to i64*
  %_34 = load i64, i64* %26, align 8, !range !1
  %27 = icmp eq i64 %_34, 0
  br i1 %27, label %bb29, label %bb28

bb9:                                              ; preds = %bb5
  %28 = getelementptr inbounds %"core::option::Option<(alloc::string::String, serde_json::value::Value)>", %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_28, i32 0, i32 1
  store i8 6, i8* %28, align 8
  %29 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok"*
  %30 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok"* %29, i32 0, i32 1
  %31 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %30 to i8*
  %32 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 56, i1 false)
  %33 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %33, align 8
  br label %bb21

bb10:                                             ; preds = %bb5
  unreachable

bb11:                                             ; preds = %bb5
  store i8 0, i8* %_32, align 1
  %34 = bitcast %"core::option::Option<alloc::string::String>"* %_4 to %"core::option::Option<alloc::string::String>::Some"*
  %35 = bitcast %"core::option::Option<alloc::string::String>::Some"* %34 to %"alloc::string::String"*
  %36 = bitcast %"alloc::string::String"* %key to i8*
  %37 = bitcast %"alloc::string::String"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false)
  store i8 0, i8* %_29, align 1
; invoke <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed
  invoke void @"_ZN75_$LT$serde_json..de..MapAccess$LT$R$GT$$u20$as$u20$serde..de..MapAccess$GT$15next_value_seed17h06219794d3fb9a47E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %_16, { i64*, i8 }* align 8 dereferenceable(16) %self)
          to label %bb12 unwind label %cleanup3

bb12:                                             ; preds = %bb11
  %38 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_16 to i64*
  %_19 = load i64, i64* %38, align 8, !range !1
  switch i64 %_19, label %bb16 [
    i64 0, label %bb17
    i64 1, label %bb18
  ]

bb13:                                             ; preds = %bb14, %cleanup6
  %39 = bitcast %"core::option::Option<alloc::string::String>"* %_4 to {}**
  %40 = load {}*, {}** %39, align 8
  %41 = icmp ule {}* %40, null
  %_35 = select i1 %41, i64 0, i64 1
  %42 = icmp eq i64 %_35, 1
  br i1 %42, label %bb3, label %bb32

bb14:                                             ; preds = %bb35, %bb33, %bb15, %cleanup3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %key) #14
  br label %bb13

bb15:                                             ; preds = %cleanup5
  %43 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_16 to i64*
  %_36 = load i64, i64* %43, align 8, !range !1
  %44 = icmp eq i64 %_36, 0
  br i1 %44, label %bb33, label %bb14

bb16:                                             ; preds = %bb12
  unreachable

bb17:                                             ; preds = %bb12
  %45 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_16 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %46 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %45, i32 0, i32 1
  %47 = bitcast %"serde_json::value::Value"* %val1 to i8*
  %48 = bitcast %"serde_json::value::Value"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 32, i1 false)
  %49 = bitcast %"serde_json::value::Value"* %value to i8*
  %50 = bitcast %"serde_json::value::Value"* %val1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 32, i1 false)
  %51 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_16 to i64*
  %_37 = load i64, i64* %51, align 8, !range !1
  %52 = icmp eq i64 %_37, 0
  br i1 %52, label %bb34, label %bb36

bb18:                                             ; preds = %bb12
  %53 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_16 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %54 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %53, i32 0, i32 1
  %err4 = load i64*, i64** %54, align 8, !nonnull !2
; invoke <T as core::convert::From<T>>::from
  %55 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb04c24f980f8caabE"(i64* noalias align 8 dereferenceable(40) %err4)
          to label %bb19 unwind label %cleanup5

bb19:                                             ; preds = %bb18
  %56 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"*
  %57 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Err"* %56, i32 0, i32 1
  store i64* %55, i64** %57, align 8
  %58 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %58, align 8
  %59 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_16 to i64*
  %_38 = load i64, i64* %59, align 8, !range !1
  %60 = icmp eq i64 %_38, 0
  br i1 %60, label %bb38, label %bb37

bb20:                                             ; preds = %bb37
  %61 = bitcast %"core::option::Option<alloc::string::String>"* %_4 to {}**
  %62 = load {}*, {}** %61, align 8
  %63 = icmp ule {}* %62, null
  %_39 = select i1 %63, i64 0, i64 1
  %64 = icmp eq i64 %_39, 1
  br i1 %64, label %bb39, label %bb40

bb21:                                             ; preds = %bb9, %bb34
  %65 = bitcast %"core::option::Option<alloc::string::String>"* %_4 to {}**
  %66 = load {}*, {}** %65, align 8
  %67 = icmp ule {}* %66, null
  %_41 = select i1 %67, i64 0, i64 1
  %68 = icmp eq i64 %_41, 1
  br i1 %68, label %bb44, label %bb46

bb22:                                             ; preds = %bb23
  store i8 0, i8* %_29, align 1
  br label %bb2

bb23:                                             ; preds = %bb25, %bb24, %bb27, %bb26, %cleanup
  %69 = load i8, i8* %_29, align 1, !range !4
  %70 = trunc i8 %69 to i1
  br i1 %70, label %bb22, label %bb2

bb24:                                             ; preds = %bb3
  %71 = load i8, i8* %_31, align 1, !range !4
  %72 = trunc i8 %71 to i1
  br i1 %72, label %bb25, label %bb23

bb25:                                             ; preds = %bb24
  store i8 0, i8* %_31, align 1
  %73 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"*
  %74 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"* %73, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17he919cbe3bcefc60cE(%"core::option::Option<alloc::string::String>"* align 8 dereferenceable(24) %74) #14
  br label %bb23

bb26:                                             ; preds = %bb3
  %75 = load i8, i8* %_30, align 1, !range !4
  %76 = trunc i8 %75 to i1
  br i1 %76, label %bb27, label %bb23

bb27:                                             ; preds = %bb26
  store i8 0, i8* %_30, align 1
  %77 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %78 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %77, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %78) #14
  br label %bb23

bb28:                                             ; preds = %bb29, %bb8
  store i8 0, i8* %_30, align 1
  store i8 0, i8* %_31, align 1
  store i8 0, i8* %_32, align 1
  br label %bb31

bb29:                                             ; preds = %bb8
  store i8 0, i8* %_31, align 1
  %79 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"*
  %80 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"* %79, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17he919cbe3bcefc60cE(%"core::option::Option<alloc::string::String>"* align 8 dereferenceable(24) %80)
          to label %bb28 unwind label %cleanup

bb30:                                             ; preds = %bb31
  store i8 0, i8* %_29, align 1
  br label %bb7

bb31:                                             ; preds = %bb41, %bb28
  %81 = load i8, i8* %_29, align 1, !range !4
  %82 = trunc i8 %81 to i1
  br i1 %82, label %bb30, label %bb7

bb32:                                             ; preds = %bb13
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17he919cbe3bcefc60cE(%"core::option::Option<alloc::string::String>"* align 8 dereferenceable(24) %_4) #14
  br label %bb3

bb33:                                             ; preds = %bb15
  %83 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_16 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %84 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %83, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %84) #14
  br label %bb14

bb34:                                             ; preds = %bb36, %bb17
  %85 = bitcast %"alloc::string::String"* %_26 to i8*
  %86 = bitcast %"alloc::string::String"* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false)
  %87 = bitcast %"serde_json::value::Value"* %_27 to i8*
  %88 = bitcast %"serde_json::value::Value"* %value to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 32, i1 false)
  %89 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_25 to %"alloc::string::String"*
  %90 = bitcast %"alloc::string::String"* %89 to i8*
  %91 = bitcast %"alloc::string::String"* %_26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 24, i1 false)
  %92 = getelementptr inbounds { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }, { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_25, i32 0, i32 3
  %93 = bitcast %"serde_json::value::Value"* %92 to i8*
  %94 = bitcast %"serde_json::value::Value"* %_27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 32, i1 false)
  %95 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_24 to %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"*
  %96 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>::Some"* %95 to { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }*
  %97 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %96 to i8*
  %98 = bitcast { [0 x i64], %"alloc::string::String", [0 x i64], %"serde_json::value::Value", [0 x i64] }* %_25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 56, i1 false)
  %99 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok"*
  %100 = getelementptr inbounds %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>::Ok"* %99, i32 0, i32 1
  %101 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %100 to i8*
  %102 = bitcast %"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* %_24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 56, i1 false)
  %103 = bitcast %"core::result::Result<core::option::Option<(alloc::string::String, serde_json::value::Value)>, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %103, align 8
  br label %bb21

bb35:                                             ; preds = %cleanup7
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %value) #14
  br label %bb14

bb36:                                             ; preds = %bb17
  %104 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_16 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %105 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %104, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %105)
          to label %bb34 unwind label %cleanup7

bb37:                                             ; preds = %bb38, %bb19
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %key)
          to label %bb20 unwind label %cleanup6

bb38:                                             ; preds = %bb19
  %106 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_16 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %107 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %106, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %107)
          to label %bb37 unwind label %cleanup3

bb39:                                             ; preds = %bb40, %bb20
  %108 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to i64*
  %_40 = load i64, i64* %108, align 8, !range !1
  %109 = icmp eq i64 %_40, 0
  br i1 %109, label %bb41, label %bb42

bb40:                                             ; preds = %bb20
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17he919cbe3bcefc60cE(%"core::option::Option<alloc::string::String>"* align 8 dereferenceable(24) %_4)
          to label %bb39 unwind label %cleanup2

bb41:                                             ; preds = %bb42, %bb39
  store i8 0, i8* %_30, align 1
  store i8 0, i8* %_31, align 1
  store i8 0, i8* %_32, align 1
  br label %bb31

bb42:                                             ; preds = %bb39
  store i8 0, i8* %_30, align 1
  %110 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %111 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %110, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %111)
          to label %bb41 unwind label %cleanup

bb43:                                             ; preds = %bb45, %bb44, %bb46
  %112 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to i64*
  %_42 = load i64, i64* %112, align 8, !range !1
  %113 = icmp eq i64 %_42, 0
  br i1 %113, label %bb47, label %bb48

bb44:                                             ; preds = %bb21
  %114 = load i8, i8* %_32, align 1, !range !4
  %115 = trunc i8 %114 to i1
  br i1 %115, label %bb45, label %bb43

bb45:                                             ; preds = %bb44
  store i8 0, i8* %_32, align 1
  %116 = bitcast %"core::option::Option<alloc::string::String>"* %_4 to %"core::option::Option<alloc::string::String>::Some"*
  %117 = bitcast %"core::option::Option<alloc::string::String>::Some"* %116 to %"alloc::string::String"*
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h397d3a0e48bbb87cE(%"alloc::string::String"* align 8 dereferenceable(24) %117)
          to label %bb43 unwind label %cleanup2

bb46:                                             ; preds = %bb21
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17he919cbe3bcefc60cE(%"core::option::Option<alloc::string::String>"* align 8 dereferenceable(24) %_4)
          to label %bb43 unwind label %cleanup2

bb47:                                             ; preds = %bb48, %bb43
  store i8 0, i8* %_30, align 1
  store i8 0, i8* %_31, align 1
  store i8 0, i8* %_32, align 1
  %118 = load i8, i8* %_29, align 1, !range !4
  %119 = trunc i8 %118 to i1
  br i1 %119, label %bb49, label %bb7

bb48:                                             ; preds = %bb43
  store i8 0, i8* %_30, align 1
  %120 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %121 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %120, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %121)
          to label %bb47 unwind label %cleanup

bb49:                                             ; preds = %bb47
  store i8 0, i8* %_29, align 1
  br label %bb7

cleanup:                                          ; preds = %bb48, %bb42, %bb29, %start
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  %124 = extractvalue { i8*, i32 } %122, 1
  %125 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %123, i8** %125, align 8
  %126 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %124, i32* %126, align 8
  br label %bb23

cleanup2:                                         ; preds = %bb45, %bb46, %bb40, %bb6
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  %129 = extractvalue { i8*, i32 } %127, 1
  %130 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %128, i8** %130, align 8
  %131 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %129, i32* %131, align 8
  br label %bb3

cleanup3:                                         ; preds = %bb38, %bb11
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  %134 = extractvalue { i8*, i32 } %132, 1
  %135 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %133, i8** %135, align 8
  %136 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %134, i32* %136, align 8
  br label %bb14

cleanup5:                                         ; preds = %bb18
  %137 = landingpad { i8*, i32 }
          cleanup
  %138 = extractvalue { i8*, i32 } %137, 0
  %139 = extractvalue { i8*, i32 } %137, 1
  %140 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %138, i8** %140, align 8
  %141 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %139, i32* %141, align 8
  br label %bb15

cleanup6:                                         ; preds = %bb37
  %142 = landingpad { i8*, i32 }
          cleanup
  %143 = extractvalue { i8*, i32 } %142, 0
  %144 = extractvalue { i8*, i32 } %142, 1
  %145 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %143, i8** %145, align 8
  %146 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %144, i32* %146, align 8
  br label %bb13

cleanup7:                                         ; preds = %bb36
  %147 = landingpad { i8*, i32 }
          cleanup
  %148 = extractvalue { i8*, i32 } %147, 0
  %149 = extractvalue { i8*, i32 } %147, 1
  %150 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %148, i8** %150, align 8
  %151 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %149, i32* %151, align 8
  br label %bb35
}

; serde::de::SeqAccess::next_element
; Function Attrs: inlinehint uwtable
define internal void @_ZN5serde2de9SeqAccess12next_element17h6dd111915b61cf36E(%"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), { i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::marker::PhantomData<serde_json::value::Value>", align 1
; call <serde_json::de::SeqAccess<R> as serde::de::SeqAccess>::next_element_seed
  call void @"_ZN75_$LT$serde_json..de..SeqAccess$LT$R$GT$$u20$as$u20$serde..de..SeqAccess$GT$17next_element_seed17hb785b92967988a08E"(%"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, { i64*, i8 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: uwtable
define internal { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb727a63b56af1897E"(i64 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: uwtable
define internal void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdc700fa769d2e561E"(%"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* noalias nocapture sret dereferenceable(24), %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #1 {
start:
  %1 = bitcast %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %0 to i8*
  %2 = bitcast %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <[u8] as core::slice::SliceOrd<u8>>::compare
; Function Attrs: inlinehint uwtable
define internal i8 @"_ZN64_$LT$$u5b$u8$u5d$$u20$as$u20$core..slice..SliceOrd$LT$u8$GT$$GT$7compare17h558975b855a728a4E"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1, [0 x i8]* noalias nonnull readonly align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %_20 = alloca i64, align 8
  %_16 = alloca i64, align 8
  %0 = alloca i8, align 1
; call core::slice::<impl [T]>::as_ptr
  %1 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8438786b013cdbe7E"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::as_ptr
  %2 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h8438786b013cdbe7E"([0 x i8]* noalias nonnull readonly align 1 %other.0, i64 %other.1)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::slice::<impl [T]>::len
  %3 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  br label %bb3

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::len
  %4 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %other.0, i64 %other.1)
  br label %bb4

bb4:                                              ; preds = %bb3
; call core::cmp::min
  %5 = call i64 @_ZN4core3cmp3min17h97a6caddf1d2d13cE(i64 %3, i64 %4)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_14 = call i32 @memcmp(i8* %1, i8* %2, i64 %5)
  br label %bb6

bb6:                                              ; preds = %bb5
  %_13 = icmp eq i32 %_14, 0
  br i1 %_13, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  %_22 = icmp slt i32 %_14, 0
  br i1 %_22, label %bb13, label %bb12

bb8:                                              ; preds = %bb6
; call core::slice::<impl [T]>::len
  %6 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %self.0, i64 %self.1)
  store i64 %6, i64* %_16, align 8
  br label %bb9

bb9:                                              ; preds = %bb8
; call core::slice::<impl [T]>::len
  %7 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %other.0, i64 %other.1)
  store i64 %7, i64* %_20, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h442379464eedd660E"(i64* noalias readonly align 8 dereferenceable(8) %_16, i64* noalias readonly align 8 dereferenceable(8) %_20), !range !16
  store i8 %8, i8* %0, align 1
  br label %bb11

bb11:                                             ; preds = %bb10
  br label %bb15

bb12:                                             ; preds = %bb7
  store i8 1, i8* %0, align 1
  br label %bb14

bb13:                                             ; preds = %bb7
  store i8 -1, i8* %0, align 1
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  br label %bb15

bb15:                                             ; preds = %bb14, %bb11
  %9 = load i8, i8* %0, align 1, !range !16
  ret i8 %9
}

; <alloc::vec::SetLenOnDrop as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint uwtable
define internal void @"_ZN66_$LT$alloc..vec..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf176bf106cc533abE"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1
  %_2 = load i64, i64* %0, align 8
  %1 = bitcast { i64*, i64 }* %self to i64**
  %2 = load i64*, i64** %1, align 8, !nonnull !2
  store i64 %_2, i64* %2, align 8
  ret void
}

; <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
; Function Attrs: uwtable
define internal void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h52dda619c4a96fefE"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_8 = alloca %"core::ops::range::RangeFull", align 1
; call <alloc::vec::Vec<T> as core::ops::index::IndexMut<I>>::index_mut
  %0 = call { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN80_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17hb66c17f7c24f09b5E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %self)
  %_5.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 0
  %_5.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf24f43d2f47b4e17E([0 x %"serde_json::value::Value"]* nonnull align 8 %_5.0, i64 %_5.1)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <alloc::vec::Vec<T> as core::ops::drop::Drop>::drop
; Function Attrs: uwtable
define internal void @"_ZN66_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7e6fb18267436a41E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_8 = alloca %"core::ops::range::RangeFull", align 1
; call <alloc::vec::Vec<T> as core::ops::index::IndexMut<I>>::index_mut
  %0 = call { [0 x i8]*, i64 } @"_ZN80_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17ha24535a27897a8aeE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1
  br label %bb1

bb1:                                              ; preds = %start
  br label %bb2

bb2:                                              ; preds = %bb1
  ret void
}

; <alloc::vec::Vec<T> as core::ops::deref::Deref>::deref
; Function Attrs: uwtable
define internal { [0 x i8]*, i64 } @"_ZN68_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8f17757b2e121b2bE"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %self, align 8
  %_4 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
; call alloc::vec::Vec<T>::as_ptr
  %1 = call i8* @"_ZN5alloc3vec12Vec$LT$T$GT$6as_ptr17hc5a8c5d53bf1553aE"(%"alloc::vec::Vec<u8>"* noalias readonly align 8 dereferenceable(24) %_4)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %2, i32 0, i32 3
  %_5 = load i64, i64* %3, align 8
; call core::slice::from_raw_parts
  %4 = call { [0 x i8]*, i64 } @_ZN4core5slice14from_raw_parts17h6ba427154f89012bE(i8* %1, i64 %_5)
  %5 = extractvalue { [0 x i8]*, i64 } %4, 0
  %6 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %5, 0
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %6, 1
  ret { [0 x i8]*, i64 } %8
}

; <serde_json::read::StrRead as serde_json::read::Read>::next
; Function Attrs: inlinehint uwtable
define internal void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$4next17hd0a52c96ba920820E"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::read::StrRead"* align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %self = alloca %"serde_json::read::StrRead"*, align 8
  store %"serde_json::read::StrRead"* %1, %"serde_json::read::StrRead"** %self, align 8
  %2 = load %"serde_json::read::StrRead"*, %"serde_json::read::StrRead"** %self, align 8, !nonnull !2
  %_2 = bitcast %"serde_json::read::StrRead"* %2 to %"serde_json::read::SliceRead"*
; call <serde_json::read::SliceRead as serde_json::read::Read>::next
  call void @"_ZN70_$LT$serde_json..read..SliceRead$u20$as$u20$serde_json..read..Read$GT$4next17h23bd1d2b41bc556eE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::read::SliceRead"* align 8 dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <serde_json::read::StrRead as serde_json::read::Read>::peek
; Function Attrs: inlinehint uwtable
define internal void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$4peek17hfc3d3cc0e9ebdf09E"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::read::StrRead"* align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %self = alloca %"serde_json::read::StrRead"*, align 8
  store %"serde_json::read::StrRead"* %1, %"serde_json::read::StrRead"** %self, align 8
  %2 = load %"serde_json::read::StrRead"*, %"serde_json::read::StrRead"** %self, align 8, !nonnull !2
  %_2 = bitcast %"serde_json::read::StrRead"* %2 to %"serde_json::read::SliceRead"*
; call <serde_json::read::SliceRead as serde_json::read::Read>::peek
  call void @"_ZN70_$LT$serde_json..read..SliceRead$u20$as$u20$serde_json..read..Read$GT$4peek17hf359ac0bd015d965E"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %0, %"serde_json::read::SliceRead"* align 8 dereferenceable(24) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <serde_json::read::StrRead as serde_json::read::Read>::discard
; Function Attrs: inlinehint uwtable
define internal void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$7discard17h0742ffeafbcca6d5E"(%"serde_json::read::StrRead"* align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %self = alloca %"serde_json::read::StrRead"*, align 8
  store %"serde_json::read::StrRead"* %0, %"serde_json::read::StrRead"** %self, align 8
  %1 = load %"serde_json::read::StrRead"*, %"serde_json::read::StrRead"** %self, align 8, !nonnull !2
  %_3 = bitcast %"serde_json::read::StrRead"* %1 to %"serde_json::read::SliceRead"*
; call <serde_json::read::SliceRead as serde_json::read::Read>::discard
  call void @"_ZN70_$LT$serde_json..read..SliceRead$u20$as$u20$serde_json..read..Read$GT$7discard17h6fc7eaed476352fcE"(%"serde_json::read::SliceRead"* align 8 dereferenceable(24) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <std::process::ExitCode as std::process::Termination>::report
; Function Attrs: inlinehint uwtable
define internal i32 @"_ZN68_$LT$std..process..ExitCode$u20$as$u20$std..process..Termination$GT$6report17hcd77686b1aa97cc3E"(i8) unnamed_addr #0 {
start:
  %self = alloca i8, align 1
  store i8 %0, i8* %self, align 1
; call std::sys::unix::process::process_common::ExitCode::as_i32
  %1 = call i32 @_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217hdbfdfe33d3566313E(i8* noalias readonly align 1 dereferenceable(1) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i32 %1
}

; <usize as core::slice::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(8) i8** @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2581da45e3804f72E"(i64 %self, [0 x i8*]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::as_ptr
  %0 = call i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h6ff6d7af6ed886fbE"([0 x i8*]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *const T>::add
  %_3 = call i8** @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h86c7da1fa93f3d1dE"(i8** %0, i64 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8** %_3
}

; <usize as core::slice::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(8) double* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2bd688c9f9ae9d54E"(i64 %self, [0 x double]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::as_ptr
  %0 = call double* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h3399c838bce72ef9E"([0 x double]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *const T>::add
  %_3 = call double* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h89655a67050a8002E"(double* %0, i64 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret double* %_3
}

; <usize as core::slice::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h910bc23973128fe8E"(i64 %self, [0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::as_ptr
  %0 = call %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h33bc45f91f504c27E"([0 x %"alloc::string::String"]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *const T>::add
  %_3 = call %"alloc::string::String"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd82359365f97e9b2E"(%"alloc::string::String"* %0, i64 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret %"alloc::string::String"* %_3
}

; <usize as core::slice::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17heb6aacbe3dfa2089E"(i64 %self, [0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::as_ptr
  %0 = call %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc14e7bc708c0d1d8E"([0 x %"serde_json::value::Value"]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *const T>::add
  %_3 = call %"serde_json::value::Value"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h664c60febf91f948E"(%"serde_json::value::Value"* %0, i64 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret %"serde_json::value::Value"* %_3
}

; <usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(8) i8** @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7ed3b19362c3d265E"(i64 %self, [0 x i8*]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::as_mut_ptr
  %0 = call i8** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h9e3654d24d32d00eE"([0 x i8*]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *mut T>::add
  %_4 = call i8** @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h65b87f21ad58b38eE"(i8** %0, i64 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i8** %_4
}

; <usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(24) %"alloc::string::String"* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h828af7891aa52bf4E"(i64 %self, [0 x %"alloc::string::String"]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::as_mut_ptr
  %0 = call %"alloc::string::String"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h1fc3d89362852cbaE"([0 x %"alloc::string::String"]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *mut T>::add
  %_4 = call %"alloc::string::String"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h10566c4c19fd26e7E"(%"alloc::string::String"* %0, i64 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret %"alloc::string::String"* %_4
}

; <usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hcacc4f77d38f6abcE"(i64 %self, [0 x %"serde_json::value::Value"]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::as_mut_ptr
  %0 = call %"serde_json::value::Value"* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7581a17caccf72fbE"([0 x %"serde_json::value::Value"]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *mut T>::add
  %_4 = call %"serde_json::value::Value"* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb6153962084a15b9E"(%"serde_json::value::Value"* %0, i64 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret %"serde_json::value::Value"* %_4
}

; <usize as core::slice::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable(8) i64** @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7294b04d8e171c7E"(i64 %self, [0 x i64*]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::as_mut_ptr
  %0 = call i64** @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17haa5356113af96502E"([0 x i64*]* nonnull align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *mut T>::add
  %_4 = call i64** @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha47e4df4b4683d70E"(i64** %0, i64 %self)
  br label %bb2

bb2:                                              ; preds = %bb1
  ret i64** %_4
}

; <usize as core::slice::SliceIndex<[T]>>::get
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable_or_null(8) i64* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h86b1936fe8a07f95E"(i64 %self, [0 x double]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = alloca i64*, align 8
; call core::slice::<impl [T]>::len
  %1 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hbd3a34ea3a658653E"([0 x double]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp ult i64 %self, %1
  br i1 %_3, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %2 = bitcast i64** %0 to {}**
  store {}* null, {}** %2, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
; call <usize as core::slice::SliceIndex<[T]>>::get_unchecked
  %_7 = call align 8 dereferenceable(8) double* @"_ZN68_$LT$usize$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h2bd688c9f9ae9d54E"(i64 %self, [0 x double]* noalias nonnull readonly align 8 %slice.0, i64 %slice.1)
  br label %bb4

bb4:                                              ; preds = %bb3
  %3 = bitcast i64** %0 to double**
  store double* %_7, double** %3, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %4 = load i64*, i64** %0, align 8
  ret i64* %4
}

; <core::option::Option<T> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint uwtable
define internal { i64, i64* } @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17he6a90d6276489fa2E"() unnamed_addr #0 {
start:
  %0 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %2 = bitcast i64** %1 to {}**
  store {}* null, {}** %2, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = insertvalue { i64, i64* } undef, i64 %4, 0
  %8 = insertvalue { i64, i64* } %7, i64* %6, 1
  ret { i64, i64* } %8
}

; <core::option::Option<T> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable_or_null(24) i64* @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h69e50f668c5914b0E"(i64* noalias readonly align 8 dereferenceable_or_null(24) %self) unnamed_addr #0 {
start:
  %_3 = alloca %"core::option::NoneError", align 1
; call core::option::Option<T>::ok_or
  %0 = call align 8 dereferenceable_or_null(24) i64* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h70a1fb6fdee0b73cE"(i64* noalias readonly align 8 dereferenceable_or_null(24) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret i64* %0
}

; <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str
; Function Attrs: uwtable
define internal void @"_ZN70_$LT$serde..de..impls..StringVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_str17h554bb79c6a1a931cE"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), [0 x i8]* noalias nonnull readonly align 1 %v.0, i64 %v.1) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::string::String", align 8
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hd9e7cf79cb120421E"(%"alloc::string::String"* noalias nocapture sret dereferenceable(24) %_3, [0 x i8]* noalias nonnull readonly align 1 %v.0, i64 %v.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %0 to %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok"*
  %2 = getelementptr inbounds %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok", %"core::result::Result<alloc::string::String, serde_json::error::Error>::Ok"* %1, i32 0, i32 1
  %3 = bitcast %"alloc::string::String"* %2 to i8*
  %4 = bitcast %"alloc::string::String"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %5, align 8
  ret void
}

; <serde_json::read::SliceRead as serde_json::read::Read>::next
; Function Attrs: inlinehint uwtable
define internal void @"_ZN70_$LT$serde_json..read..SliceRead$u20$as$u20$serde_json..read..Read$GT$4next17h23bd1d2b41bc556eE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::read::SliceRead"* align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %_2 = alloca { i8, i8 }, align 1
  %self = alloca %"serde_json::read::SliceRead"*, align 8
  store %"serde_json::read::SliceRead"* %1, %"serde_json::read::SliceRead"** %self, align 8
  %2 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds %"serde_json::read::SliceRead", %"serde_json::read::SliceRead"* %2, i32 0, i32 3
  %_4 = load i64, i64* %3, align 8
  %4 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %5 = bitcast %"serde_json::read::SliceRead"* %4 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !2
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %_6.1 = load i64, i64* %7, align 8
; call core::slice::<impl [T]>::len
  %8 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %_6.0, i64 %_6.1)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp ult i64 %_4, %8
  br i1 %_3, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast { i8, i8 }* %_2 to i8*
  store i8 0, i8* %9, align 1
  br label %bb5

bb3:                                              ; preds = %bb1
  %10 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %11 = getelementptr inbounds %"serde_json::read::SliceRead", %"serde_json::read::SliceRead"* %10, i32 0, i32 3
  %_8 = load i64, i64* %11, align 8
  %12 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %13 = bitcast %"serde_json::read::SliceRead"* %12 to { [0 x i8]*, i64 }*
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0
  %15 = load [0 x i8]*, [0 x i8]** %14, align 8, !nonnull !2
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1
  %_9 = load i64, i64* %16, align 8
  %_10 = icmp ult i64 %_8, %_9
  %17 = call i1 @llvm.expect.i1(i1 %_10, i1 true)
  br i1 %17, label %bb4, label %panic

bb4:                                              ; preds = %bb3
  %18 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %19 = bitcast %"serde_json::read::SliceRead"* %18 to { [0 x i8]*, i64 }*
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0
  %21 = load [0 x i8]*, [0 x i8]** %20, align 8, !nonnull !2
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds [0 x i8], [0 x i8]* %21, i64 0, i64 %_8
  %ch = load i8, i8* %24, align 1
  %25 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %26 = getelementptr inbounds %"serde_json::read::SliceRead", %"serde_json::read::SliceRead"* %25, i32 0, i32 3
  %27 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %28 = getelementptr inbounds %"serde_json::read::SliceRead", %"serde_json::read::SliceRead"* %27, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %26, align 8
  %31 = bitcast { i8, i8 }* %_2 to %"core::option::Option<u8>::Some"*
  %32 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %31, i32 0, i32 1
  store i8 %ch, i8* %32, align 1
  %33 = bitcast { i8, i8 }* %_2 to i8*
  store i8 1, i8* %33, align 1
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %34 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %35 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %34, i32 0, i32 1
  %36 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 0
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = trunc i8 %37 to i1
  %39 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %35, i32 0, i32 0
  %42 = zext i1 %38 to i8
  store i8 %42, i8* %41, align 1
  %43 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %35, i32 0, i32 1
  store i8 %40, i8* %43, align 1
  %44 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %0 to i8*
  store i8 0, i8* %44, align 8
  ret void

panic:                                            ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b238fdcc01bb5fbE(%"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @83 to %"core::panic::Location"*), i64 %_8, i64 %_9)
  unreachable
}

; <serde_json::read::SliceRead as serde_json::read::Read>::peek
; Function Attrs: inlinehint uwtable
define internal void @"_ZN70_$LT$serde_json..read..SliceRead$u20$as$u20$serde_json..read..Read$GT$4peek17hf359ac0bd015d965E"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16), %"serde_json::read::SliceRead"* align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %_2 = alloca { i8, i8 }, align 1
  %self = alloca %"serde_json::read::SliceRead"*, align 8
  store %"serde_json::read::SliceRead"* %1, %"serde_json::read::SliceRead"** %self, align 8
  %2 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds %"serde_json::read::SliceRead", %"serde_json::read::SliceRead"* %2, i32 0, i32 3
  %_4 = load i64, i64* %3, align 8
  %4 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %5 = bitcast %"serde_json::read::SliceRead"* %4 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  %_6.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !nonnull !2
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  %_6.1 = load i64, i64* %7, align 8
; call core::slice::<impl [T]>::len
  %8 = call i64 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hc211230a7243c68bE"([0 x i8]* noalias nonnull readonly align 1 %_6.0, i64 %_6.1)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = icmp ult i64 %_4, %8
  br i1 %_3, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %9 = bitcast { i8, i8 }* %_2 to i8*
  store i8 0, i8* %9, align 1
  br label %bb5

bb3:                                              ; preds = %bb1
  %10 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %11 = getelementptr inbounds %"serde_json::read::SliceRead", %"serde_json::read::SliceRead"* %10, i32 0, i32 3
  %_8 = load i64, i64* %11, align 8
  %12 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %13 = bitcast %"serde_json::read::SliceRead"* %12 to { [0 x i8]*, i64 }*
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0
  %15 = load [0 x i8]*, [0 x i8]** %14, align 8, !nonnull !2
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1
  %_9 = load i64, i64* %16, align 8
  %_10 = icmp ult i64 %_8, %_9
  %17 = call i1 @llvm.expect.i1(i1 %_10, i1 true)
  br i1 %17, label %bb4, label %panic

bb4:                                              ; preds = %bb3
  %18 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %19 = bitcast %"serde_json::read::SliceRead"* %18 to { [0 x i8]*, i64 }*
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0
  %21 = load [0 x i8]*, [0 x i8]** %20, align 8, !nonnull !2
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds [0 x i8], [0 x i8]* %21, i64 0, i64 %_8
  %_7 = load i8, i8* %24, align 1
  %25 = bitcast { i8, i8 }* %_2 to %"core::option::Option<u8>::Some"*
  %26 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %25, i32 0, i32 1
  store i8 %_7, i8* %26, align 1
  %27 = bitcast { i8, i8 }* %_2 to i8*
  store i8 1, i8* %27, align 1
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %28 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %29 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %28, i32 0, i32 1
  %30 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 0
  %31 = load i8, i8* %30, align 1, !range !4
  %32 = trunc i8 %31 to i1
  %33 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2, i32 0, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %29, i32 0, i32 0
  %36 = zext i1 %32 to i8
  store i8 %36, i8* %35, align 1
  %37 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %29, i32 0, i32 1
  store i8 %34, i8* %37, align 1
  %38 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %0 to i8*
  store i8 0, i8* %38, align 8
  ret void

panic:                                            ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b238fdcc01bb5fbE(%"core::panic::Location"* noalias readonly align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @84 to %"core::panic::Location"*), i64 %_8, i64 %_9)
  unreachable
}

; <serde_json::read::SliceRead as serde_json::read::Read>::discard
; Function Attrs: inlinehint uwtable
define internal void @"_ZN70_$LT$serde_json..read..SliceRead$u20$as$u20$serde_json..read..Read$GT$7discard17h6fc7eaed476352fcE"(%"serde_json::read::SliceRead"* align 8 dereferenceable(24)) unnamed_addr #0 {
start:
  %self = alloca %"serde_json::read::SliceRead"*, align 8
  store %"serde_json::read::SliceRead"* %0, %"serde_json::read::SliceRead"** %self, align 8
  %1 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %2 = getelementptr inbounds %"serde_json::read::SliceRead", %"serde_json::read::SliceRead"* %1, i32 0, i32 3
  %3 = load %"serde_json::read::SliceRead"*, %"serde_json::read::SliceRead"** %self, align 8, !nonnull !2
  %4 = getelementptr inbounds %"serde_json::read::SliceRead", %"serde_json::read::SliceRead"* %3, i32 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  store i64 %6, i64* %2, align 8
  ret void
}

; <alloc::vec::Vec<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN71_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h17a9e8d4898c6359E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::vec::Vec<serde_json::value::Value>"*, align 8
  store %"alloc::vec::Vec<serde_json::value::Value>"* %0, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8
  %_6 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
; call alloc::vec::Vec<T>::as_mut_ptr
  %1 = call %"serde_json::value::Value"* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17h269a9361d28c85a6E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load %"alloc::vec::Vec<serde_json::value::Value>"*, %"alloc::vec::Vec<serde_json::value::Value>"** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds %"alloc::vec::Vec<serde_json::value::Value>", %"alloc::vec::Vec<serde_json::value::Value>"* %2, i32 0, i32 3
  %_7 = load i64, i64* %3, align 8
; call core::slice::from_raw_parts_mut
  %4 = call { [0 x %"serde_json::value::Value"]*, i64 } @_ZN4core5slice18from_raw_parts_mut17h1cdf6ab51244c554E(%"serde_json::value::Value"* %1, i64 %_7)
  %_3.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %4, 0
  %_3.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %4, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %_3.0, 0
  %6 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %5, i64 %_3.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %6
}

; <alloc::vec::Vec<T> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: uwtable
define internal { [0 x i8]*, i64 } @"_ZN71_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h589a0160353ee4e0E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24)) unnamed_addr #1 {
start:
  %self = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %0, %"alloc::vec::Vec<u8>"** %self, align 8
  %_6 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
; call alloc::vec::Vec<T>::as_mut_ptr
  %1 = call i8* @"_ZN5alloc3vec12Vec$LT$T$GT$10as_mut_ptr17hbc0c5f9f7068086bE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_6)
  br label %bb1

bb1:                                              ; preds = %start
  %2 = load %"alloc::vec::Vec<u8>"*, %"alloc::vec::Vec<u8>"** %self, align 8, !nonnull !2
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %2, i32 0, i32 3
  %_7 = load i64, i64* %3, align 8
; call core::slice::from_raw_parts_mut
  %4 = call { [0 x i8]*, i64 } @_ZN4core5slice18from_raw_parts_mut17hcfc009bfc8a440dbE(i8* %1, i64 %_7)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %4, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %4, 1
  br label %bb2

bb2:                                              ; preds = %bb1
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %6
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: uwtable
define internal void @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha7bb255971442199E"(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* noalias nocapture sret dereferenceable(56), %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** align 8 dereferenceable(8) %self) unnamed_addr #1 {
start:
  %_2 = load %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
; call <alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN112_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h400e703e5dc58d8bE"(%"core::option::Option<(alloc::string::String, serde_json::value::Value)>"* noalias nocapture sret dereferenceable(56) %0, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72) %_2)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h016c2ca5f432e54bE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), i64* noalias align 8 dereferenceable(40) %v) unnamed_addr #0 {
start:
  %1 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %2 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %1, i32 0, i32 1
  store i64* %v, i64** %2, align 8
  %3 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %3, align 8
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h32722bd17c6c8988E"() unnamed_addr #0 {
start:
  %0 = alloca %"core::result::Result<(), !>::Ok", align 1
  %1 = bitcast %"core::result::Result<(), !>::Ok"* %0 to %"core::result::Result<(), !>::Err"*
  %2 = bitcast %"core::result::Result<(), !>::Err"* %1 to { [0 x i8] }*
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17h621c194233337c39E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), i64 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to %"core::result::Result<(), alloc::collections::TryReserveError>::Err"*
  %2 = getelementptr inbounds %"core::result::Result<(), alloc::collections::TryReserveError>::Err", %"core::result::Result<(), alloc::collections::TryReserveError>::Err"* %1, i32 0, i32 1
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %v.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %v.1, i64* %4, align 8
  %5 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %5, align 8
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hcde81dcb42fd4d79E"(%"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* noalias nocapture sret dereferenceable(24)) unnamed_addr #0 {
start:
  %1 = bitcast %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %0 to %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Err"*
  %2 = bitcast %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>::Err"* %1 to %"core::alloc::LayoutErr"*
  %3 = getelementptr inbounds %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>", %"core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutErr>"* %0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::from_error
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17hff13d985bced0a33E"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), i64 %v.0, i64 %v.1) unnamed_addr #0 {
start:
  %1 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"*
  %2 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveError>::Err", %"core::result::Result<usize, alloc::collections::TryReserveError>::Err"* %1, i32 0, i32 1
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0
  store i64 %v.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1
  store i64 %v.1, i64* %4, align 8
  %5 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to i64*
  store i64 1, i64* %5, align 8
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h17a5f3d199c35768E"(%"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), %"core::result::Result<(), alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %0 to i8*
  %2 = bitcast %"core::result::Result<(), alloc::collections::TryReserveError>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h3d21edfd5305a091E"() unnamed_addr #0 {
start:
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint uwtable
define internal { i64, i64 } @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h4cef504c75fbcbcdE"(i64 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { i64, i64 } undef, i64 %self.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %self.1, 1
  ret { i64, i64 } %1
}

; <core::result::Result<T,E> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h8e66be9ca5b15ea6E"(%"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %0 to i8*
  %2 = bitcast %"core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17ha902dd9cbf70afcfE"(%"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture sret dereferenceable(24), %"core::result::Result<usize, alloc::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %0 to i8*
  %2 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveError>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::into_result
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17hc50229822cca77deE"(%"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* noalias nocapture dereferenceable(32) %self) unnamed_addr #0 {
start:
  %1 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i8*
  %2 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %self to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false)
  ret void
}

; <core::result::Result<T,E> as core::ops::try::Try>::from_ok
; Function Attrs: inlinehint uwtable
define internal void @"_ZN73_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try..Try$GT$7from_ok17hc0bebcbab08ea2c7E"() unnamed_addr #0 {
start:
  %0 = alloca %"core::result::Result<(), !>::Ok", align 1
  %1 = bitcast %"core::result::Result<(), !>::Ok"* %0 to {}*
  ret void
}

; <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_key_seed
; Function Attrs: uwtable
define internal void @"_ZN75_$LT$serde_json..de..MapAccess$LT$R$GT$$u20$as$u20$serde..de..MapAccess$GT$13next_key_seed17h3bf7b7747af172e1E"(%"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), { i64*, i8 }* align 8 dereferenceable(16)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_48 = alloca i8, align 1
  %_47 = alloca i8, align 1
  %_46 = alloca %"serde_json::error::ErrorCode", align 8
  %_43 = alloca %"serde_json::error::ErrorCode", align 8
  %_40 = alloca %"serde_json::error::ErrorCode", align 8
  %_35 = alloca i64*, align 8
  %_33 = alloca %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>", align 8
  %_31 = alloca %"serde_json::error::ErrorCode", align 8
  %_28 = alloca %"serde_json::error::ErrorCode", align 8
  %_17 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_12 = alloca %"core::option::Option<serde_json::value::de::KeyClass>", align 8
  %_5 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_4 = alloca { i8, i8 }, align 1
  %peek = alloca { i8, i8 }, align 1
  %self = alloca { i64*, i8 }*, align 8
  store { i64*, i8 }* %1, { i64*, i8 }** %self, align 8
  store i8 0, i8* %_47, align 1
  store i8 0, i8* %_48, align 1
  store i8 1, i8* %_47, align 1
  %3 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %4 = bitcast { i64*, i8 }* %3 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_6 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %4, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_whitespace
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_5, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_6)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb41, %bb42
  %5 = bitcast { i8*, i32 }* %2 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
  store i8 1, i8* %_48, align 1
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = trunc i8 %12 to i1
  %_7 = zext i1 %13 to i64
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %14 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %14, i32 0, i32 1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %15, i32 0, i32 0
  %17 = load i8, i8* %16, align 1, !range !4
  %val.0 = trunc i8 %17 to i1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %15, i32 0, i32 1
  %val.1 = load i8, i8* %18, align 1
  %19 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 0
  %20 = zext i1 %val.0 to i8
  store i8 %20, i8* %19, align 1
  %21 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 1
  store i8 %val.1, i8* %21, align 1
  %22 = bitcast { i8, i8 }* %_4 to i8*
  %23 = load i8, i8* %22, align 1, !range !4
  %24 = trunc i8 %23 to i1
  %_11 = zext i1 %24 to i64
  switch i64 %_11, label %bb14 [
    i64 0, label %bb12
    i64 1, label %bb13
  ]

bb5:                                              ; preds = %bb2
  store i8 0, i8* %_48, align 1
  %25 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %25, i32 0, i32 1
  %err = load i64*, i64** %26, align 8, !nonnull !2
  %27 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %27, i32 0, i32 1
  store i64* %err, i64** %28, align 8
  %29 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %29, align 8
  br label %bb8

bb6:                                              ; preds = %bb43, %bb49, %bb40
  ret void

bb7:                                              ; preds = %cleanup1
  store i8 0, i8* %_48, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5) #14
  br label %bb42

bb8:                                              ; preds = %bb26, %bb9, %bb25, %bb47, %bb5
  %30 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = trunc i8 %31 to i1
  %_49 = zext i1 %32 to i64
  %33 = icmp eq i64 %_49, 1
  br i1 %33, label %bb44, label %bb46

bb9:                                              ; preds = %bb13
  %34 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_12 to {}**
  store {}* null, {}** %34, align 8
  %35 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"*
  %36 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Ok"* %35, i32 0, i32 1
  %37 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %36 to i8*
  %38 = bitcast %"core::option::Option<serde_json::value::de::KeyClass>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false)
  %39 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %39, align 8
  br label %bb8

bb10:                                             ; preds = %bb13
  %40 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %41 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %40, i32 0, i32 1
  %42 = load i8, i8* %41, align 8, !range !4
  %_14 = trunc i8 %42 to i1
  %_13 = xor i1 %_14, true
  br i1 %_13, label %bb15, label %bb16

bb11:                                             ; preds = %bb16, %bb13
  %43 = bitcast { i8, i8 }* %_4 to %"core::option::Option<u8>::Some"*
  %44 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %43, i32 0, i32 1
  %b = load i8, i8* %44, align 1
  %45 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %46 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %45, i32 0, i32 1
  %47 = load i8, i8* %46, align 8, !range !4
  %_24 = trunc i8 %47 to i1
  br i1 %_24, label %bb23, label %bb24

bb12:                                             ; preds = %bb4
  %48 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %49 = bitcast { i64*, i8 }* %48 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_30 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %49, align 8, !nonnull !2
  %50 = bitcast %"serde_json::error::ErrorCode"* %_31 to i64*
  store i64 3, i64* %50, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %51 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_30, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_31)
          to label %bb26 unwind label %cleanup1

bb13:                                             ; preds = %bb4
  %52 = bitcast { i8, i8 }* %_4 to %"core::option::Option<u8>::Some"*
  %53 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %52, i32 0, i32 1
  %54 = load i8, i8* %53, align 1
  switch i8 %54, label %bb11 [
    i8 125, label %bb9
    i8 44, label %bb10
  ]

bb14:                                             ; preds = %bb4
  unreachable

bb15:                                             ; preds = %bb10
  %55 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %56 = bitcast { i64*, i8 }* %55 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_16 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %56, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_16)
          to label %bb17 unwind label %cleanup1

bb16:                                             ; preds = %bb10
  br label %bb11

bb17:                                             ; preds = %bb15
  %57 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %58 = bitcast { i64*, i8 }* %57 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_18 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %58, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_whitespace
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_17, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_18)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  %59 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to i8*
  %60 = load i8, i8* %59, align 8, !range !4
  %61 = trunc i8 %60 to i1
  %_19 = zext i1 %61 to i64
  switch i64 %_19, label %bb19 [
    i64 0, label %bb20
    i64 1, label %bb21
  ]

bb19:                                             ; preds = %bb18
  unreachable

bb20:                                             ; preds = %bb18
  %62 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %63 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %62, i32 0, i32 1
  %64 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %63, i32 0, i32 0
  %65 = load i8, i8* %64, align 1, !range !4
  %val.03 = trunc i8 %65 to i1
  %66 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %63, i32 0, i32 1
  %val.14 = load i8, i8* %66, align 1
  %67 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %peek, i32 0, i32 0
  %68 = zext i1 %val.03 to i8
  store i8 %68, i8* %67, align 1
  %69 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %peek, i32 0, i32 1
  store i8 %val.14, i8* %69, align 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_17)
          to label %bb22 unwind label %cleanup1

bb21:                                             ; preds = %bb18
  %70 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %71 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %70, i32 0, i32 1
  %err2 = load i64*, i64** %71, align 8, !nonnull !2
  %72 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %73 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %72, i32 0, i32 1
  store i64* %err2, i64** %73, align 8
  %74 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %74, align 8
  %75 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to i8*
  %76 = load i8, i8* %75, align 8, !range !4
  %77 = trunc i8 %76 to i1
  %_50 = zext i1 %77 to i64
  %78 = icmp eq i64 %_50, 1
  br i1 %78, label %bb47, label %bb48

bb22:                                             ; preds = %bb20
  br label %bb27

bb23:                                             ; preds = %bb11
  %79 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %80 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %79, i32 0, i32 1
  store i8 0, i8* %80, align 8
  %81 = bitcast { i8, i8 }* %peek to %"core::option::Option<u8>::Some"*
  %82 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %81, i32 0, i32 1
  store i8 %b, i8* %82, align 1
  %83 = bitcast { i8, i8 }* %peek to i8*
  store i8 1, i8* %83, align 1
  br label %bb27

bb24:                                             ; preds = %bb11
  %84 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %85 = bitcast { i64*, i8 }* %84 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_27 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %85, align 8, !nonnull !2
  %86 = bitcast %"serde_json::error::ErrorCode"* %_28 to i64*
  store i64 8, i64* %86, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %87 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_27, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_28)
          to label %bb25 unwind label %cleanup1

bb25:                                             ; preds = %bb24
  %88 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %89 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %88, i32 0, i32 1
  store i64* %87, i64** %89, align 8
  %90 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %90, align 8
  br label %bb8

bb26:                                             ; preds = %bb12
  %91 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %92 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %91, i32 0, i32 1
  store i64* %51, i64** %92, align 8
  %93 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %93, align 8
  br label %bb8

bb27:                                             ; preds = %bb23, %bb22
  store i8 0, i8* %_48, align 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
          to label %bb28 unwind label %cleanup

bb28:                                             ; preds = %bb27
  store i8 0, i8* %_48, align 1
  %94 = bitcast { i8, i8 }* %peek to i8*
  %95 = load i8, i8* %94, align 1, !range !4
  %96 = trunc i8 %95 to i1
  %_32 = zext i1 %96 to i64
  switch i64 %_32, label %bb34 [
    i64 0, label %bb32
    i64 1, label %bb33
  ]

bb29:                                             ; preds = %bb33
  store i8 0, i8* %_47, align 1
  %97 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %98 = bitcast { i64*, i8 }* %97 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_37 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %98, align 8, !nonnull !2
  %99 = bitcast i64** %_35 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %_37, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %99, align 8
  %100 = load i64*, i64** %_35, align 8, !nonnull !2
; invoke <serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed>::deserialize
  invoke void @"_ZN83_$LT$serde_json..value..de..KeyClassifier$u20$as$u20$serde..de..DeserializeSeed$GT$11deserialize17hbc647b2dd35e98f6E"(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %_33, i64* align 8 dereferenceable(56) %100)
          to label %bb35 unwind label %cleanup

bb30:                                             ; preds = %bb33
  %101 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %102 = bitcast { i64*, i8 }* %101 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_39 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %102, align 8, !nonnull !2
  %103 = bitcast %"serde_json::error::ErrorCode"* %_40 to i64*
  store i64 20, i64* %103, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %104 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_39, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_40)
          to label %bb37 unwind label %cleanup

bb31:                                             ; preds = %bb33
  %105 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %106 = bitcast { i64*, i8 }* %105 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_42 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %106, align 8, !nonnull !2
  %107 = bitcast %"serde_json::error::ErrorCode"* %_43 to i64*
  store i64 18, i64* %107, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %108 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_42, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_43)
          to label %bb38 unwind label %cleanup

bb32:                                             ; preds = %bb28
  %109 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %110 = bitcast { i64*, i8 }* %109 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_45 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %110, align 8, !nonnull !2
  %111 = bitcast %"serde_json::error::ErrorCode"* %_46 to i64*
  store i64 5, i64* %111, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %112 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_45, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_46)
          to label %bb39 unwind label %cleanup

bb33:                                             ; preds = %bb28
  %113 = bitcast { i8, i8 }* %peek to %"core::option::Option<u8>::Some"*
  %114 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %113, i32 0, i32 1
  %115 = load i8, i8* %114, align 1
  switch i8 %115, label %bb31 [
    i8 34, label %bb29
    i8 125, label %bb30
  ]

bb34:                                             ; preds = %bb28
  unreachable

bb35:                                             ; preds = %bb29
; invoke core::result::Result<T,E>::map
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h584dd27c78fef875E"(%"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture dereferenceable(32) %_33)
          to label %bb36 unwind label %cleanup

bb36:                                             ; preds = %bb35
  br label %bb40

bb37:                                             ; preds = %bb30
  %116 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %117 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %116, i32 0, i32 1
  store i64* %104, i64** %117, align 8
  %118 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %118, align 8
  br label %bb40

bb38:                                             ; preds = %bb31
  %119 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %120 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %119, i32 0, i32 1
  store i64* %108, i64** %120, align 8
  %121 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %121, align 8
  br label %bb40

bb39:                                             ; preds = %bb32
  %122 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"*
  %123 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>::Err"* %122, i32 0, i32 1
  store i64* %112, i64** %123, align 8
  %124 = bitcast %"core::result::Result<core::option::Option<serde_json::value::de::KeyClass>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %124, align 8
  br label %bb40

bb40:                                             ; preds = %bb39, %bb36, %bb37, %bb38
  %125 = load i8, i8* %_47, align 1, !range !4
  %126 = trunc i8 %125 to i1
  br i1 %126, label %bb49, label %bb6

bb41:                                             ; preds = %bb42
  store i8 0, i8* %_47, align 1
  br label %bb1

bb42:                                             ; preds = %bb7, %cleanup
  %127 = load i8, i8* %_47, align 1, !range !4
  %128 = trunc i8 %127 to i1
  br i1 %128, label %bb41, label %bb1

bb43:                                             ; preds = %bb45, %bb44, %bb46
  store i8 0, i8* %_48, align 1
  store i8 0, i8* %_47, align 1
  br label %bb6

bb44:                                             ; preds = %bb8
  %129 = load i8, i8* %_48, align 1, !range !4
  %130 = trunc i8 %129 to i1
  br i1 %130, label %bb45, label %bb43

bb45:                                             ; preds = %bb44
  store i8 0, i8* %_48, align 1
  %131 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %132 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %131, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %132)
          to label %bb43 unwind label %cleanup

bb46:                                             ; preds = %bb8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
          to label %bb43 unwind label %cleanup

bb47:                                             ; preds = %bb48, %bb21
  br label %bb8

bb48:                                             ; preds = %bb21
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_17)
          to label %bb47 unwind label %cleanup1

bb49:                                             ; preds = %bb40
  store i8 0, i8* %_47, align 1
  br label %bb6

cleanup:                                          ; preds = %bb45, %bb46, %bb32, %bb35, %bb29, %bb30, %bb31, %bb27, %start
  %133 = landingpad { i8*, i32 }
          cleanup
  %134 = extractvalue { i8*, i32 } %133, 0
  %135 = extractvalue { i8*, i32 } %133, 1
  %136 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %134, i8** %136, align 8
  %137 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %135, i32* %137, align 8
  br label %bb42

cleanup1:                                         ; preds = %bb12, %bb24, %bb20, %bb48, %bb17, %bb15
  %138 = landingpad { i8*, i32 }
          cleanup
  %139 = extractvalue { i8*, i32 } %138, 0
  %140 = extractvalue { i8*, i32 } %138, 1
  %141 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %139, i8** %141, align 8
  %142 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %140, i32* %142, align 8
  br label %bb7
}

; <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_key_seed
; Function Attrs: uwtable
define internal void @"_ZN75_$LT$serde_json..de..MapAccess$LT$R$GT$$u20$as$u20$serde..de..MapAccess$GT$13next_key_seed17h50e81f4def0009d1E"(%"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), { i64*, i8 }* align 8 dereferenceable(16)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_48 = alloca i8, align 1
  %_47 = alloca i8, align 1
  %_46 = alloca %"serde_json::error::ErrorCode", align 8
  %_43 = alloca %"serde_json::error::ErrorCode", align 8
  %_40 = alloca %"serde_json::error::ErrorCode", align 8
  %_35 = alloca i64*, align 8
  %_33 = alloca %"core::result::Result<alloc::string::String, serde_json::error::Error>", align 8
  %_31 = alloca %"serde_json::error::ErrorCode", align 8
  %_28 = alloca %"serde_json::error::ErrorCode", align 8
  %_17 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_12 = alloca %"core::option::Option<alloc::string::String>", align 8
  %_5 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_4 = alloca { i8, i8 }, align 1
  %peek = alloca { i8, i8 }, align 1
  %self = alloca { i64*, i8 }*, align 8
  store { i64*, i8 }* %1, { i64*, i8 }** %self, align 8
  store i8 0, i8* %_47, align 1
  store i8 0, i8* %_48, align 1
  store i8 1, i8* %_47, align 1
  %3 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %4 = bitcast { i64*, i8 }* %3 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_6 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %4, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_whitespace
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_5, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_6)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb41, %bb42
  %5 = bitcast { i8*, i32 }* %2 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
  store i8 1, i8* %_48, align 1
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = trunc i8 %12 to i1
  %_7 = zext i1 %13 to i64
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %14 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %14, i32 0, i32 1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %15, i32 0, i32 0
  %17 = load i8, i8* %16, align 1, !range !4
  %val.0 = trunc i8 %17 to i1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %15, i32 0, i32 1
  %val.1 = load i8, i8* %18, align 1
  %19 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 0
  %20 = zext i1 %val.0 to i8
  store i8 %20, i8* %19, align 1
  %21 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 1
  store i8 %val.1, i8* %21, align 1
  %22 = bitcast { i8, i8 }* %_4 to i8*
  %23 = load i8, i8* %22, align 1, !range !4
  %24 = trunc i8 %23 to i1
  %_11 = zext i1 %24 to i64
  switch i64 %_11, label %bb14 [
    i64 0, label %bb12
    i64 1, label %bb13
  ]

bb5:                                              ; preds = %bb2
  store i8 0, i8* %_48, align 1
  %25 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %25, i32 0, i32 1
  %err = load i64*, i64** %26, align 8, !nonnull !2
  %27 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %27, i32 0, i32 1
  store i64* %err, i64** %28, align 8
  %29 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %29, align 8
  br label %bb8

bb6:                                              ; preds = %bb43, %bb49, %bb40
  ret void

bb7:                                              ; preds = %cleanup1
  store i8 0, i8* %_48, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5) #14
  br label %bb42

bb8:                                              ; preds = %bb26, %bb9, %bb25, %bb47, %bb5
  %30 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = trunc i8 %31 to i1
  %_49 = zext i1 %32 to i64
  %33 = icmp eq i64 %_49, 1
  br i1 %33, label %bb44, label %bb46

bb9:                                              ; preds = %bb13
  %34 = bitcast %"core::option::Option<alloc::string::String>"* %_12 to {}**
  store {}* null, {}** %34, align 8
  %35 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"*
  %36 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Ok"* %35, i32 0, i32 1
  %37 = bitcast %"core::option::Option<alloc::string::String>"* %36 to i8*
  %38 = bitcast %"core::option::Option<alloc::string::String>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false)
  %39 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %39, align 8
  br label %bb8

bb10:                                             ; preds = %bb13
  %40 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %41 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %40, i32 0, i32 1
  %42 = load i8, i8* %41, align 8, !range !4
  %_14 = trunc i8 %42 to i1
  %_13 = xor i1 %_14, true
  br i1 %_13, label %bb15, label %bb16

bb11:                                             ; preds = %bb16, %bb13
  %43 = bitcast { i8, i8 }* %_4 to %"core::option::Option<u8>::Some"*
  %44 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %43, i32 0, i32 1
  %b = load i8, i8* %44, align 1
  %45 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %46 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %45, i32 0, i32 1
  %47 = load i8, i8* %46, align 8, !range !4
  %_24 = trunc i8 %47 to i1
  br i1 %_24, label %bb23, label %bb24

bb12:                                             ; preds = %bb4
  %48 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %49 = bitcast { i64*, i8 }* %48 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_30 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %49, align 8, !nonnull !2
  %50 = bitcast %"serde_json::error::ErrorCode"* %_31 to i64*
  store i64 3, i64* %50, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %51 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_30, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_31)
          to label %bb26 unwind label %cleanup1

bb13:                                             ; preds = %bb4
  %52 = bitcast { i8, i8 }* %_4 to %"core::option::Option<u8>::Some"*
  %53 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %52, i32 0, i32 1
  %54 = load i8, i8* %53, align 1
  switch i8 %54, label %bb11 [
    i8 125, label %bb9
    i8 44, label %bb10
  ]

bb14:                                             ; preds = %bb4
  unreachable

bb15:                                             ; preds = %bb10
  %55 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %56 = bitcast { i64*, i8 }* %55 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_16 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %56, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_16)
          to label %bb17 unwind label %cleanup1

bb16:                                             ; preds = %bb10
  br label %bb11

bb17:                                             ; preds = %bb15
  %57 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %58 = bitcast { i64*, i8 }* %57 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_18 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %58, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_whitespace
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_17, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_18)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  %59 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to i8*
  %60 = load i8, i8* %59, align 8, !range !4
  %61 = trunc i8 %60 to i1
  %_19 = zext i1 %61 to i64
  switch i64 %_19, label %bb19 [
    i64 0, label %bb20
    i64 1, label %bb21
  ]

bb19:                                             ; preds = %bb18
  unreachable

bb20:                                             ; preds = %bb18
  %62 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %63 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %62, i32 0, i32 1
  %64 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %63, i32 0, i32 0
  %65 = load i8, i8* %64, align 1, !range !4
  %val.03 = trunc i8 %65 to i1
  %66 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %63, i32 0, i32 1
  %val.14 = load i8, i8* %66, align 1
  %67 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %peek, i32 0, i32 0
  %68 = zext i1 %val.03 to i8
  store i8 %68, i8* %67, align 1
  %69 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %peek, i32 0, i32 1
  store i8 %val.14, i8* %69, align 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_17)
          to label %bb22 unwind label %cleanup1

bb21:                                             ; preds = %bb18
  %70 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %71 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %70, i32 0, i32 1
  %err2 = load i64*, i64** %71, align 8, !nonnull !2
  %72 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %73 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %72, i32 0, i32 1
  store i64* %err2, i64** %73, align 8
  %74 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %74, align 8
  %75 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to i8*
  %76 = load i8, i8* %75, align 8, !range !4
  %77 = trunc i8 %76 to i1
  %_50 = zext i1 %77 to i64
  %78 = icmp eq i64 %_50, 1
  br i1 %78, label %bb47, label %bb48

bb22:                                             ; preds = %bb20
  br label %bb27

bb23:                                             ; preds = %bb11
  %79 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %80 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %79, i32 0, i32 1
  store i8 0, i8* %80, align 8
  %81 = bitcast { i8, i8 }* %peek to %"core::option::Option<u8>::Some"*
  %82 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %81, i32 0, i32 1
  store i8 %b, i8* %82, align 1
  %83 = bitcast { i8, i8 }* %peek to i8*
  store i8 1, i8* %83, align 1
  br label %bb27

bb24:                                             ; preds = %bb11
  %84 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %85 = bitcast { i64*, i8 }* %84 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_27 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %85, align 8, !nonnull !2
  %86 = bitcast %"serde_json::error::ErrorCode"* %_28 to i64*
  store i64 8, i64* %86, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %87 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_27, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_28)
          to label %bb25 unwind label %cleanup1

bb25:                                             ; preds = %bb24
  %88 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %89 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %88, i32 0, i32 1
  store i64* %87, i64** %89, align 8
  %90 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %90, align 8
  br label %bb8

bb26:                                             ; preds = %bb12
  %91 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %92 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %91, i32 0, i32 1
  store i64* %51, i64** %92, align 8
  %93 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %93, align 8
  br label %bb8

bb27:                                             ; preds = %bb23, %bb22
  store i8 0, i8* %_48, align 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
          to label %bb28 unwind label %cleanup

bb28:                                             ; preds = %bb27
  store i8 0, i8* %_48, align 1
  %94 = bitcast { i8, i8 }* %peek to i8*
  %95 = load i8, i8* %94, align 1, !range !4
  %96 = trunc i8 %95 to i1
  %_32 = zext i1 %96 to i64
  switch i64 %_32, label %bb34 [
    i64 0, label %bb32
    i64 1, label %bb33
  ]

bb29:                                             ; preds = %bb33
  store i8 0, i8* %_47, align 1
  %97 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %98 = bitcast { i64*, i8 }* %97 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_37 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %98, align 8, !nonnull !2
  %99 = bitcast i64** %_35 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %_37, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %99, align 8
  %100 = load i64*, i64** %_35, align 8, !nonnull !2
; invoke <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize
  invoke void @"_ZN81_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$serde..de..DeserializeSeed$GT$11deserialize17hbb7b093e441e6948E"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %_33, i64* align 8 dereferenceable(56) %100)
          to label %bb35 unwind label %cleanup

bb30:                                             ; preds = %bb33
  %101 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %102 = bitcast { i64*, i8 }* %101 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_39 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %102, align 8, !nonnull !2
  %103 = bitcast %"serde_json::error::ErrorCode"* %_40 to i64*
  store i64 20, i64* %103, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %104 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_39, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_40)
          to label %bb37 unwind label %cleanup

bb31:                                             ; preds = %bb33
  %105 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %106 = bitcast { i64*, i8 }* %105 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_42 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %106, align 8, !nonnull !2
  %107 = bitcast %"serde_json::error::ErrorCode"* %_43 to i64*
  store i64 18, i64* %107, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %108 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_42, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_43)
          to label %bb38 unwind label %cleanup

bb32:                                             ; preds = %bb28
  %109 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %110 = bitcast { i64*, i8 }* %109 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_45 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %110, align 8, !nonnull !2
  %111 = bitcast %"serde_json::error::ErrorCode"* %_46 to i64*
  store i64 5, i64* %111, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %112 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_45, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_46)
          to label %bb39 unwind label %cleanup

bb33:                                             ; preds = %bb28
  %113 = bitcast { i8, i8 }* %peek to %"core::option::Option<u8>::Some"*
  %114 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %113, i32 0, i32 1
  %115 = load i8, i8* %114, align 1
  switch i8 %115, label %bb31 [
    i8 34, label %bb29
    i8 125, label %bb30
  ]

bb34:                                             ; preds = %bb28
  unreachable

bb35:                                             ; preds = %bb29
; invoke core::result::Result<T,E>::map
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hc6bfebfcc62cf929E"(%"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, %"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture dereferenceable(32) %_33)
          to label %bb36 unwind label %cleanup

bb36:                                             ; preds = %bb35
  br label %bb40

bb37:                                             ; preds = %bb30
  %116 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %117 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %116, i32 0, i32 1
  store i64* %104, i64** %117, align 8
  %118 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %118, align 8
  br label %bb40

bb38:                                             ; preds = %bb31
  %119 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %120 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %119, i32 0, i32 1
  store i64* %108, i64** %120, align 8
  %121 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %121, align 8
  br label %bb40

bb39:                                             ; preds = %bb32
  %122 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"*
  %123 = getelementptr inbounds %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>::Err"* %122, i32 0, i32 1
  store i64* %112, i64** %123, align 8
  %124 = bitcast %"core::result::Result<core::option::Option<alloc::string::String>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %124, align 8
  br label %bb40

bb40:                                             ; preds = %bb39, %bb36, %bb37, %bb38
  %125 = load i8, i8* %_47, align 1, !range !4
  %126 = trunc i8 %125 to i1
  br i1 %126, label %bb49, label %bb6

bb41:                                             ; preds = %bb42
  store i8 0, i8* %_47, align 1
  br label %bb1

bb42:                                             ; preds = %bb7, %cleanup
  %127 = load i8, i8* %_47, align 1, !range !4
  %128 = trunc i8 %127 to i1
  br i1 %128, label %bb41, label %bb1

bb43:                                             ; preds = %bb45, %bb44, %bb46
  store i8 0, i8* %_48, align 1
  store i8 0, i8* %_47, align 1
  br label %bb6

bb44:                                             ; preds = %bb8
  %129 = load i8, i8* %_48, align 1, !range !4
  %130 = trunc i8 %129 to i1
  br i1 %130, label %bb45, label %bb43

bb45:                                             ; preds = %bb44
  store i8 0, i8* %_48, align 1
  %131 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %132 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %131, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %132)
          to label %bb43 unwind label %cleanup

bb46:                                             ; preds = %bb8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
          to label %bb43 unwind label %cleanup

bb47:                                             ; preds = %bb48, %bb21
  br label %bb8

bb48:                                             ; preds = %bb21
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_17)
          to label %bb47 unwind label %cleanup1

bb49:                                             ; preds = %bb40
  store i8 0, i8* %_47, align 1
  br label %bb6

cleanup:                                          ; preds = %bb45, %bb46, %bb32, %bb35, %bb29, %bb30, %bb31, %bb27, %start
  %133 = landingpad { i8*, i32 }
          cleanup
  %134 = extractvalue { i8*, i32 } %133, 0
  %135 = extractvalue { i8*, i32 } %133, 1
  %136 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %134, i8** %136, align 8
  %137 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %135, i32* %137, align 8
  br label %bb42

cleanup1:                                         ; preds = %bb12, %bb24, %bb20, %bb48, %bb17, %bb15
  %138 = landingpad { i8*, i32 }
          cleanup
  %139 = extractvalue { i8*, i32 } %138, 0
  %140 = extractvalue { i8*, i32 } %138, 1
  %141 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %139, i8** %141, align 8
  %142 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %140, i32* %142, align 8
  br label %bb7
}

; <serde_json::de::MapAccess<R> as serde::de::MapAccess>::next_value_seed
; Function Attrs: uwtable
define internal void @"_ZN75_$LT$serde_json..de..MapAccess$LT$R$GT$$u20$as$u20$serde..de..MapAccess$GT$15next_value_seed17h06219794d3fb9a47E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), { i64*, i8 }* align 8 dereferenceable(16) %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_12 = alloca i8, align 1
  %_4 = alloca i64*, align 8
  store i8 0, i8* %_12, align 1
  store i8 1, i8* %_12, align 1
  %2 = bitcast { i64*, i8 }* %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_5 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %2, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_object_colon
  %3 = invoke noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$18parse_object_colon17h2f365d57f6a97b57E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_5)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb9, %bb10
  %4 = bitcast { i8*, i32 }* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb2:                                              ; preds = %start
  store i64* %3, i64** %_4, align 8
  %10 = bitcast i64** %_4 to {}**
  %11 = load {}*, {}** %10, align 8
  %12 = icmp ule {}* %11, null
  %_6 = select i1 %12, i64 0, i64 1
  switch i64 %_6, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_4)
          to label %bb7 unwind label %cleanup

bb5:                                              ; preds = %bb2
  %err = load i64*, i64** %_4, align 8, !nonnull !2
  %13 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %14 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %13, i32 0, i32 1
  store i64* %err, i64** %14, align 8
  %15 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %15, align 8
  %16 = bitcast i64** %_4 to {}**
  %17 = load {}*, {}** %16, align 8
  %18 = icmp ule {}* %17, null
  %_13 = select i1 %18, i64 0, i64 1
  %19 = icmp eq i64 %_13, 1
  br i1 %19, label %bb11, label %bb12

bb6:                                              ; preds = %bb8, %bb11
  ret void

bb7:                                              ; preds = %bb4
  store i8 0, i8* %_12, align 1
  %20 = bitcast { i64*, i8 }* %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_11 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %20, align 8, !nonnull !2
; invoke <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize
  invoke void @"_ZN81_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$serde..de..DeserializeSeed$GT$11deserialize17h5175f7d415c9d7bdE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_11)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb6

bb9:                                              ; preds = %bb10
  store i8 0, i8* %_12, align 1
  br label %bb1

bb10:                                             ; preds = %cleanup
  %21 = load i8, i8* %_12, align 1, !range !4
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb9, label %bb1

bb11:                                             ; preds = %bb12, %bb5
  store i8 0, i8* %_12, align 1
  br label %bb6

bb12:                                             ; preds = %bb5
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_4)
          to label %bb11 unwind label %cleanup

cleanup:                                          ; preds = %bb7, %bb4, %bb12, %start
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb10
}

; <serde_json::de::MapKey<R> as serde::de::Deserializer>::deserialize_any
; Function Attrs: inlinehint uwtable
define internal void @"_ZN75_$LT$serde_json..de..MapKey$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$15deserialize_any17h2f110c047c6d6695E"(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), i64* align 8 dereferenceable(56)) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_23 = alloca i8, align 1
  %val = alloca %"serde_json::read::Reference<str>", align 8
  %_8 = alloca %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>", align 8
  %_7 = alloca %"serde_json::read::Reference<str>", align 8
  %self = alloca i64*, align 8
  store i64* %1, i64** %self, align 8
  store i8 0, i8* %_23, align 1
  store i8 1, i8* %_23, align 1
  %3 = bitcast i64** %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_4 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %3, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_4)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb15, %bb16
  %4 = bitcast { i8*, i32 }* %2 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb2:                                              ; preds = %start
  %10 = bitcast i64** %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %11 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %10, align 8, !nonnull !2
  %_6 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %11, i32 0, i32 3
; invoke alloc::vec::Vec<T>::clear
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$5clear17h424b6ad15462e554E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_6)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %12 = bitcast i64** %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %13 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %12, align 8, !nonnull !2
  %_9 = bitcast %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %13 to %"serde_json::read::StrRead"*
  %14 = bitcast i64** %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %15 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %14, align 8, !nonnull !2
  %_11 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %15, i32 0, i32 3
; invoke <serde_json::read::StrRead as serde_json::read::Read>::parse_str
  invoke void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$9parse_str17h400120ae3ef9939dE"(%"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %_8, %"serde_json::read::StrRead"* align 8 dereferenceable(24) %_9, %"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %16 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to i64*
  %_12 = load i64, i64* %16, align 8, !range !1
  switch i64 %_12, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb7
  ]

bb5:                                              ; preds = %bb4
  unreachable

bb6:                                              ; preds = %bb4
  %17 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok"* %17, i32 0, i32 1
  %19 = bitcast %"serde_json::read::Reference<str>"* %val to i8*
  %20 = bitcast %"serde_json::read::Reference<str>"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
  %21 = bitcast %"serde_json::read::Reference<str>"* %_7 to i8*
  %22 = bitcast %"serde_json::read::Reference<str>"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false)
  %23 = bitcast %"serde_json::read::Reference<str>"* %_7 to i64*
  %_16 = load i64, i64* %23, align 8, !range !1
  switch i64 %_16, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb7:                                              ; preds = %bb4
  %24 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"*
  %25 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"* %24, i32 0, i32 1
  %err = load i64*, i64** %25, align 8, !nonnull !2
  %26 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Err"* %26, i32 0, i32 1
  store i64* %err, i64** %27, align 8
  %28 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %28, align 8
  %29 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to i64*
  %_25 = load i64, i64* %29, align 8, !range !1
  store i8 0, i8* %_23, align 1
  br label %bb8

bb8:                                              ; preds = %bb18, %bb7
  ret void

bb9:                                              ; preds = %cleanup1
  %30 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to i64*
  %_24 = load i64, i64* %30, align 8, !range !1
  %31 = icmp eq i64 %_24, 0
  br i1 %31, label %bb16, label %bb17

bb10:                                             ; preds = %bb6
  unreachable

bb11:                                             ; preds = %bb6
  %32 = bitcast %"serde_json::read::Reference<str>"* %_7 to %"serde_json::read::Reference<str>::Borrowed"*
  %33 = getelementptr inbounds %"serde_json::read::Reference<str>::Borrowed", %"serde_json::read::Reference<str>::Borrowed"* %32, i32 0, i32 1
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %33, i32 0, i32 0
  %s.02 = load [0 x i8]*, [0 x i8]** %34, align 8, !nonnull !2
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %33, i32 0, i32 1
  %s.13 = load i64, i64* %35, align 8
  store i8 0, i8* %_23, align 1
; invoke serde::de::Visitor::visit_borrowed_str
  invoke void @_ZN5serde2de7Visitor18visit_borrowed_str17hfd9d1b33e93c8e6bE(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, [0 x i8]* noalias nonnull readonly align 1 %s.02, i64 %s.13)
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  br label %bb20

bb13:                                             ; preds = %bb6
  %36 = bitcast %"serde_json::read::Reference<str>"* %_7 to %"serde_json::read::Reference<str>::Copied"*
  %37 = getelementptr inbounds %"serde_json::read::Reference<str>::Copied", %"serde_json::read::Reference<str>::Copied"* %36, i32 0, i32 1
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !2
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1
  %s.1 = load i64, i64* %39, align 8
  store i8 0, i8* %_23, align 1
; invoke <serde_json::value::de::KeyClassifier as serde::de::Visitor>::visit_str
  invoke void @"_ZN75_$LT$serde_json..value..de..KeyClassifier$u20$as$u20$serde..de..Visitor$GT$9visit_str17h076d1410e3ea5d3bE"(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1)
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  br label %bb20

bb15:                                             ; preds = %bb16
  store i8 0, i8* %_23, align 1
  br label %bb1

bb16:                                             ; preds = %bb17, %bb9, %cleanup
  %40 = load i8, i8* %_23, align 1, !range !4
  %41 = trunc i8 %40 to i1
  br i1 %41, label %bb15, label %bb1

bb17:                                             ; preds = %bb9
  %42 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"*
  %43 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"* %42, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %43) #14
  br label %bb16

bb18:                                             ; preds = %bb19, %bb20
  br label %bb8

bb19:                                             ; preds = %bb20
  %44 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"*
  %45 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"* %44, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %45)
          to label %bb18 unwind label %cleanup

bb20:                                             ; preds = %bb12, %bb14
  %46 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to i64*
  %_26 = load i64, i64* %46, align 8, !range !1
  %47 = icmp eq i64 %_26, 0
  br i1 %47, label %bb18, label %bb19

cleanup:                                          ; preds = %bb19, %bb3, %bb2, %start
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = extractvalue { i8*, i32 } %48, 1
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  br label %bb16

cleanup1:                                         ; preds = %bb11, %bb13
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb9
}

; <serde_json::de::MapKey<R> as serde::de::Deserializer>::deserialize_any
; Function Attrs: inlinehint uwtable
define internal void @"_ZN75_$LT$serde_json..de..MapKey$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$15deserialize_any17hb3b2229bfce93537E"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), i64* align 8 dereferenceable(56)) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_23 = alloca i8, align 1
  %val = alloca %"serde_json::read::Reference<str>", align 8
  %_8 = alloca %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>", align 8
  %_7 = alloca %"serde_json::read::Reference<str>", align 8
  %self = alloca i64*, align 8
  store i64* %1, i64** %self, align 8
  store i8 0, i8* %_23, align 1
  store i8 1, i8* %_23, align 1
  %3 = bitcast i64** %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_4 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %3, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_4)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb15, %bb16
  %4 = bitcast { i8*, i32 }* %2 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = insertvalue { i8*, i32 } undef, i8* %5, 0
  %9 = insertvalue { i8*, i32 } %8, i32 %7, 1
  resume { i8*, i32 } %9

bb2:                                              ; preds = %start
  %10 = bitcast i64** %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %11 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %10, align 8, !nonnull !2
  %_6 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %11, i32 0, i32 3
; invoke alloc::vec::Vec<T>::clear
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$5clear17h424b6ad15462e554E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_6)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %12 = bitcast i64** %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %13 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %12, align 8, !nonnull !2
  %_9 = bitcast %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %13 to %"serde_json::read::StrRead"*
  %14 = bitcast i64** %self to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %15 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %14, align 8, !nonnull !2
  %_11 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %15, i32 0, i32 3
; invoke <serde_json::read::StrRead as serde_json::read::Read>::parse_str
  invoke void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$9parse_str17h400120ae3ef9939dE"(%"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %_8, %"serde_json::read::StrRead"* align 8 dereferenceable(24) %_9, %"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %16 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to i64*
  %_12 = load i64, i64* %16, align 8, !range !1
  switch i64 %_12, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb7
  ]

bb5:                                              ; preds = %bb4
  unreachable

bb6:                                              ; preds = %bb4
  %17 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok"*
  %18 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok"* %17, i32 0, i32 1
  %19 = bitcast %"serde_json::read::Reference<str>"* %val to i8*
  %20 = bitcast %"serde_json::read::Reference<str>"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false)
  %21 = bitcast %"serde_json::read::Reference<str>"* %_7 to i8*
  %22 = bitcast %"serde_json::read::Reference<str>"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false)
  %23 = bitcast %"serde_json::read::Reference<str>"* %_7 to i64*
  %_16 = load i64, i64* %23, align 8, !range !1
  switch i64 %_16, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb13
  ]

bb7:                                              ; preds = %bb4
  %24 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"*
  %25 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"* %24, i32 0, i32 1
  %err = load i64*, i64** %25, align 8, !nonnull !2
  %26 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %0 to %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err"*
  %27 = getelementptr inbounds %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err", %"core::result::Result<alloc::string::String, serde_json::error::Error>::Err"* %26, i32 0, i32 1
  store i64* %err, i64** %27, align 8
  %28 = bitcast %"core::result::Result<alloc::string::String, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %28, align 8
  %29 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to i64*
  %_25 = load i64, i64* %29, align 8, !range !1
  store i8 0, i8* %_23, align 1
  br label %bb8

bb8:                                              ; preds = %bb18, %bb7
  ret void

bb9:                                              ; preds = %cleanup1
  %30 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to i64*
  %_24 = load i64, i64* %30, align 8, !range !1
  %31 = icmp eq i64 %_24, 0
  br i1 %31, label %bb16, label %bb17

bb10:                                             ; preds = %bb6
  unreachable

bb11:                                             ; preds = %bb6
  %32 = bitcast %"serde_json::read::Reference<str>"* %_7 to %"serde_json::read::Reference<str>::Borrowed"*
  %33 = getelementptr inbounds %"serde_json::read::Reference<str>::Borrowed", %"serde_json::read::Reference<str>::Borrowed"* %32, i32 0, i32 1
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %33, i32 0, i32 0
  %s.02 = load [0 x i8]*, [0 x i8]** %34, align 8, !nonnull !2
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %33, i32 0, i32 1
  %s.13 = load i64, i64* %35, align 8
  store i8 0, i8* %_23, align 1
; invoke serde::de::Visitor::visit_borrowed_str
  invoke void @_ZN5serde2de7Visitor18visit_borrowed_str17h0ef1f3d74cd925bbE(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, [0 x i8]* noalias nonnull readonly align 1 %s.02, i64 %s.13)
          to label %bb12 unwind label %cleanup1

bb12:                                             ; preds = %bb11
  br label %bb20

bb13:                                             ; preds = %bb6
  %36 = bitcast %"serde_json::read::Reference<str>"* %_7 to %"serde_json::read::Reference<str>::Copied"*
  %37 = getelementptr inbounds %"serde_json::read::Reference<str>::Copied", %"serde_json::read::Reference<str>::Copied"* %36, i32 0, i32 1
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !nonnull !2
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1
  %s.1 = load i64, i64* %39, align 8
  store i8 0, i8* %_23, align 1
; invoke <serde::de::impls::StringVisitor as serde::de::Visitor>::visit_str
  invoke void @"_ZN70_$LT$serde..de..impls..StringVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_str17h554bb79c6a1a931cE"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1)
          to label %bb14 unwind label %cleanup1

bb14:                                             ; preds = %bb13
  br label %bb20

bb15:                                             ; preds = %bb16
  store i8 0, i8* %_23, align 1
  br label %bb1

bb16:                                             ; preds = %bb17, %bb9, %cleanup
  %40 = load i8, i8* %_23, align 1, !range !4
  %41 = trunc i8 %40 to i1
  br i1 %41, label %bb15, label %bb1

bb17:                                             ; preds = %bb9
  %42 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"*
  %43 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"* %42, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %43) #14
  br label %bb16

bb18:                                             ; preds = %bb19, %bb20
  br label %bb8

bb19:                                             ; preds = %bb20
  %44 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"*
  %45 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"* %44, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %45)
          to label %bb18 unwind label %cleanup

bb20:                                             ; preds = %bb12, %bb14
  %46 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_8 to i64*
  %_26 = load i64, i64* %46, align 8, !range !1
  %47 = icmp eq i64 %_26, 0
  br i1 %47, label %bb18, label %bb19

cleanup:                                          ; preds = %bb19, %bb3, %bb2, %start
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = extractvalue { i8*, i32 } %48, 1
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %50, i32* %52, align 8
  br label %bb16

cleanup1:                                         ; preds = %bb11, %bb13
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb9
}

; <serde_json::de::MapKey<R> as serde::de::Deserializer>::deserialize_str
; Function Attrs: inlinehint uwtable
define internal void @"_ZN75_$LT$serde_json..de..MapKey$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$15deserialize_str17ha66a0fd4f009deb7E"(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), i64* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
; call <serde_json::de::MapKey<R> as serde::de::Deserializer>::deserialize_any
  call void @"_ZN75_$LT$serde_json..de..MapKey$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$15deserialize_any17h2f110c047c6d6695E"(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, i64* align 8 dereferenceable(56) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <serde_json::de::MapKey<R> as serde::de::Deserializer>::deserialize_string
; Function Attrs: inlinehint uwtable
define internal void @"_ZN75_$LT$serde_json..de..MapKey$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17hfe0e4b80040d5fd2E"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), i64* align 8 dereferenceable(56) %self) unnamed_addr #0 {
start:
; call <serde_json::de::MapKey<R> as serde::de::Deserializer>::deserialize_any
  call void @"_ZN75_$LT$serde_json..de..MapKey$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$15deserialize_any17hb3b2229bfce93537E"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, i64* align 8 dereferenceable(56) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <serde_json::de::SeqAccess<R> as serde::de::SeqAccess>::next_element_seed
; Function Attrs: uwtable
define internal void @"_ZN75_$LT$serde_json..de..SeqAccess$LT$R$GT$$u20$as$u20$serde..de..SeqAccess$GT$17next_element_seed17hb785b92967988a08E"(%"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), { i64*, i8 }* align 8 dereferenceable(16)) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_49 = alloca i8, align 1
  %_48 = alloca i8, align 1
  %_47 = alloca %"serde_json::error::ErrorCode", align 8
  %val = alloca %"serde_json::value::Value", align 8
  %_38 = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %_37 = alloca %"serde_json::value::Value", align 8
  %_36 = alloca %"core::option::Option<serde_json::value::Value>", align 8
  %_35 = alloca %"serde_json::error::ErrorCode", align 8
  %_31 = alloca %"serde_json::error::ErrorCode", align 8
  %_28 = alloca %"serde_json::error::ErrorCode", align 8
  %_17 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_12 = alloca %"core::option::Option<serde_json::value::Value>", align 8
  %_5 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_4 = alloca { i8, i8 }, align 1
  %peek = alloca { i8, i8 }, align 1
  %self = alloca { i64*, i8 }*, align 8
  store { i64*, i8 }* %1, { i64*, i8 }** %self, align 8
  store i8 0, i8* %_49, align 1
  store i8 0, i8* %_48, align 1
  store i8 1, i8* %_48, align 1
  %3 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %4 = bitcast { i64*, i8 }* %3 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_6 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %4, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_whitespace
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_5, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_6)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb42, %bb43
  %5 = bitcast { i8*, i32 }* %2 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
  store i8 1, i8* %_49, align 1
  %11 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = trunc i8 %12 to i1
  %_7 = zext i1 %13 to i64
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %14 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %15 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %14, i32 0, i32 1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %15, i32 0, i32 0
  %17 = load i8, i8* %16, align 1, !range !4
  %val.0 = trunc i8 %17 to i1
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %15, i32 0, i32 1
  %val.1 = load i8, i8* %18, align 1
  %19 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 0
  %20 = zext i1 %val.0 to i8
  store i8 %20, i8* %19, align 1
  %21 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 1
  store i8 %val.1, i8* %21, align 1
  %22 = bitcast { i8, i8 }* %_4 to i8*
  %23 = load i8, i8* %22, align 1, !range !4
  %24 = trunc i8 %23 to i1
  %_11 = zext i1 %24 to i64
  switch i64 %_11, label %bb15 [
    i64 0, label %bb13
    i64 1, label %bb14
  ]

bb5:                                              ; preds = %bb2
  store i8 0, i8* %_49, align 1
  %25 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %25, i32 0, i32 1
  %err = load i64*, i64** %26, align 8, !nonnull !2
  %27 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %28 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %27, i32 0, i32 1
  store i64* %err, i64** %28, align 8
  %29 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %29, align 8
  br label %bb8

bb6:                                              ; preds = %bb48, %bb9, %bb55, %bb41
  ret void

bb7:                                              ; preds = %cleanup1
  store i8 0, i8* %_49, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5) #14
  br label %bb43

bb8:                                              ; preds = %bb27, %bb10, %bb26, %bb49, %bb5
  %30 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = trunc i8 %31 to i1
  %_50 = zext i1 %32 to i64
  %33 = icmp eq i64 %_50, 1
  br i1 %33, label %bb45, label %bb47

bb9:                                              ; preds = %bb44, %bb51
  %34 = load i8, i8* %_48, align 1, !range !4
  %35 = trunc i8 %34 to i1
  br i1 %35, label %bb48, label %bb6

bb10:                                             ; preds = %bb14
  %36 = bitcast %"core::option::Option<serde_json::value::Value>"* %_12 to i8*
  store i8 6, i8* %36, align 8
  %37 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok"*
  %38 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok"* %37, i32 0, i32 1
  %39 = bitcast %"core::option::Option<serde_json::value::Value>"* %38 to i8*
  %40 = bitcast %"core::option::Option<serde_json::value::Value>"* %_12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 32, i1 false)
  %41 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %41, align 8
  br label %bb8

bb11:                                             ; preds = %bb14
  %42 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %43 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %42, i32 0, i32 1
  %44 = load i8, i8* %43, align 8, !range !4
  %_14 = trunc i8 %44 to i1
  %_13 = xor i1 %_14, true
  br i1 %_13, label %bb16, label %bb17

bb12:                                             ; preds = %bb17, %bb14
  %45 = bitcast { i8, i8 }* %_4 to %"core::option::Option<u8>::Some"*
  %46 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %45, i32 0, i32 1
  %b = load i8, i8* %46, align 1
  %47 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %48 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %47, i32 0, i32 1
  %49 = load i8, i8* %48, align 8, !range !4
  %_24 = trunc i8 %49 to i1
  br i1 %_24, label %bb24, label %bb25

bb13:                                             ; preds = %bb4
  %50 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %51 = bitcast { i64*, i8 }* %50 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_30 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %51, align 8, !nonnull !2
  %52 = bitcast %"serde_json::error::ErrorCode"* %_31 to i64*
  store i64 2, i64* %52, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %53 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_30, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_31)
          to label %bb27 unwind label %cleanup1

bb14:                                             ; preds = %bb4
  %54 = bitcast { i8, i8 }* %_4 to %"core::option::Option<u8>::Some"*
  %55 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %54, i32 0, i32 1
  %56 = load i8, i8* %55, align 1
  switch i8 %56, label %bb12 [
    i8 93, label %bb10
    i8 44, label %bb11
  ]

bb15:                                             ; preds = %bb4
  unreachable

bb16:                                             ; preds = %bb11
  %57 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %58 = bitcast { i64*, i8 }* %57 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_16 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %58, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_16)
          to label %bb18 unwind label %cleanup1

bb17:                                             ; preds = %bb11
  br label %bb12

bb18:                                             ; preds = %bb16
  %59 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %60 = bitcast { i64*, i8 }* %59 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_18 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %60, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_whitespace
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_17, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_18)
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
  %61 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to i8*
  %62 = load i8, i8* %61, align 8, !range !4
  %63 = trunc i8 %62 to i1
  %_19 = zext i1 %63 to i64
  switch i64 %_19, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb22
  ]

bb20:                                             ; preds = %bb19
  unreachable

bb21:                                             ; preds = %bb19
  %64 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %65 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %64, i32 0, i32 1
  %66 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %65, i32 0, i32 0
  %67 = load i8, i8* %66, align 1, !range !4
  %val.03 = trunc i8 %67 to i1
  %68 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %65, i32 0, i32 1
  %val.14 = load i8, i8* %68, align 1
  %69 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %peek, i32 0, i32 0
  %70 = zext i1 %val.03 to i8
  store i8 %70, i8* %69, align 1
  %71 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %peek, i32 0, i32 1
  store i8 %val.14, i8* %71, align 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_17)
          to label %bb23 unwind label %cleanup1

bb22:                                             ; preds = %bb19
  %72 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %73 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %72, i32 0, i32 1
  %err2 = load i64*, i64** %73, align 8, !nonnull !2
  %74 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %75 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %74, i32 0, i32 1
  store i64* %err2, i64** %75, align 8
  %76 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %76, align 8
  %77 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_17 to i8*
  %78 = load i8, i8* %77, align 8, !range !4
  %79 = trunc i8 %78 to i1
  %_51 = zext i1 %79 to i64
  %80 = icmp eq i64 %_51, 1
  br i1 %80, label %bb49, label %bb50

bb23:                                             ; preds = %bb21
  br label %bb28

bb24:                                             ; preds = %bb12
  %81 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %82 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %81, i32 0, i32 1
  store i8 0, i8* %82, align 8
  %83 = bitcast { i8, i8 }* %peek to %"core::option::Option<u8>::Some"*
  %84 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %83, i32 0, i32 1
  store i8 %b, i8* %84, align 1
  %85 = bitcast { i8, i8 }* %peek to i8*
  store i8 1, i8* %85, align 1
  br label %bb28

bb25:                                             ; preds = %bb12
  %86 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %87 = bitcast { i64*, i8 }* %86 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_27 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %87, align 8, !nonnull !2
  %88 = bitcast %"serde_json::error::ErrorCode"* %_28 to i64*
  store i64 7, i64* %88, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %89 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_27, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_28)
          to label %bb26 unwind label %cleanup1

bb26:                                             ; preds = %bb25
  %90 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %91 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %90, i32 0, i32 1
  store i64* %89, i64** %91, align 8
  %92 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %92, align 8
  br label %bb8

bb27:                                             ; preds = %bb13
  %93 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %94 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %93, i32 0, i32 1
  store i64* %53, i64** %94, align 8
  %95 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %95, align 8
  br label %bb8

bb28:                                             ; preds = %bb24, %bb23
  store i8 0, i8* %_49, align 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
          to label %bb29 unwind label %cleanup

bb29:                                             ; preds = %bb28
  store i8 0, i8* %_49, align 1
  %96 = bitcast { i8, i8 }* %peek to i8*
  %97 = load i8, i8* %96, align 1, !range !4
  %98 = trunc i8 %97 to i1
  %_32 = zext i1 %98 to i64
  switch i64 %_32, label %bb34 [
    i64 0, label %bb32
    i64 1, label %bb33
  ]

bb30:                                             ; preds = %bb33
  %99 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %100 = bitcast { i64*, i8 }* %99 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_34 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %100, align 8, !nonnull !2
  %101 = bitcast %"serde_json::error::ErrorCode"* %_35 to i64*
  store i64 20, i64* %101, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %102 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_34, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_35)
          to label %bb35 unwind label %cleanup

bb31:                                             ; preds = %bb33
  store i8 0, i8* %_48, align 1
  %103 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %104 = bitcast { i64*, i8 }* %103 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_40 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %104, align 8, !nonnull !2
; invoke <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize
  invoke void @"_ZN81_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$serde..de..DeserializeSeed$GT$11deserialize17h5175f7d415c9d7bdE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %_38, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_40)
          to label %bb36 unwind label %cleanup

bb32:                                             ; preds = %bb29
  %105 = load { i64*, i8 }*, { i64*, i8 }** %self, align 8, !nonnull !2
  %106 = bitcast { i64*, i8 }* %105 to %"serde_json::de::Deserializer<serde_json::read::StrRead>"**
  %_46 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %106, align 8, !nonnull !2
  %107 = bitcast %"serde_json::error::ErrorCode"* %_47 to i64*
  store i64 5, i64* %107, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %108 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_46, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_47)
          to label %bb40 unwind label %cleanup

bb33:                                             ; preds = %bb29
  %109 = bitcast { i8, i8 }* %peek to %"core::option::Option<u8>::Some"*
  %110 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %109, i32 0, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 93
  br i1 %112, label %bb30, label %bb31

bb34:                                             ; preds = %bb29
  unreachable

bb35:                                             ; preds = %bb30
  %113 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %114 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %113, i32 0, i32 1
  store i64* %102, i64** %114, align 8
  %115 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %115, align 8
  br label %bb41

bb36:                                             ; preds = %bb31
  %116 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_38 to i64*
  %_41 = load i64, i64* %116, align 8, !range !1
  switch i64 %_41, label %bb37 [
    i64 0, label %bb38
    i64 1, label %bb39
  ]

bb37:                                             ; preds = %bb36
  unreachable

bb38:                                             ; preds = %bb36
  %117 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_38 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %118 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %117, i32 0, i32 1
  %119 = bitcast %"serde_json::value::Value"* %val to i8*
  %120 = bitcast %"serde_json::value::Value"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 32, i1 false)
  %121 = bitcast %"serde_json::value::Value"* %_37 to i8*
  %122 = bitcast %"serde_json::value::Value"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 32, i1 false)
  %123 = bitcast %"core::option::Option<serde_json::value::Value>"* %_36 to %"core::option::Option<serde_json::value::Value>::Some"*
  %124 = bitcast %"core::option::Option<serde_json::value::Value>::Some"* %123 to %"serde_json::value::Value"*
  %125 = bitcast %"serde_json::value::Value"* %124 to i8*
  %126 = bitcast %"serde_json::value::Value"* %_37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 32, i1 false)
  %127 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok"*
  %128 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Ok"* %127, i32 0, i32 1
  %129 = bitcast %"core::option::Option<serde_json::value::Value>"* %128 to i8*
  %130 = bitcast %"core::option::Option<serde_json::value::Value>"* %_36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 32, i1 false)
  %131 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %131, align 8
  %132 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_38 to i64*
  %_53 = load i64, i64* %132, align 8, !range !1
  %133 = icmp eq i64 %_53, 0
  br i1 %133, label %bb53, label %bb54

bb39:                                             ; preds = %bb36
  %134 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_38 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %135 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %134, i32 0, i32 1
  %err5 = load i64*, i64** %135, align 8, !nonnull !2
  %136 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %137 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %136, i32 0, i32 1
  store i64* %err5, i64** %137, align 8
  %138 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %138, align 8
  %139 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_38 to i64*
  %_52 = load i64, i64* %139, align 8, !range !1
  %140 = icmp eq i64 %_52, 0
  br i1 %140, label %bb52, label %bb51

bb40:                                             ; preds = %bb32
  %141 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"*
  %142 = getelementptr inbounds %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>::Err"* %141, i32 0, i32 1
  store i64* %108, i64** %142, align 8
  %143 = bitcast %"core::result::Result<core::option::Option<serde_json::value::Value>, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %143, align 8
  br label %bb41

bb41:                                             ; preds = %bb40, %bb35, %bb53
  %144 = load i8, i8* %_48, align 1, !range !4
  %145 = trunc i8 %144 to i1
  br i1 %145, label %bb55, label %bb6

bb42:                                             ; preds = %bb43
  store i8 0, i8* %_48, align 1
  br label %bb1

bb43:                                             ; preds = %bb7, %cleanup
  %146 = load i8, i8* %_48, align 1, !range !4
  %147 = trunc i8 %146 to i1
  br i1 %147, label %bb42, label %bb1

bb44:                                             ; preds = %bb46, %bb45, %bb47
  store i8 0, i8* %_49, align 1
  br label %bb9

bb45:                                             ; preds = %bb8
  %148 = load i8, i8* %_49, align 1, !range !4
  %149 = trunc i8 %148 to i1
  br i1 %149, label %bb46, label %bb44

bb46:                                             ; preds = %bb45
  store i8 0, i8* %_49, align 1
  %150 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %151 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %150, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %151)
          to label %bb44 unwind label %cleanup

bb47:                                             ; preds = %bb8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
          to label %bb44 unwind label %cleanup

bb48:                                             ; preds = %bb9
  store i8 0, i8* %_48, align 1
  br label %bb6

bb49:                                             ; preds = %bb50, %bb22
  br label %bb8

bb50:                                             ; preds = %bb22
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_17)
          to label %bb49 unwind label %cleanup1

bb51:                                             ; preds = %bb52, %bb39
  br label %bb9

bb52:                                             ; preds = %bb39
  %152 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_38 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %153 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %152, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %153)
          to label %bb51 unwind label %cleanup

bb53:                                             ; preds = %bb54, %bb38
  br label %bb41

bb54:                                             ; preds = %bb38
  %154 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_38 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %155 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %154, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %155)
          to label %bb53 unwind label %cleanup

bb55:                                             ; preds = %bb41
  store i8 0, i8* %_48, align 1
  br label %bb6

cleanup:                                          ; preds = %bb46, %bb47, %bb32, %bb30, %bb54, %bb52, %bb31, %bb28, %start
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = extractvalue { i8*, i32 } %156, 0
  %158 = extractvalue { i8*, i32 } %156, 1
  %159 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %157, i8** %159, align 8
  %160 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %158, i32* %160, align 8
  br label %bb43

cleanup1:                                         ; preds = %bb13, %bb25, %bb21, %bb50, %bb18, %bb16
  %161 = landingpad { i8*, i32 }
          cleanup
  %162 = extractvalue { i8*, i32 } %161, 0
  %163 = extractvalue { i8*, i32 } %161, 1
  %164 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %162, i8** %164, align 8
  %165 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %163, i32* %165, align 8
  br label %bb7
}

; <serde_json::value::de::KeyClassifier as serde::de::Visitor>::visit_str
; Function Attrs: uwtable
define internal void @"_ZN75_$LT$serde_json..value..de..KeyClassifier$u20$as$u20$serde..de..Visitor$GT$9visit_str17h076d1410e3ea5d3bE"(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_4 = alloca %"alloc::string::String", align 8
  %_3 = alloca %"serde_json::value::de::KeyClass::Map", align 8
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hd9e7cf79cb120421E"(%"alloc::string::String"* noalias nocapture sret dereferenceable(24) %_4, [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"serde_json::value::de::KeyClass::Map"* %_3 to %"alloc::string::String"*
  %2 = bitcast %"alloc::string::String"* %1 to i8*
  %3 = bitcast %"alloc::string::String"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %4 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok"*
  %5 = getelementptr inbounds %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>::Ok"* %4, i32 0, i32 1
  %6 = bitcast %"serde_json::value::de::KeyClass::Map"* %5 to i8*
  %7 = bitcast %"serde_json::value::de::KeyClass::Map"* %_3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = bitcast %"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %8, align 8
  ret void
}

; <alloc::string::String as core::convert::From<&str>>::from
; Function Attrs: inlinehint uwtable
define internal void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h772b472e2b9dfe64E"(%"alloc::string::String"* noalias nocapture sret dereferenceable(24), [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hd9e7cf79cb120421E"(%"alloc::string::String"* noalias nocapture sret dereferenceable(24) %0, [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h524dc311f454e1b9E"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call alloc::raw_vec::RawVec<T,A>::dealloc_buffer
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14dealloc_buffer17h72b04f78cb022be9E"({ i8*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hcbd769255ba4170dE"({ i64*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 {
start:
; call alloc::raw_vec::RawVec<T,A>::dealloc_buffer
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14dealloc_buffer17h15949f4ebcc0f0f2E"({ i64*, i64 }* align 8 dereferenceable(16) %self)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <serde_json::number::Number as core::convert::From<i64>>::from
; Function Attrs: inlinehint uwtable
define internal void @"_ZN77_$LT$serde_json..number..Number$u20$as$u20$core..convert..From$LT$i64$GT$$GT$4from17h9bc3e0ce1325b57cE"(%"serde_json::number::Number"* noalias nocapture sret dereferenceable(16), i64 %i) unnamed_addr #0 {
start:
  %_8 = alloca %"serde_json::number::N", align 8
  %n = alloca %"serde_json::number::N", align 8
  %_3 = icmp slt i64 %i, 0
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %1 = bitcast %"serde_json::number::N"* %n to %"serde_json::number::N::PosInt"*
  %2 = getelementptr inbounds %"serde_json::number::N::PosInt", %"serde_json::number::N::PosInt"* %1, i32 0, i32 1
  store i64 %i, i64* %2, align 8
  %3 = bitcast %"serde_json::number::N"* %n to i64*
  store i64 0, i64* %3, align 8
  br label %bb3

bb2:                                              ; preds = %start
  %4 = bitcast %"serde_json::number::N"* %n to %"serde_json::number::N::NegInt"*
  %5 = getelementptr inbounds %"serde_json::number::N::NegInt", %"serde_json::number::N::NegInt"* %4, i32 0, i32 1
  store i64 %i, i64* %5, align 8
  %6 = bitcast %"serde_json::number::N"* %n to i64*
  store i64 1, i64* %6, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %7 = bitcast %"serde_json::number::N"* %_8 to i8*
  %8 = bitcast %"serde_json::number::N"* %n to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = bitcast %"serde_json::number::Number"* %0 to %"serde_json::number::N"*
  %10 = bitcast %"serde_json::number::N"* %9 to i8*
  %11 = bitcast %"serde_json::number::N"* %_8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false)
  ret void
}

; <serde_json::number::Number as core::convert::From<u64>>::from
; Function Attrs: inlinehint uwtable
define internal void @"_ZN77_$LT$serde_json..number..Number$u20$as$u20$core..convert..From$LT$u64$GT$$GT$4from17hb9726165b1c49e16E"(%"serde_json::number::Number"* noalias nocapture sret dereferenceable(16), i64 %u) unnamed_addr #0 {
start:
  %_4 = alloca %"serde_json::number::N", align 8
  %n = alloca %"serde_json::number::N", align 8
  %1 = bitcast %"serde_json::number::N"* %n to %"serde_json::number::N::PosInt"*
  %2 = getelementptr inbounds %"serde_json::number::N::PosInt", %"serde_json::number::N::PosInt"* %1, i32 0, i32 1
  store i64 %u, i64* %2, align 8
  %3 = bitcast %"serde_json::number::N"* %n to i64*
  store i64 0, i64* %3, align 8
  %4 = bitcast %"serde_json::number::N"* %_4 to i8*
  %5 = bitcast %"serde_json::number::N"* %n to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = bitcast %"serde_json::number::Number"* %0 to %"serde_json::number::N"*
  %7 = bitcast %"serde_json::number::N"* %6 to i8*
  %8 = bitcast %"serde_json::number::N"* %_4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  ret void
}

; <alloc::vec::Vec<T> as core::ops::index::IndexMut<I>>::index_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @"_ZN80_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17ha24535a27897a8aeE"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
; invoke <alloc::vec::Vec<T> as core::ops::deref::DerefMut>::deref_mut
  %1 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h589a0160353ee4e0E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %self)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb4, %bb5
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %_6.0 = extractvalue { [0 x i8]*, i64 } %1, 0
  %_6.1 = extractvalue { [0 x i8]*, i64 } %1, 1
  store i8 0, i8* %_10, align 1
; invoke core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %8 = invoke { [0 x i8]*, i64 } @"_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h79e7302e234d2e49E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_3.0 = extractvalue { [0 x i8]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %8, 1
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %10

bb4:                                              ; preds = %bb5
  store i8 0, i8* %_10, align 1
  br label %bb1

bb5:                                              ; preds = %cleanup
  %11 = load i8, i8* %_10, align 1, !range !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb4, label %bb1

cleanup:                                          ; preds = %bb2, %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb5
}

; <alloc::vec::Vec<T> as core::ops::index::IndexMut<I>>::index_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN80_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17hb66c17f7c24f09b5E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_10 = alloca i8, align 1
  store i8 0, i8* %_10, align 1
  store i8 1, i8* %_10, align 1
; invoke <alloc::vec::Vec<T> as core::ops::deref::DerefMut>::deref_mut
  %1 = invoke { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN71_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h17a9e8d4898c6359E"(%"alloc::vec::Vec<serde_json::value::Value>"* align 8 dereferenceable(24) %self)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb4, %bb5
  %2 = bitcast { i8*, i32 }* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %7 = insertvalue { i8*, i32 } %6, i32 %5, 1
  resume { i8*, i32 } %7

bb2:                                              ; preds = %start
  %_6.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %1, 0
  %_6.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %1, 1
  store i8 0, i8* %_10, align 1
; invoke core::slice::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %8 = invoke { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN4core5slice77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17ha9a2fe20bb67b172E"([0 x %"serde_json::value::Value"]* nonnull align 8 %_6.0, i64 %_6.1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_3.0 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %8, 0
  %_3.1 = extractvalue { [0 x %"serde_json::value::Value"]*, i64 } %8, 1
  %9 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %_3.0, 0
  %10 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %9, i64 %_3.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %10

bb4:                                              ; preds = %bb5
  store i8 0, i8* %_10, align 1
  br label %bb1

bb5:                                              ; preds = %cleanup
  %11 = load i8, i8* %_10, align 1, !range !4
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb4, label %bb1

cleanup:                                          ; preds = %bb2, %start
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb5
}

; <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize
; Function Attrs: inlinehint uwtable
define internal void @"_ZN81_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$serde..de..DeserializeSeed$GT$11deserialize17h5175f7d415c9d7bdE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %deserializer) unnamed_addr #0 {
start:
; call serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize
  call void @"_ZN10serde_json5value2de77_$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$11deserialize17h6a070a70d67c12dbE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %0, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %deserializer)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::marker::PhantomData<T> as serde::de::DeserializeSeed>::deserialize
; Function Attrs: inlinehint uwtable
define internal void @"_ZN81_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$serde..de..DeserializeSeed$GT$11deserialize17hbb7b093e441e6948E"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), i64* align 8 dereferenceable(56) %deserializer) unnamed_addr #0 {
start:
; call serde::de::impls::<impl serde::de::Deserialize for alloc::string::String>::deserialize
  call void @"_ZN5serde2de5impls74_$LT$impl$u20$serde..de..Deserialize$u20$for$u20$alloc..string..String$GT$11deserialize17h14b8016608f23eeeE"(%"core::result::Result<alloc::string::String, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, i64* align 8 dereferenceable(56) %deserializer)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed>::deserialize
; Function Attrs: uwtable
define internal void @"_ZN83_$LT$serde_json..value..de..KeyClassifier$u20$as$u20$serde..de..DeserializeSeed$GT$11deserialize17hbc647b2dd35e98f6E"(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), i64* align 8 dereferenceable(56) %deserializer) unnamed_addr #1 {
start:
; call <serde_json::de::MapKey<R> as serde::de::Deserializer>::deserialize_str
  call void @"_ZN75_$LT$serde_json..de..MapKey$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$15deserialize_str17ha66a0fd4f009deb7E"(%"core::result::Result<serde_json::value::de::KeyClass, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %0, i64* align 8 dereferenceable(56) %deserializer)
  br label %bb1

bb1:                                              ; preds = %start
  ret void
}

; <core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint uwtable
define internal align 1 dereferenceable_or_null(1) i8* @"_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3a5f1015b75355f6E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8*, align 8
  %self.i = alloca { i8*, i8* }*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = bitcast { i8*, i8* }* %self to i8**
  %_5 = load i8*, i8** %4, align 8
; call core::ptr::<impl *const T>::is_null
  %5 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h59711f8087130b82E"(i8* %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = xor i1 %5, true
  call void @llvm.assume(i1 %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64 1, i64* %2, align 8
  %6 = load i64, i64* %2, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_6 = icmp ne i64 %6, 0
  br i1 %_6, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_11 = load i8*, i8** %7, align 8
; call core::ptr::<impl *const T>::is_null
  %8 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h59711f8087130b82E"(i8* %_11)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_9 = xor i1 %8, true
  call void @llvm.assume(i1 %_9)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  %9 = bitcast { i8*, i8* }* %self to i8**
  %_13 = load i8*, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  %_14 = load i8*, i8** %10, align 8
  %_12 = icmp eq i8* %_13, %_14
  br i1 %_12, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  store { i8*, i8* }* %self, { i8*, i8* }** %self.i, align 8
  store i64 1, i64* %0, align 8
  %11 = load i64, i64* %0, align 8
  %_3.i = icmp eq i64 %11, 0
  br i1 %_3.i, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %bb8
  %12 = load { i8*, i8* }*, { i8*, i8* }** %self.i, align 8, !nonnull !2
  %13 = bitcast { i8*, i8* }* %12 to i8**
  %old.i = load i8*, i8** %13, align 8
  %14 = load { i8*, i8* }*, { i8*, i8* }** %self.i, align 8, !nonnull !2
  %15 = bitcast { i8*, i8* }* %14 to i8**
  %_12.i = load i8*, i8** %15, align 8
; call core::ptr::<impl *const T>::offset
  %16 = call i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb3a00527ca698b6dE"(i8* %_12.i, i64 1)
  %17 = load { i8*, i8* }*, { i8*, i8* }** %self.i, align 8, !nonnull !2
  %18 = bitcast { i8*, i8* }* %17 to i8**
  store i8* %16, i8** %18, align 8
  store i8* %old.i, i8** %1, align 8
  br label %"_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17h4f0b866ecdc49418E.exit"

bb3.i:                                            ; preds = %bb8
  %19 = load { i8*, i8* }*, { i8*, i8* }** %self.i, align 8, !nonnull !2
  %20 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %19, i32 0, i32 1
  %_7.i = load i8*, i8** %20, align 8
; call core::ptr::<impl *const T>::wrapping_offset
  %21 = call i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h1369b89de64dbe6eE"(i8* %_7.i, i64 -1)
  %22 = load { i8*, i8* }*, { i8*, i8* }** %self.i, align 8, !nonnull !2
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %22, i32 0, i32 1
  store i8* %21, i8** %23, align 8
  %24 = load { i8*, i8* }*, { i8*, i8* }** %self.i, align 8, !nonnull !2
  %25 = bitcast { i8*, i8* }* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  store i8* %26, i8** %1, align 8
  br label %"_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17h4f0b866ecdc49418E.exit"

"_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17h4f0b866ecdc49418E.exit": ; preds = %bb3.i, %bb2.i
  %27 = load i8*, i8** %1, align 8
  br label %bb10

bb9:                                              ; preds = %bb7
  %28 = bitcast i8** %3 to {}**
  store {}* null, {}** %28, align 8
  br label %bb11

bb10:                                             ; preds = %"_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17h4f0b866ecdc49418E.exit"
  store i8* %27, i8** %3, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %29 = load i8*, i8** %3, align 8
  ret i8* %29
}

; <core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint uwtable
define internal align 8 dereferenceable_or_null(24) i64* @"_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hacc90ace75337820E"({ i64*, i64* }* align 8 dereferenceable(16) %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca %"alloc::string::String"*, align 8
  %self.i = alloca { i64*, i64* }*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64*, align 8
  %4 = bitcast { i64*, i64* }* %self to %"alloc::string::String"**
  %_5 = load %"alloc::string::String"*, %"alloc::string::String"** %4, align 8
; call core::ptr::<impl *const T>::is_null
  %5 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf12685b955243de4E"(%"alloc::string::String"* %_5)
  br label %bb1

bb1:                                              ; preds = %start
  %_3 = xor i1 %5, true
  call void @llvm.assume(i1 %_3)
  br label %bb2

bb2:                                              ; preds = %bb1
  store i64 24, i64* %2, align 8
  %6 = load i64, i64* %2, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %_6 = icmp ne i64 %6, 0
  br i1 %_6, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %8 = bitcast i64** %7 to %"alloc::string::String"**
  %_11 = load %"alloc::string::String"*, %"alloc::string::String"** %8, align 8
; call core::ptr::<impl *const T>::is_null
  %9 = call zeroext i1 @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf12685b955243de4E"(%"alloc::string::String"* %_11)
  br label %bb5

bb5:                                              ; preds = %bb4
  %_9 = xor i1 %9, true
  call void @llvm.assume(i1 %_9)
  br label %bb6

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6, %bb3
  %10 = bitcast { i64*, i64* }* %self to %"alloc::string::String"**
  %_13 = load %"alloc::string::String"*, %"alloc::string::String"** %10, align 8
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1
  %12 = bitcast i64** %11 to %"alloc::string::String"**
  %_14 = load %"alloc::string::String"*, %"alloc::string::String"** %12, align 8
  %_12 = icmp eq %"alloc::string::String"* %_13, %_14
  br i1 %_12, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  store { i64*, i64* }* %self, { i64*, i64* }** %self.i, align 8
  store i64 24, i64* %0, align 8
  %13 = load i64, i64* %0, align 8
  %_3.i = icmp eq i64 %13, 0
  br i1 %_3.i, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %bb8
  %14 = load { i64*, i64* }*, { i64*, i64* }** %self.i, align 8, !nonnull !2
  %15 = bitcast { i64*, i64* }* %14 to %"alloc::string::String"**
  %old.i = load %"alloc::string::String"*, %"alloc::string::String"** %15, align 8
  %16 = load { i64*, i64* }*, { i64*, i64* }** %self.i, align 8, !nonnull !2
  %17 = bitcast { i64*, i64* }* %16 to %"alloc::string::String"**
  %_12.i = load %"alloc::string::String"*, %"alloc::string::String"** %17, align 8
; call core::ptr::<impl *const T>::offset
  %18 = call %"alloc::string::String"* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hd59981924b6b8198E"(%"alloc::string::String"* %_12.i, i64 1)
  %19 = load { i64*, i64* }*, { i64*, i64* }** %self.i, align 8, !nonnull !2
  %20 = bitcast { i64*, i64* }* %19 to %"alloc::string::String"**
  store %"alloc::string::String"* %18, %"alloc::string::String"** %20, align 8
  store %"alloc::string::String"* %old.i, %"alloc::string::String"** %1, align 8
  br label %"_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17h7bf0326373787375E.exit"

bb3.i:                                            ; preds = %bb8
  %21 = load { i64*, i64* }*, { i64*, i64* }** %self.i, align 8, !nonnull !2
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %21, i32 0, i32 1
  %23 = bitcast i64** %22 to %"alloc::string::String"**
  %_7.i = load %"alloc::string::String"*, %"alloc::string::String"** %23, align 8
  %_6.i = bitcast %"alloc::string::String"* %_7.i to i8*
; call core::ptr::<impl *const T>::wrapping_offset
  %24 = call i8* @"_ZN4core3ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h1369b89de64dbe6eE"(i8* %_6.i, i64 -1)
  %25 = load { i64*, i64* }*, { i64*, i64* }** %self.i, align 8, !nonnull !2
  %26 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %25, i32 0, i32 1
  %27 = bitcast i64** %26 to %"alloc::string::String"**
  %28 = bitcast i8* %24 to %"alloc::string::String"*
  store %"alloc::string::String"* %28, %"alloc::string::String"** %27, align 8
  %29 = load { i64*, i64* }*, { i64*, i64* }** %self.i, align 8, !nonnull !2
  %30 = bitcast { i64*, i64* }* %29 to %"alloc::string::String"**
  %31 = load %"alloc::string::String"*, %"alloc::string::String"** %30, align 8
  store %"alloc::string::String"* %31, %"alloc::string::String"** %1, align 8
  br label %"_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17h7bf0326373787375E.exit"

"_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17h7bf0326373787375E.exit": ; preds = %bb3.i, %bb2.i
  %32 = load %"alloc::string::String"*, %"alloc::string::String"** %1, align 8
  br label %bb10

bb9:                                              ; preds = %bb7
  %33 = bitcast i64** %3 to {}**
  store {}* null, {}** %33, align 8
  br label %bb11

bb10:                                             ; preds = %"_ZN4core5slice13Iter$LT$T$GT$14post_inc_start17h7bf0326373787375E.exit"
  %34 = bitcast i64** %3 to %"alloc::string::String"**
  store %"alloc::string::String"* %32, %"alloc::string::String"** %34, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %35 = load i64*, i64** %3, align 8
  ret i64* %35
}

; <core::ops::range::RangeFull as core::slice::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x %"serde_json::value::Value"]*, i64 } @"_ZN90_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb037f6210ef8e54eE"([0 x %"serde_json::value::Value"]* nonnull align 8 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } undef, [0 x %"serde_json::value::Value"]* %slice.0, 0
  %1 = insertvalue { [0 x %"serde_json::value::Value"]*, i64 } %0, i64 %slice.1, 1
  ret { [0 x %"serde_json::value::Value"]*, i64 } %1
}

; <core::ops::range::RangeFull as core::slice::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @"_ZN90_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hf7211f32a2017bcbE"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %0 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %slice.0, 0
  %1 = insertvalue { [0 x i8]*, i64 } %0, i64 %slice.1, 1
  ret { [0 x i8]*, i64 } %1
}

; <&mut serde_json::de::Deserializer<R> as serde::de::Deserializer>::deserialize_any
; Function Attrs: inlinehint uwtable
define internal void @"_ZN93_$LT$$RF$mut$u20$serde_json..de..Deserializer$LT$R$GT$$u20$as$u20$serde..de..Deserializer$GT$15deserialize_any17ha1dd4f69d49ce814E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40), %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56)) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_161 = alloca i8, align 1
  %_160 = alloca i8, align 1
  %_159 = alloca i8, align 1
  %_158 = alloca i8, align 1
  %_157 = alloca i8, align 1
  %_156 = alloca i8, align 1
  %_155 = alloca i8, align 1
  %_154 = alloca i8, align 1
  %_153 = alloca i8, align 1
  %_152 = alloca i8, align 1
  %_151 = alloca i8, align 1
  %_150 = alloca i8, align 1
  %_145 = alloca %"serde_json::value::Value", align 8
  %value7 = alloca %"serde_json::value::Value", align 8
  %_142 = alloca %"serde_json::error::ErrorCode", align 8
  %err6 = alloca i64*, align 8
  %_137 = alloca %"serde_json::value::Value", align 8
  %ret5 = alloca %"serde_json::value::Value", align 8
  %_130 = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %_129 = alloca { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, align 8
  %ret4 = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %_122 = alloca %"serde_json::error::ErrorCode", align 8
  %err = alloca i64*, align 8
  %_115 = alloca %"serde_json::value::Value", align 8
  %ret3 = alloca %"serde_json::value::Value", align 8
  %_108 = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %_107 = alloca { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, align 8
  %ret = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %_100 = alloca %"serde_json::error::ErrorCode", align 8
  %val2 = alloca %"serde_json::read::Reference<str>", align 8
  %_81 = alloca %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>", align 8
  %_80 = alloca %"serde_json::read::Reference<str>", align 8
  %val1 = alloca %"serde_json::de::ParserNumber", align 8
  %_69 = alloca %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>", align 8
  %_68 = alloca %"serde_json::de::ParserNumber", align 8
  %val = alloca %"serde_json::de::ParserNumber", align 8
  %_61 = alloca %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>", align 8
  %_60 = alloca %"serde_json::de::ParserNumber", align 8
  %_48 = alloca i64*, align 8
  %_35 = alloca i64*, align 8
  %_22 = alloca i64*, align 8
  %value = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %_15 = alloca %"serde_json::error::ErrorCode", align 8
  %_5 = alloca %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>", align 8
  %_4 = alloca { i8, i8 }, align 1
  %self = alloca %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, align 8
  store %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %1, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8
  store i8 0, i8* %_159, align 1
  store i8 0, i8* %_153, align 1
  store i8 0, i8* %_154, align 1
  store i8 0, i8* %_156, align 1
  store i8 0, i8* %_161, align 1
  store i8 0, i8* %_155, align 1
  store i8 0, i8* %_157, align 1
  store i8 0, i8* %_152, align 1
  store i8 0, i8* %_150, align 1
  store i8 0, i8* %_158, align 1
  store i8 0, i8* %_160, align 1
  store i8 0, i8* %_151, align 1
  store i8 1, i8* %_150, align 1
  %_6 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_whitespace
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_whitespace17h210e0df4acddc4daE"(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(16) %_5, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_6)
          to label %bb2 unwind label %cleanup

bb1:                                              ; preds = %bb111, %bb112
  %3 = bitcast { i8*, i32 }* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i8*, i32 } undef, i8* %4, 0
  %8 = insertvalue { i8*, i32 } %7, i32 %6, 1
  resume { i8*, i32 } %8

bb2:                                              ; preds = %start
  store i8 1, i8* %_151, align 1
  %9 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = trunc i8 %10 to i1
  %_7 = zext i1 %11 to i64
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb5
  ]

bb3:                                              ; preds = %bb2
  unreachable

bb4:                                              ; preds = %bb2
  %12 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"*
  %13 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Ok"* %12, i32 0, i32 1
  %14 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %13, i32 0, i32 0
  %15 = load i8, i8* %14, align 1, !range !4
  %val.0 = trunc i8 %15 to i1
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %13, i32 0, i32 1
  %val.1 = load i8, i8* %16, align 1
  %17 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 0
  %18 = zext i1 %val.0 to i8
  store i8 %18, i8* %17, align 1
  %19 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_4, i32 0, i32 1
  store i8 %val.1, i8* %19, align 1
  %20 = bitcast { i8, i8 }* %_4 to i8*
  %21 = load i8, i8* %20, align 1, !range !4
  %22 = trunc i8 %21 to i1
  %_11 = zext i1 %22 to i64
  switch i64 %_11, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ]

bb5:                                              ; preds = %bb2
  store i8 0, i8* %_151, align 1
  %23 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %24 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %23, i32 0, i32 1
  %err8 = load i64*, i64** %24, align 8, !nonnull !2
  %25 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %26 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %25, i32 0, i32 1
  store i64* %err8, i64** %26, align 8
  %27 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %27, align 8
  br label %bb8

bb6:                                              ; preds = %bb9, %bb171, %bb166
  ret void

bb7:                                              ; preds = %cleanup28
  store i8 0, i8* %_151, align 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5) #14
  br label %bb112

bb8:                                              ; preds = %bb13, %bb5
  %28 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to i8*
  %29 = load i8, i8* %28, align 8, !range !4
  %30 = trunc i8 %29 to i1
  %_162 = zext i1 %30 to i64
  %31 = icmp eq i64 %_162, 1
  br i1 %31, label %bb114, label %bb116

bb9:                                              ; preds = %bb113, %bb25
  store i8 0, i8* %_150, align 1
  br label %bb6

bb10:                                             ; preds = %bb4
  %_14 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %32 = bitcast %"serde_json::error::ErrorCode"* %_15 to i64*
  store i64 5, i64* %32, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %33 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_14, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_15)
          to label %bb13 unwind label %cleanup28

bb11:                                             ; preds = %bb4
  unreachable

bb12:                                             ; preds = %bb4
  %34 = bitcast { i8, i8 }* %_4 to %"core::option::Option<u8>::Some"*
  %35 = getelementptr inbounds %"core::option::Option<u8>::Some", %"core::option::Option<u8>::Some"* %34, i32 0, i32 1
  %b = load i8, i8* %35, align 1
  store i8 0, i8* %_151, align 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
          to label %bb14 unwind label %cleanup

bb13:                                             ; preds = %bb10
  %36 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %37 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %36, i32 0, i32 1
  store i64* %33, i64** %37, align 8
  %38 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %38, align 8
  br label %bb8

bb14:                                             ; preds = %bb12
  store i8 0, i8* %_151, align 1
  switch i8 %b, label %bb17 [
    i8 110, label %bb19
    i8 116, label %bb28
    i8 102, label %bb36
    i8 45, label %bb44
    i8 34, label %bb56
    i8 91, label %bb69
    i8 123, label %bb86
  ]

bb15:                                             ; preds = %bb18
  %_70 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_any_number
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_any_number17h6010bfa3b4b0ba4bE"(%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* noalias nocapture sret dereferenceable(24) %_69, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_70, i1 zeroext true)
          to label %bb51 unwind label %cleanup

bb16:                                             ; preds = %bb18, %bb17
  %_141 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %39 = bitcast %"serde_json::error::ErrorCode"* %_142 to i64*
  store i64 11, i64* %39, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %40 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_141, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_142)
          to label %bb103 unwind label %cleanup

bb17:                                             ; preds = %bb14
  %_17 = icmp ule i8 48, %b
  br i1 %_17, label %bb18, label %bb16

bb18:                                             ; preds = %bb17
  %_18 = icmp ule i8 %b, 57
  br i1 %_18, label %bb15, label %bb16

bb19:                                             ; preds = %bb14
  %_20 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_20)
          to label %bb20 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %_23 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_ident
  %41 = invoke noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$11parse_ident17h302880db207ea2acE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_23, [0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [3 x i8] }>* @87 to [0 x i8]*), i64 3)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb20
  store i64* %41, i64** %_22, align 8
  %42 = bitcast i64** %_22 to {}**
  %43 = load {}*, {}** %42, align 8
  %44 = icmp ule {}* %43, null
  %_27 = select i1 %44, i64 0, i64 1
  switch i64 %_27, label %bb22 [
    i64 0, label %bb23
    i64 1, label %bb24
  ]

bb22:                                             ; preds = %bb21
  unreachable

bb23:                                             ; preds = %bb21
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_22)
          to label %bb26 unwind label %cleanup

bb24:                                             ; preds = %bb21
  %err25 = load i64*, i64** %_22, align 8, !nonnull !2
  %45 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %46 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %45, i32 0, i32 1
  store i64* %err25, i64** %46, align 8
  %47 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %47, align 8
  %48 = bitcast i64** %_22 to {}**
  %49 = load {}*, {}** %48, align 8
  %50 = icmp ule {}* %49, null
  %_163 = select i1 %50, i64 0, i64 1
  %51 = icmp eq i64 %_163, 1
  br i1 %51, label %bb117, label %bb118

bb25:                                             ; preds = %bb117, %bb119, %bb121, %bb49, %bb62, %bb72, %bb89, %bb54
  store i8 0, i8* %_160, align 1
  store i8 0, i8* %_161, align 1
  br label %bb9

bb26:                                             ; preds = %bb23
  store i8 0, i8* %_150, align 1
; invoke <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_unit
  invoke void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$10visit_unit17hb891b036359f07cfE"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %value)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  br label %bb104

bb28:                                             ; preds = %bb14
  %_33 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_33)
          to label %bb29 unwind label %cleanup

bb29:                                             ; preds = %bb28
  %_36 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_ident
  %52 = invoke noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$11parse_ident17h302880db207ea2acE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_36, [0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [3 x i8] }>* @86 to [0 x i8]*), i64 3)
          to label %bb30 unwind label %cleanup

bb30:                                             ; preds = %bb29
  store i64* %52, i64** %_35, align 8
  %53 = bitcast i64** %_35 to {}**
  %54 = load {}*, {}** %53, align 8
  %55 = icmp ule {}* %54, null
  %_40 = select i1 %55, i64 0, i64 1
  switch i64 %_40, label %bb31 [
    i64 0, label %bb32
    i64 1, label %bb33
  ]

bb31:                                             ; preds = %bb30
  unreachable

bb32:                                             ; preds = %bb30
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_35)
          to label %bb34 unwind label %cleanup

bb33:                                             ; preds = %bb30
  %err24 = load i64*, i64** %_35, align 8, !nonnull !2
  %56 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %57 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %56, i32 0, i32 1
  store i64* %err24, i64** %57, align 8
  %58 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %58, align 8
  %59 = bitcast i64** %_35 to {}**
  %60 = load {}*, {}** %59, align 8
  %61 = icmp ule {}* %60, null
  %_164 = select i1 %61, i64 0, i64 1
  %62 = icmp eq i64 %_164, 1
  br i1 %62, label %bb119, label %bb120

bb34:                                             ; preds = %bb32
  store i8 0, i8* %_150, align 1
; invoke <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_bool
  invoke void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$10visit_bool17h01fcd1555bd518d1E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %value, i1 zeroext true)
          to label %bb35 unwind label %cleanup

bb35:                                             ; preds = %bb34
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  br label %bb104

bb36:                                             ; preds = %bb14
  %_46 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_46)
          to label %bb37 unwind label %cleanup

bb37:                                             ; preds = %bb36
  %_49 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_ident
  %63 = invoke noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$11parse_ident17h302880db207ea2acE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_49, [0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [4 x i8] }>* @85 to [0 x i8]*), i64 4)
          to label %bb38 unwind label %cleanup

bb38:                                             ; preds = %bb37
  store i64* %63, i64** %_48, align 8
  %64 = bitcast i64** %_48 to {}**
  %65 = load {}*, {}** %64, align 8
  %66 = icmp ule {}* %65, null
  %_53 = select i1 %66, i64 0, i64 1
  switch i64 %_53, label %bb39 [
    i64 0, label %bb40
    i64 1, label %bb41
  ]

bb39:                                             ; preds = %bb38
  unreachable

bb40:                                             ; preds = %bb38
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_48)
          to label %bb42 unwind label %cleanup

bb41:                                             ; preds = %bb38
  %err23 = load i64*, i64** %_48, align 8, !nonnull !2
  %67 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %68 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %67, i32 0, i32 1
  store i64* %err23, i64** %68, align 8
  %69 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %69, align 8
  %70 = bitcast i64** %_48 to {}**
  %71 = load {}*, {}** %70, align 8
  %72 = icmp ule {}* %71, null
  %_165 = select i1 %72, i64 0, i64 1
  %73 = icmp eq i64 %_165, 1
  br i1 %73, label %bb121, label %bb122

bb42:                                             ; preds = %bb40
  store i8 0, i8* %_150, align 1
; invoke <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_bool
  invoke void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$10visit_bool17h01fcd1555bd518d1E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %value, i1 zeroext false)
          to label %bb43 unwind label %cleanup

bb43:                                             ; preds = %bb42
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  br label %bb104

bb44:                                             ; preds = %bb14
  %_59 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_59)
          to label %bb45 unwind label %cleanup

bb45:                                             ; preds = %bb44
  %_62 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::parse_any_number
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$16parse_any_number17h6010bfa3b4b0ba4bE"(%"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* noalias nocapture sret dereferenceable(24) %_61, %"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_62, i1 zeroext false)
          to label %bb46 unwind label %cleanup

bb46:                                             ; preds = %bb45
  %74 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_61 to i64*
  %_63 = load i64, i64* %74, align 8, !range !1
  switch i64 %_63, label %bb47 [
    i64 0, label %bb48
    i64 1, label %bb49
  ]

bb47:                                             ; preds = %bb46
  unreachable

bb48:                                             ; preds = %bb46
  %75 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_61 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok"*
  %76 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok"* %75, i32 0, i32 1
  %77 = bitcast %"serde_json::de::ParserNumber"* %val to i8*
  %78 = bitcast %"serde_json::de::ParserNumber"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false)
  %79 = bitcast %"serde_json::de::ParserNumber"* %_60 to i8*
  %80 = bitcast %"serde_json::de::ParserNumber"* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 16, i1 false)
  store i8 0, i8* %_150, align 1
; invoke serde_json::de::ParserNumber::visit
  invoke void @_ZN10serde_json2de12ParserNumber5visit17h8ecc1c455e59bd2dE(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %value, %"serde_json::de::ParserNumber"* noalias nocapture dereferenceable(16) %_60)
          to label %bb50 unwind label %cleanup22

bb49:                                             ; preds = %bb46
  %81 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_61 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %82 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %81, i32 0, i32 1
  %err21 = load i64*, i64** %82, align 8, !nonnull !2
  %83 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %84 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %83, i32 0, i32 1
  store i64* %err21, i64** %84, align 8
  %85 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %85, align 8
  %86 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_61 to i64*
  %_167 = load i64, i64* %86, align 8, !range !1
  br label %bb25

bb50:                                             ; preds = %bb48
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  %87 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_61 to i64*
  %_168 = load i64, i64* %87, align 8, !range !1
  %88 = icmp eq i64 %_168, 0
  br i1 %88, label %bb125, label %bb126

bb51:                                             ; preds = %bb15
  %89 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_69 to i64*
  %_71 = load i64, i64* %89, align 8, !range !1
  switch i64 %_71, label %bb52 [
    i64 0, label %bb53
    i64 1, label %bb54
  ]

bb52:                                             ; preds = %bb51
  unreachable

bb53:                                             ; preds = %bb51
  %90 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_69 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok"*
  %91 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Ok"* %90, i32 0, i32 1
  %92 = bitcast %"serde_json::de::ParserNumber"* %val1 to i8*
  %93 = bitcast %"serde_json::de::ParserNumber"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false)
  %94 = bitcast %"serde_json::de::ParserNumber"* %_68 to i8*
  %95 = bitcast %"serde_json::de::ParserNumber"* %val1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false)
  store i8 0, i8* %_150, align 1
; invoke serde_json::de::ParserNumber::visit
  invoke void @_ZN10serde_json2de12ParserNumber5visit17h8ecc1c455e59bd2dE(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %value, %"serde_json::de::ParserNumber"* noalias nocapture dereferenceable(16) %_68)
          to label %bb55 unwind label %cleanup10

bb54:                                             ; preds = %bb51
  %96 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_69 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %97 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %96, i32 0, i32 1
  %err9 = load i64*, i64** %97, align 8, !nonnull !2
  %98 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %99 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %98, i32 0, i32 1
  store i64* %err9, i64** %99, align 8
  %100 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %100, align 8
  %101 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_69 to i64*
  %_170 = load i64, i64* %101, align 8, !range !1
  br label %bb25

bb55:                                             ; preds = %bb53
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  %102 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_69 to i64*
  %_171 = load i64, i64* %102, align 8, !range !1
  %103 = icmp eq i64 %_171, 0
  br i1 %103, label %bb129, label %bb130

bb56:                                             ; preds = %bb14
  %_77 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_77)
          to label %bb57 unwind label %cleanup

bb57:                                             ; preds = %bb56
  %104 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %_79 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %104, i32 0, i32 3
; invoke alloc::vec::Vec<T>::clear
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$5clear17h424b6ad15462e554E"(%"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_79)
          to label %bb58 unwind label %cleanup

bb58:                                             ; preds = %bb57
  %105 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %_82 = bitcast %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %105 to %"serde_json::read::StrRead"*
  %106 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %_84 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %106, i32 0, i32 3
; invoke <serde_json::read::StrRead as serde_json::read::Read>::parse_str
  invoke void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$9parse_str17h400120ae3ef9939dE"(%"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32) %_81, %"serde_json::read::StrRead"* align 8 dereferenceable(24) %_82, %"alloc::vec::Vec<u8>"* align 8 dereferenceable(24) %_84)
          to label %bb59 unwind label %cleanup

bb59:                                             ; preds = %bb58
  %107 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_81 to i64*
  %_85 = load i64, i64* %107, align 8, !range !1
  switch i64 %_85, label %bb60 [
    i64 0, label %bb61
    i64 1, label %bb62
  ]

bb60:                                             ; preds = %bb59
  unreachable

bb61:                                             ; preds = %bb59
  %108 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_81 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok"*
  %109 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Ok"* %108, i32 0, i32 1
  %110 = bitcast %"serde_json::read::Reference<str>"* %val2 to i8*
  %111 = bitcast %"serde_json::read::Reference<str>"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 24, i1 false)
  %112 = bitcast %"serde_json::read::Reference<str>"* %_80 to i8*
  %113 = bitcast %"serde_json::read::Reference<str>"* %val2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 24, i1 false)
  %114 = bitcast %"serde_json::read::Reference<str>"* %_80 to i64*
  %_89 = load i64, i64* %114, align 8, !range !1
  switch i64 %_89, label %bb64 [
    i64 0, label %bb65
    i64 1, label %bb67
  ]

bb62:                                             ; preds = %bb59
  %115 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_81 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"*
  %116 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"* %115, i32 0, i32 1
  %err17 = load i64*, i64** %116, align 8, !nonnull !2
  %117 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %118 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %117, i32 0, i32 1
  store i64* %err17, i64** %118, align 8
  %119 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %119, align 8
  %120 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_81 to i64*
  %_173 = load i64, i64* %120, align 8, !range !1
  br label %bb25

bb63:                                             ; preds = %cleanup18
  %121 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_81 to i64*
  %_172 = load i64, i64* %121, align 8, !range !1
  %122 = icmp eq i64 %_172, 0
  br i1 %122, label %bb112, label %bb131

bb64:                                             ; preds = %bb61
  unreachable

bb65:                                             ; preds = %bb61
  %123 = bitcast %"serde_json::read::Reference<str>"* %_80 to %"serde_json::read::Reference<str>::Borrowed"*
  %124 = getelementptr inbounds %"serde_json::read::Reference<str>::Borrowed", %"serde_json::read::Reference<str>::Borrowed"* %123, i32 0, i32 1
  %125 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %124, i32 0, i32 0
  %s.019 = load [0 x i8]*, [0 x i8]** %125, align 8, !nonnull !2
  %126 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %124, i32 0, i32 1
  %s.120 = load i64, i64* %126, align 8
  store i8 0, i8* %_150, align 1
; invoke serde::de::Visitor::visit_borrowed_str
  invoke void @_ZN5serde2de7Visitor18visit_borrowed_str17h88555f1314eca455E(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %value, [0 x i8]* noalias nonnull readonly align 1 %s.019, i64 %s.120)
          to label %bb66 unwind label %cleanup18

bb66:                                             ; preds = %bb65
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  br label %bb134

bb67:                                             ; preds = %bb61
  %127 = bitcast %"serde_json::read::Reference<str>"* %_80 to %"serde_json::read::Reference<str>::Copied"*
  %128 = getelementptr inbounds %"serde_json::read::Reference<str>::Copied", %"serde_json::read::Reference<str>::Copied"* %127, i32 0, i32 1
  %129 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %128, i32 0, i32 0
  %s.0 = load [0 x i8]*, [0 x i8]** %129, align 8, !nonnull !2
  %130 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %128, i32 0, i32 1
  %s.1 = load i64, i64* %130, align 8
  store i8 0, i8* %_150, align 1
; invoke <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_str
  invoke void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_str17h093b57885c99cd41E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %value, [0 x i8]* noalias nonnull readonly align 1 %s.0, i64 %s.1)
          to label %bb68 unwind label %cleanup18

bb68:                                             ; preds = %bb67
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  br label %bb134

bb69:                                             ; preds = %bb14
  %131 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %132 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %131, i32 0, i32 5
  %133 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %134 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %133, i32 0, i32 5
  %135 = load i8, i8* %134, align 8
  %136 = sub i8 %135, 1
  store i8 %136, i8* %132, align 8
  %137 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %138 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %137, i32 0, i32 5
  %_97 = load i8, i8* %138, align 8
  %_96 = icmp eq i8 %_97, 0
  br i1 %_96, label %bb71, label %bb70

bb70:                                             ; preds = %bb69
  %_102 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_102)
          to label %bb73 unwind label %cleanup

bb71:                                             ; preds = %bb69
  %_99 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %139 = bitcast %"serde_json::error::ErrorCode"* %_100 to i64*
  store i64 23, i64* %139, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %140 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_99, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_100)
          to label %bb72 unwind label %cleanup

bb72:                                             ; preds = %bb71
  %141 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %142 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %141, i32 0, i32 1
  store i64* %140, i64** %142, align 8
  %143 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %143, align 8
  br label %bb25

bb73:                                             ; preds = %bb70
  store i8 0, i8* %_150, align 1
  store i8 1, i8* %_152, align 1
  %_106 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::SeqAccess<R>::new
  %144 = invoke { i64*, i8 } @"_ZN10serde_json2de18SeqAccess$LT$R$GT$3new17hb6bd22e213983f12E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_106)
          to label %bb74 unwind label %cleanup14

bb74:                                             ; preds = %bb73
  %145 = extractvalue { i64*, i8 } %144, 0
  %146 = extractvalue { i64*, i8 } %144, 1
  %147 = trunc i8 %146 to i1
  store i8 0, i8* %_152, align 1
; invoke <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_seq
  invoke void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_seq17hb303b50fa17fe365E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %ret, i64* align 8 dereferenceable(56) %145, i1 zeroext %147)
          to label %bb75 unwind label %cleanup14

bb75:                                             ; preds = %bb74
  store i8 0, i8* %_152, align 1
  %148 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %149 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %148, i32 0, i32 5
  %150 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %151 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %150, i32 0, i32 5
  %152 = load i8, i8* %151, align 8
  %153 = add i8 %152, 1
  store i8 %153, i8* %149, align 8
  %154 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_108 to i8*
  %155 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %ret to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 40, i1 false)
  %_110 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::end_seq
  %156 = invoke noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$7end_seq17h3ccaa04e00784a12E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_110)
          to label %bb76 unwind label %cleanup15

bb76:                                             ; preds = %bb75
  store i8 1, i8* %_153, align 1
  store i8 1, i8* %_154, align 1
  store i8 1, i8* %_155, align 1
  %157 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %158 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %157 to i8*
  %159 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 40, i1 false)
  %160 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
  store i64* %156, i64** %160, align 8
  %161 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %162 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %161 to i64*
  %_113 = load i64, i64* %162, align 8, !range !1
  switch i64 %_113, label %bb79 [
    i64 0, label %bb81
    i64 1, label %bb83
  ]

bb77:                                             ; preds = %cleanup15
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hc9bb483e6409be7bE(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* align 8 dereferenceable(40) %_108) #14
  br label %bb112

bb78:                                             ; preds = %bb81
  store i8 0, i8* %_155, align 1
  %163 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %164 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %163 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %165 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %164, i32 0, i32 1
  %166 = bitcast %"serde_json::value::Value"* %ret3 to i8*
  %167 = bitcast %"serde_json::value::Value"* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 32, i1 false)
  %168 = bitcast %"serde_json::value::Value"* %_115 to i8*
  %169 = bitcast %"serde_json::value::Value"* %ret3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 32, i1 false)
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  %170 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %171 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %170, i32 0, i32 1
  %172 = bitcast %"serde_json::value::Value"* %171 to i8*
  %173 = bitcast %"serde_json::value::Value"* %_115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 32, i1 false)
  %174 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to i64*
  store i64 0, i64* %174, align 8
  br label %bb85

bb79:                                             ; preds = %bb81, %bb76
  %175 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
  %176 = bitcast i64** %175 to {}**
  %177 = load {}*, {}** %176, align 8
  %178 = icmp ule {}* %177, null
  %_111 = select i1 %178, i64 0, i64 1
  %179 = icmp eq i64 %_111, 1
  br i1 %179, label %bb84, label %bb80

bb80:                                             ; preds = %bb79
  unreachable

bb81:                                             ; preds = %bb76
  %180 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
  %181 = bitcast i64** %180 to {}**
  %182 = load {}*, {}** %181, align 8
  %183 = icmp ule {}* %182, null
  %_112 = select i1 %183, i64 0, i64 1
  %184 = icmp eq i64 %_112, 0
  br i1 %184, label %bb78, label %bb79

bb82:                                             ; preds = %bb84, %bb83
  %_117 = load i64*, i64** %err, align 8, !nonnull !2
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  %185 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %186 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %185, i32 0, i32 1
  store i64* %_117, i64** %186, align 8
  %187 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to i64*
  store i64 1, i64* %187, align 8
  br label %bb85

bb83:                                             ; preds = %bb76
  store i8 0, i8* %_154, align 1
  %188 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %189 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %188 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %190 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %189, i32 0, i32 1
  %191 = load i64*, i64** %190, align 8, !nonnull !2
  store i64* %191, i64** %err, align 8
  br label %bb82

bb84:                                             ; preds = %bb79
  store i8 0, i8* %_153, align 1
  %192 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
  %193 = load i64*, i64** %192, align 8, !nonnull !2
  store i64* %193, i64** %err, align 8
  br label %bb82

bb85:                                             ; preds = %bb78, %bb82
  %194 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %195 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %194 to i64*
  %_177 = load i64, i64* %195, align 8, !range !1
  %196 = icmp eq i64 %_177, 0
  br i1 %196, label %bb146, label %bb148

bb86:                                             ; preds = %bb14
  %197 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %198 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %197, i32 0, i32 5
  %199 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %200 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %199, i32 0, i32 5
  %201 = load i8, i8* %200, align 8
  %202 = sub i8 %201, 1
  store i8 %202, i8* %198, align 8
  %203 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %204 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %203, i32 0, i32 5
  %_119 = load i8, i8* %204, align 8
  %_118 = icmp eq i8 %_119, 0
  br i1 %_118, label %bb88, label %bb87

bb87:                                             ; preds = %bb86
  %_124 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::eat_char
  invoke void @"_ZN10serde_json2de21Deserializer$LT$R$GT$8eat_char17h27880c16013f818fE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_124)
          to label %bb90 unwind label %cleanup

bb88:                                             ; preds = %bb86
  %_121 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %205 = bitcast %"serde_json::error::ErrorCode"* %_122 to i64*
  store i64 23, i64* %205, align 8
; invoke serde_json::de::Deserializer<R>::peek_error
  %206 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$10peek_error17hc91437f5405786d2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_121, %"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24) %_122)
          to label %bb89 unwind label %cleanup

bb89:                                             ; preds = %bb88
  %207 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %208 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %207, i32 0, i32 1
  store i64* %206, i64** %208, align 8
  %209 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %209, align 8
  br label %bb25

bb90:                                             ; preds = %bb87
  store i8 0, i8* %_150, align 1
  store i8 1, i8* %_156, align 1
  %_128 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::MapAccess<R>::new
  %210 = invoke { i64*, i8 } @"_ZN10serde_json2de18MapAccess$LT$R$GT$3new17h84746e6730a85f4eE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_128)
          to label %bb91 unwind label %cleanup11

bb91:                                             ; preds = %bb90
  %211 = extractvalue { i64*, i8 } %210, 0
  %212 = extractvalue { i64*, i8 } %210, 1
  %213 = trunc i8 %212 to i1
  store i8 0, i8* %_156, align 1
; invoke <serde_json::value::de::<impl serde::de::Deserialize for serde_json::value::Value>::deserialize::ValueVisitor as serde::de::Visitor>::visit_map
  invoke void @"_ZN165_$LT$serde_json..value..de..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$serde_json..value..Value$GT$..deserialize..ValueVisitor$u20$as$u20$serde..de..Visitor$GT$9visit_map17hd6b142e5a6dcb4a3E"(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %ret4, i64* align 8 dereferenceable(56) %211, i1 zeroext %213)
          to label %bb92 unwind label %cleanup11

bb92:                                             ; preds = %bb91
  store i8 0, i8* %_156, align 1
  %214 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %215 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %214, i32 0, i32 5
  %216 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
  %217 = getelementptr inbounds %"serde_json::de::Deserializer<serde_json::read::StrRead>", %"serde_json::de::Deserializer<serde_json::read::StrRead>"* %216, i32 0, i32 5
  %218 = load i8, i8* %217, align 8
  %219 = add i8 %218, 1
  store i8 %219, i8* %215, align 8
  %220 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_130 to i8*
  %221 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %ret4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %221, i64 40, i1 false)
  %_132 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::end_map
  %222 = invoke noalias align 8 dereferenceable_or_null(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$7end_map17hd390008053535ac2E"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* align 8 dereferenceable(56) %_132)
          to label %bb93 unwind label %cleanup12

bb93:                                             ; preds = %bb92
  store i8 1, i8* %_157, align 1
  store i8 1, i8* %_158, align 1
  store i8 1, i8* %_159, align 1
  %223 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %224 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %223 to i8*
  %225 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %_130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %225, i64 40, i1 false)
  %226 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
  store i64* %222, i64** %226, align 8
  %227 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %228 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %227 to i64*
  %_135 = load i64, i64* %228, align 8, !range !1
  switch i64 %_135, label %bb96 [
    i64 0, label %bb98
    i64 1, label %bb100
  ]

bb94:                                             ; preds = %cleanup12
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hc9bb483e6409be7bE(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* align 8 dereferenceable(40) %_130) #14
  br label %bb112

bb95:                                             ; preds = %bb98
  store i8 0, i8* %_159, align 1
  %229 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %230 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %229 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %231 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %230, i32 0, i32 1
  %232 = bitcast %"serde_json::value::Value"* %ret5 to i8*
  %233 = bitcast %"serde_json::value::Value"* %231 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 32, i1 false)
  %234 = bitcast %"serde_json::value::Value"* %_137 to i8*
  %235 = bitcast %"serde_json::value::Value"* %ret5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %235, i64 32, i1 false)
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  %236 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %237 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %236, i32 0, i32 1
  %238 = bitcast %"serde_json::value::Value"* %237 to i8*
  %239 = bitcast %"serde_json::value::Value"* %_137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %238, i8* align 8 %239, i64 32, i1 false)
  %240 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to i64*
  store i64 0, i64* %240, align 8
  br label %bb102

bb96:                                             ; preds = %bb98, %bb93
  %241 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
  %242 = bitcast i64** %241 to {}**
  %243 = load {}*, {}** %242, align 8
  %244 = icmp ule {}* %243, null
  %_133 = select i1 %244, i64 0, i64 1
  %245 = icmp eq i64 %_133, 1
  br i1 %245, label %bb101, label %bb97

bb97:                                             ; preds = %bb96
  unreachable

bb98:                                             ; preds = %bb93
  %246 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
  %247 = bitcast i64** %246 to {}**
  %248 = load {}*, {}** %247, align 8
  %249 = icmp ule {}* %248, null
  %_134 = select i1 %249, i64 0, i64 1
  %250 = icmp eq i64 %_134, 0
  br i1 %250, label %bb95, label %bb96

bb99:                                             ; preds = %bb101, %bb100
  %_139 = load i64*, i64** %err6, align 8, !nonnull !2
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  %251 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %252 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %251, i32 0, i32 1
  store i64* %_139, i64** %252, align 8
  %253 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to i64*
  store i64 1, i64* %253, align 8
  br label %bb102

bb100:                                            ; preds = %bb93
  store i8 0, i8* %_158, align 1
  %254 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %255 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %254 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %256 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %255, i32 0, i32 1
  %257 = load i64*, i64** %256, align 8, !nonnull !2
  store i64* %257, i64** %err6, align 8
  br label %bb99

bb101:                                            ; preds = %bb96
  store i8 0, i8* %_157, align 1
  %258 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
  %259 = load i64*, i64** %258, align 8, !nonnull !2
  store i64* %259, i64** %err6, align 8
  br label %bb99

bb102:                                            ; preds = %bb95, %bb99
  %260 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %261 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %260 to i64*
  %_180 = load i64, i64* %261, align 8, !range !1
  %262 = icmp eq i64 %_180, 0
  br i1 %262, label %bb161, label %bb163

bb103:                                            ; preds = %bb16
  store i8 1, i8* %_160, align 1
  store i8 1, i8* %_161, align 1
  %263 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %264 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %263, i32 0, i32 1
  store i64* %40, i64** %264, align 8
  %265 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to i64*
  store i64 1, i64* %265, align 8
  br label %bb104

bb104:                                            ; preds = %bb27, %bb35, %bb43, %bb125, %bb132, %bb140, %bb155, %bb103, %bb129
  %266 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to i64*
  %_143 = load i64, i64* %266, align 8, !range !1
  switch i64 %_143, label %bb105 [
    i64 0, label %bb106
    i64 1, label %bb108
  ]

bb105:                                            ; preds = %bb104
  unreachable

bb106:                                            ; preds = %bb104
  store i8 0, i8* %_161, align 1
  %267 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %268 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %267, i32 0, i32 1
  %269 = bitcast %"serde_json::value::Value"* %value7 to i8*
  %270 = bitcast %"serde_json::value::Value"* %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %270, i64 32, i1 false)
  %271 = bitcast %"serde_json::value::Value"* %_145 to i8*
  %272 = bitcast %"serde_json::value::Value"* %value7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %272, i64 32, i1 false)
  %273 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %274 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %273, i32 0, i32 1
  %275 = bitcast %"serde_json::value::Value"* %274 to i8*
  %276 = bitcast %"serde_json::value::Value"* %_145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* align 8 %276, i64 32, i1 false)
  %277 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 0, i64* %277, align 8
  br label %bb110

bb107:                                            ; preds = %cleanup27
  %278 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to i64*
  %_181 = load i64, i64* %278, align 8, !range !1
  %279 = icmp eq i64 %_181, 0
  br i1 %279, label %bb165, label %bb112

bb108:                                            ; preds = %bb104
  store i8 0, i8* %_160, align 1
  %280 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %281 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %280, i32 0, i32 1
  %err26 = load i64*, i64** %281, align 8, !nonnull !2
  %_148 = load %"serde_json::de::Deserializer<serde_json::read::StrRead>"*, %"serde_json::de::Deserializer<serde_json::read::StrRead>"** %self, align 8, !nonnull !2
; invoke serde_json::de::Deserializer<R>::fix_position
  %282 = invoke noalias align 8 dereferenceable(40) i64* @"_ZN10serde_json2de21Deserializer$LT$R$GT$12fix_position17ha0ac31358975066aE"(%"serde_json::de::Deserializer<serde_json::read::StrRead>"* noalias readonly align 8 dereferenceable(56) %_148, i64* noalias align 8 dereferenceable(40) %err26)
          to label %bb109 unwind label %cleanup27

bb109:                                            ; preds = %bb108
  %283 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %284 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %283, i32 0, i32 1
  store i64* %282, i64** %284, align 8
  %285 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %0 to i64*
  store i64 1, i64* %285, align 8
  br label %bb110

bb110:                                            ; preds = %bb106, %bb109
  %286 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to i64*
  %_182 = load i64, i64* %286, align 8, !range !1
  %287 = icmp eq i64 %_182, 0
  br i1 %287, label %bb167, label %bb169

bb111:                                            ; preds = %bb112
  store i8 0, i8* %_150, align 1
  br label %bb1

bb112:                                            ; preds = %bb7, %bb165, %bb107, %bb123, %bb124, %bb131, %bb63, %bb138, %bb137, %bb139, %bb77, %bb135, %bb136, %bb153, %bb152, %bb154, %bb94, %bb150, %bb151, %bb127, %bb128, %cleanup
  %288 = load i8, i8* %_150, align 1, !range !4
  %289 = trunc i8 %288 to i1
  br i1 %289, label %bb111, label %bb1

bb113:                                            ; preds = %bb115, %bb114, %bb116
  store i8 0, i8* %_151, align 1
  br label %bb9

bb114:                                            ; preds = %bb8
  %290 = load i8, i8* %_151, align 1, !range !4
  %291 = trunc i8 %290 to i1
  br i1 %291, label %bb115, label %bb113

bb115:                                            ; preds = %bb114
  store i8 0, i8* %_151, align 1
  %292 = bitcast %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* %_5 to %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"*
  %293 = getelementptr inbounds %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err", %"core::result::Result<core::option::Option<u8>, serde_json::error::Error>::Err"* %292, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %293)
          to label %bb113 unwind label %cleanup

bb116:                                            ; preds = %bb8
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hbd244058d832624cE(%"core::result::Result<core::option::Option<u8>, serde_json::error::Error>"* align 8 dereferenceable(16) %_5)
          to label %bb113 unwind label %cleanup

bb117:                                            ; preds = %bb118, %bb24
  br label %bb25

bb118:                                            ; preds = %bb24
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_22)
          to label %bb117 unwind label %cleanup

bb119:                                            ; preds = %bb120, %bb33
  br label %bb25

bb120:                                            ; preds = %bb33
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_35)
          to label %bb119 unwind label %cleanup

bb121:                                            ; preds = %bb122, %bb41
  br label %bb25

bb122:                                            ; preds = %bb41
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %_48)
          to label %bb121 unwind label %cleanup

bb123:                                            ; preds = %bb124
  %294 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_61 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %295 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %294, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %295) #14
  br label %bb112

bb124:                                            ; preds = %cleanup22
  %296 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_61 to i64*
  %_166 = load i64, i64* %296, align 8, !range !1
  %297 = icmp eq i64 %_166, 0
  br i1 %297, label %bb112, label %bb123

bb125:                                            ; preds = %bb126, %bb50
  br label %bb104

bb126:                                            ; preds = %bb50
  %298 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_61 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %299 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %298, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %299)
          to label %bb125 unwind label %cleanup

bb127:                                            ; preds = %bb128
  %300 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_69 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %301 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %300, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %301) #14
  br label %bb112

bb128:                                            ; preds = %cleanup10
  %302 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_69 to i64*
  %_169 = load i64, i64* %302, align 8, !range !1
  %303 = icmp eq i64 %_169, 0
  br i1 %303, label %bb112, label %bb127

bb129:                                            ; preds = %bb130, %bb55
  br label %bb104

bb130:                                            ; preds = %bb55
  %304 = bitcast %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>"* %_69 to %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"*
  %305 = getelementptr inbounds %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err", %"core::result::Result<serde_json::de::ParserNumber, serde_json::error::Error>::Err"* %304, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %305)
          to label %bb129 unwind label %cleanup

bb131:                                            ; preds = %bb63
  %306 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_81 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"*
  %307 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"* %306, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %307) #14
  br label %bb112

bb132:                                            ; preds = %bb133, %bb134
  br label %bb104

bb133:                                            ; preds = %bb134
  %308 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_81 to %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"*
  %309 = getelementptr inbounds %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err", %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>::Err"* %308, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %309)
          to label %bb132 unwind label %cleanup

bb134:                                            ; preds = %bb66, %bb68
  %310 = bitcast %"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* %_81 to i64*
  %_174 = load i64, i64* %310, align 8, !range !1
  %311 = icmp eq i64 %_174, 0
  br i1 %311, label %bb132, label %bb133

bb135:                                            ; preds = %bb136
  store i8 0, i8* %_152, align 1
  br label %bb112

bb136:                                            ; preds = %cleanup14
  %312 = load i8, i8* %_152, align 1, !range !4
  %313 = trunc i8 %312 to i1
  br i1 %313, label %bb135, label %bb112

bb137:                                            ; preds = %bb145
  %314 = load i8, i8* %_153, align 1, !range !4
  %315 = trunc i8 %314 to i1
  br i1 %315, label %bb138, label %bb112

bb138:                                            ; preds = %bb137
  store i8 0, i8* %_153, align 1
  %316 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %316) #14
  br label %bb112

bb139:                                            ; preds = %bb145
  %317 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %317) #14
  br label %bb112

bb140:                                            ; preds = %bb142, %bb141, %bb143
  store i8 0, i8* %_153, align 1
  store i8 0, i8* %_154, align 1
  store i8 0, i8* %_155, align 1
  br label %bb104

bb141:                                            ; preds = %bb144
  %318 = load i8, i8* %_153, align 1, !range !4
  %319 = trunc i8 %318 to i1
  br i1 %319, label %bb142, label %bb140

bb142:                                            ; preds = %bb141
  store i8 0, i8* %_153, align 1
  %320 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %320)
          to label %bb140 unwind label %cleanup

bb143:                                            ; preds = %bb144
  %321 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %321)
          to label %bb140 unwind label %cleanup

bb144:                                            ; preds = %bb147, %bb146, %bb149, %bb148
  %322 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
  %323 = bitcast i64** %322 to {}**
  %324 = load {}*, {}** %323, align 8
  %325 = icmp ule {}* %324, null
  %_176 = select i1 %325, i64 0, i64 1
  %326 = icmp eq i64 %_176, 1
  br i1 %326, label %bb141, label %bb143

bb145:                                            ; preds = %cleanup16
  %327 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107, i32 0, i32 3
  %328 = bitcast i64** %327 to {}**
  %329 = load {}*, {}** %328, align 8
  %330 = icmp ule {}* %329, null
  %_175 = select i1 %330, i64 0, i64 1
  %331 = icmp eq i64 %_175, 1
  br i1 %331, label %bb137, label %bb139

bb146:                                            ; preds = %bb85
  %332 = load i8, i8* %_155, align 1, !range !4
  %333 = trunc i8 %332 to i1
  br i1 %333, label %bb147, label %bb144

bb147:                                            ; preds = %bb146
  store i8 0, i8* %_155, align 1
  %334 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %335 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %334 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %336 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %335, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %336)
          to label %bb144 unwind label %cleanup16

bb148:                                            ; preds = %bb85
  %337 = load i8, i8* %_154, align 1, !range !4
  %338 = trunc i8 %337 to i1
  br i1 %338, label %bb149, label %bb144

bb149:                                            ; preds = %bb148
  store i8 0, i8* %_154, align 1
  %339 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_107 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %340 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %339 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %341 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %340, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %341)
          to label %bb144 unwind label %cleanup16

bb150:                                            ; preds = %bb151
  store i8 0, i8* %_156, align 1
  br label %bb112

bb151:                                            ; preds = %cleanup11
  %342 = load i8, i8* %_156, align 1, !range !4
  %343 = trunc i8 %342 to i1
  br i1 %343, label %bb150, label %bb112

bb152:                                            ; preds = %bb160
  %344 = load i8, i8* %_157, align 1, !range !4
  %345 = trunc i8 %344 to i1
  br i1 %345, label %bb153, label %bb112

bb153:                                            ; preds = %bb152
  store i8 0, i8* %_157, align 1
  %346 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %346) #14
  br label %bb112

bb154:                                            ; preds = %bb160
  %347 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %347) #14
  br label %bb112

bb155:                                            ; preds = %bb157, %bb156, %bb158
  store i8 0, i8* %_157, align 1
  store i8 0, i8* %_158, align 1
  store i8 0, i8* %_159, align 1
  br label %bb104

bb156:                                            ; preds = %bb159
  %348 = load i8, i8* %_157, align 1, !range !4
  %349 = trunc i8 %348 to i1
  br i1 %349, label %bb157, label %bb155

bb157:                                            ; preds = %bb156
  store i8 0, i8* %_157, align 1
  %350 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %350)
          to label %bb155 unwind label %cleanup

bb158:                                            ; preds = %bb159
  %351 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hfb44039b78fb0ea9E(i64** align 8 dereferenceable(8) %351)
          to label %bb155 unwind label %cleanup

bb159:                                            ; preds = %bb162, %bb161, %bb164, %bb163
  %352 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
  %353 = bitcast i64** %352 to {}**
  %354 = load {}*, {}** %353, align 8
  %355 = icmp ule {}* %354, null
  %_179 = select i1 %355, i64 0, i64 1
  %356 = icmp eq i64 %_179, 1
  br i1 %356, label %bb156, label %bb158

bb160:                                            ; preds = %cleanup13
  %357 = getelementptr inbounds { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }, { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129, i32 0, i32 3
  %358 = bitcast i64** %357 to {}**
  %359 = load {}*, {}** %358, align 8
  %360 = icmp ule {}* %359, null
  %_178 = select i1 %360, i64 0, i64 1
  %361 = icmp eq i64 %_178, 1
  br i1 %361, label %bb152, label %bb154

bb161:                                            ; preds = %bb102
  %362 = load i8, i8* %_159, align 1, !range !4
  %363 = trunc i8 %362 to i1
  br i1 %363, label %bb162, label %bb159

bb162:                                            ; preds = %bb161
  store i8 0, i8* %_159, align 1
  %364 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %365 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %364 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %366 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %365, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %366)
          to label %bb159 unwind label %cleanup13

bb163:                                            ; preds = %bb102
  %367 = load i8, i8* %_158, align 1, !range !4
  %368 = trunc i8 %367 to i1
  br i1 %368, label %bb164, label %bb159

bb164:                                            ; preds = %bb163
  store i8 0, i8* %_158, align 1
  %369 = bitcast { [0 x i64], %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", [0 x i64], i64*, [0 x i64] }* %_129 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"*
  %370 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %369 to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %371 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %370, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %371)
          to label %bb159 unwind label %cleanup13

bb165:                                            ; preds = %bb107
  store i8 0, i8* %_161, align 1
  %372 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %373 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %372, i32 0, i32 1
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %373) #14
  br label %bb112

bb166:                                            ; preds = %bb168, %bb167, %bb170, %bb169
  store i8 0, i8* %_160, align 1
  store i8 0, i8* %_161, align 1
  %374 = load i8, i8* %_150, align 1, !range !4
  %375 = trunc i8 %374 to i1
  br i1 %375, label %bb171, label %bb6

bb167:                                            ; preds = %bb110
  %376 = load i8, i8* %_161, align 1, !range !4
  %377 = trunc i8 %376 to i1
  br i1 %377, label %bb168, label %bb166

bb168:                                            ; preds = %bb167
  store i8 0, i8* %_161, align 1
  %378 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"*
  %379 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Ok"* %378, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %379)
          to label %bb166 unwind label %cleanup

bb169:                                            ; preds = %bb110
  %380 = load i8, i8* %_160, align 1, !range !4
  %381 = trunc i8 %380 to i1
  br i1 %381, label %bb170, label %bb166

bb170:                                            ; preds = %bb169
  store i8 0, i8* %_160, align 1
  %382 = bitcast %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* %value to %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"*
  %383 = getelementptr inbounds %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err", %"core::result::Result<serde_json::value::Value, serde_json::error::Error>::Err"* %382, i32 0, i32 1
; invoke core::ptr::real_drop_in_place
  invoke void @_ZN4core3ptr18real_drop_in_place17h94d8d2616b716ae2E(i64** align 8 dereferenceable(8) %383)
          to label %bb166 unwind label %cleanup

bb171:                                            ; preds = %bb166
  store i8 0, i8* %_150, align 1
  br label %bb6

cleanup:                                          ; preds = %bb115, %bb116, %bb168, %bb170, %bb26, %bb23, %bb118, %bb20, %bb19, %bb34, %bb32, %bb120, %bb29, %bb28, %bb42, %bb40, %bb122, %bb37, %bb36, %bb126, %bb45, %bb44, %bb133, %bb58, %bb57, %bb56, %bb142, %bb143, %bb70, %bb71, %bb157, %bb158, %bb87, %bb88, %bb16, %bb130, %bb15, %bb12, %start
  %384 = landingpad { i8*, i32 }
          cleanup
  %385 = extractvalue { i8*, i32 } %384, 0
  %386 = extractvalue { i8*, i32 } %384, 1
  %387 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %385, i8** %387, align 8
  %388 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %386, i32* %388, align 8
  br label %bb112

cleanup10:                                        ; preds = %bb53
  %389 = landingpad { i8*, i32 }
          cleanup
  %390 = extractvalue { i8*, i32 } %389, 0
  %391 = extractvalue { i8*, i32 } %389, 1
  %392 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %390, i8** %392, align 8
  %393 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %391, i32* %393, align 8
  br label %bb128

cleanup11:                                        ; preds = %bb91, %bb90
  %394 = landingpad { i8*, i32 }
          cleanup
  %395 = extractvalue { i8*, i32 } %394, 0
  %396 = extractvalue { i8*, i32 } %394, 1
  %397 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %395, i8** %397, align 8
  %398 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %396, i32* %398, align 8
  br label %bb151

cleanup12:                                        ; preds = %bb92
  %399 = landingpad { i8*, i32 }
          cleanup
  %400 = extractvalue { i8*, i32 } %399, 0
  %401 = extractvalue { i8*, i32 } %399, 1
  %402 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %400, i8** %402, align 8
  %403 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %401, i32* %403, align 8
  br label %bb94

cleanup13:                                        ; preds = %bb162, %bb164
  %404 = landingpad { i8*, i32 }
          cleanup
  %405 = extractvalue { i8*, i32 } %404, 0
  %406 = extractvalue { i8*, i32 } %404, 1
  %407 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %405, i8** %407, align 8
  %408 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %406, i32* %408, align 8
  br label %bb160

cleanup14:                                        ; preds = %bb74, %bb73
  %409 = landingpad { i8*, i32 }
          cleanup
  %410 = extractvalue { i8*, i32 } %409, 0
  %411 = extractvalue { i8*, i32 } %409, 1
  %412 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %410, i8** %412, align 8
  %413 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %411, i32* %413, align 8
  br label %bb136

cleanup15:                                        ; preds = %bb75
  %414 = landingpad { i8*, i32 }
          cleanup
  %415 = extractvalue { i8*, i32 } %414, 0
  %416 = extractvalue { i8*, i32 } %414, 1
  %417 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %415, i8** %417, align 8
  %418 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %416, i32* %418, align 8
  br label %bb77

cleanup16:                                        ; preds = %bb147, %bb149
  %419 = landingpad { i8*, i32 }
          cleanup
  %420 = extractvalue { i8*, i32 } %419, 0
  %421 = extractvalue { i8*, i32 } %419, 1
  %422 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %420, i8** %422, align 8
  %423 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %421, i32* %423, align 8
  br label %bb145

cleanup18:                                        ; preds = %bb65, %bb67
  %424 = landingpad { i8*, i32 }
          cleanup
  %425 = extractvalue { i8*, i32 } %424, 0
  %426 = extractvalue { i8*, i32 } %424, 1
  %427 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %425, i8** %427, align 8
  %428 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %426, i32* %428, align 8
  br label %bb63

cleanup22:                                        ; preds = %bb48
  %429 = landingpad { i8*, i32 }
          cleanup
  %430 = extractvalue { i8*, i32 } %429, 0
  %431 = extractvalue { i8*, i32 } %429, 1
  %432 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %430, i8** %432, align 8
  %433 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %431, i32* %433, align 8
  br label %bb124

cleanup27:                                        ; preds = %bb108
  %434 = landingpad { i8*, i32 }
          cleanup
  %435 = extractvalue { i8*, i32 } %434, 0
  %436 = extractvalue { i8*, i32 } %434, 1
  %437 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %435, i8** %437, align 8
  %438 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %436, i32* %438, align 8
  br label %bb107

cleanup28:                                        ; preds = %bb10
  %439 = landingpad { i8*, i32 }
          cleanup
  %440 = extractvalue { i8*, i32 } %439, 0
  %441 = extractvalue { i8*, i32 } %439, 1
  %442 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %440, i8** %442, align 8
  %443 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %441, i32* %443, align 8
  br label %bb7
}

; <alloc::collections::btree::map::BTreeMap<K,V> as core::ops::drop::Drop>::drop
; Function Attrs: uwtable
define internal void @"_ZN95_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfc297fa4412931e7E"(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(24) %self) unnamed_addr #1 {
start:
  %_4 = alloca %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>", align 8
  %_3 = alloca %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>", align 8
; call core::ptr::read
  call void @_ZN4core3ptr4read17hd838438999768719E(%"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(24) %_4, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* %self)
  br label %bb1

bb1:                                              ; preds = %start
; call <alloc::collections::btree::map::BTreeMap<K,V> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN115_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha2ad2ae7d338588cE"(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* noalias nocapture sret dereferenceable(72) %_3, %"alloc::collections::btree::map::BTreeMap<alloc::string::String, serde_json::value::Value>"* noalias nocapture dereferenceable(24) %_4)
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::mem::drop
  call void @_ZN4core3mem4drop17h4cdf0a3e3e40b7a7E(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* noalias nocapture dereferenceable(72) %_3)
  br label %bb3

bb3:                                              ; preds = %bb2
  ret void
}

; <alloc::collections::btree::map::IntoIter<K,V> as core::ops::drop::Drop>::drop
; Function Attrs: uwtable
define internal void @"_ZN95_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1e867d2fc2e6db12E"(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72)) unnamed_addr #1 {
start:
  %_22 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_21 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %parent = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_18 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %_17 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_16 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %cur_node = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>", align 8
  %first_parent = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_12 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %_11 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %leaf_node = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>", align 8
  %self = alloca %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, align 8
  store %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %0, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8
  %_3 = load %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17h705acdaa44546b7eE(%"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* align 8 dereferenceable(72) %_3)
  br label %bb1

bb1:                                              ; preds = %start
  %1 = load %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"*, %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"** %self, align 8, !nonnull !2
  %_8 = bitcast %"alloc::collections::btree::map::IntoIter<alloc::string::String, serde_json::value::Value>"* %1 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*
; call core::ptr::read
  call void @_ZN4core3ptr4read17he78c334b89e3473eE(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture sret dereferenceable(32) %_5, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_8)
  br label %bb2

bb2:                                              ; preds = %bb1
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  call void @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h27905051ef258e97E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture sret dereferenceable(24) %leaf_node, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_5)
  br label %bb3

bb3:                                              ; preds = %bb2
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::is_shared_root
  %2 = call zeroext i1 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$14is_shared_root17h7a7cc4af131cd917E"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias readonly align 8 dereferenceable(24) %leaf_node)
  br label %bb4

bb4:                                              ; preds = %bb3
  br i1 %2, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  %3 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %_12 to i8*
  %4 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* %leaf_node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::deallocate_and_ascend
  call void @"_ZN5alloc11collections5btree4node117NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$21deallocate_and_ascend17h103a691c078c7681E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %_11, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Leaf>"* noalias nocapture dereferenceable(24) %_12)
  br label %bb8

bb6:                                              ; preds = %bb4
  br label %bb7

bb7:                                              ; preds = %bb16, %bb6
  ret void

bb8:                                              ; preds = %bb5
  %5 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_11, i32 0, i32 1
  %6 = load {}*, {}** %5, align 8
  %7 = icmp ule {}* %6, null
  %_13 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_13, 1
  br i1 %8, label %bb9, label %bb16

bb9:                                              ; preds = %bb8
  %9 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_11 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %10 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %first_parent to i8*
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false)
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_16 to i8*
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %first_parent to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  call void @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h9f64cb8d9a510b3dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %cur_node, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_16)
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb11

bb11:                                             ; preds = %bb15, %bb10
  %15 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_18 to i8*
  %16 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %cur_node to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::deallocate_and_ascend
  call void @"_ZN5alloc11collections5btree4node121NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$21deallocate_and_ascend17hfdaad5e2355dadfcE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* noalias nocapture sret dereferenceable(32) %_17, %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture dereferenceable(24) %_18)
  br label %bb12

bb12:                                             ; preds = %bb11
  %17 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_17, i32 0, i32 1
  %18 = load {}*, {}** %17, align 8
  %19 = icmp ule {}* %18, null
  %_19 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_19, 1
  br i1 %20, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  br label %bb16

bb14:                                             ; preds = %bb12
  %21 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_17 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*
  %22 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %21 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*
  %23 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent to i8*
  %24 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 32, i1 false)
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_22 to i8*
  %26 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false)
; call alloc::collections::btree::node::Handle<Node,Type>::into_node
  call void @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h9f64cb8d9a510b3dE"(%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* noalias nocapture sret dereferenceable(24) %_21, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* noalias nocapture dereferenceable(32) %_22)
  br label %bb15

bb15:                                             ; preds = %bb14
  %27 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %cur_node to i8*
  %28 = bitcast %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, alloc::string::String, serde_json::value::Value, alloc::collections::btree::node::marker::Internal>"* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false)
  br label %bb11

bb16:                                             ; preds = %bb13, %bb8
  br label %bb7
}

; <core::iter::adapters::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint uwtable
define internal { i64, i64* } @"_ZN99_$LT$core..iter..adapters..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0dd19be316ad08adE"(%"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* align 8 dereferenceable(24)) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_15 = alloca { i64, i64* }, align 8
  %i = alloca i64, align 8
  %_3 = alloca i64*, align 8
  %2 = alloca { i64, i64* }, align 8
  %self = alloca %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"*, align 8
  store %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %0, %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"** %self, align 8
  %3 = load %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"*, %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"** %self, align 8, !nonnull !2
  %_5 = bitcast %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %3 to { i64*, i64* }*
; call <core::slice::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %4 = call align 8 dereferenceable_or_null(24) i64* @"_ZN85_$LT$core..slice..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hacc90ace75337820E"({ i64*, i64* }* align 8 dereferenceable(16) %_5)
  br label %bb2

bb1:                                              ; preds = %bb12, %bb4
  %5 = bitcast { i8*, i32 }* %1 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1
  resume { i8*, i32 } %10

bb2:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try::Try>::into_result
  %11 = call align 8 dereferenceable_or_null(24) i64* @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$11into_result17h69e50f668c5914b0E"(i64* noalias readonly align 8 dereferenceable_or_null(24) %4)
  store i64* %11, i64** %_3, align 8
  br label %bb3

bb3:                                              ; preds = %bb2
  %12 = bitcast i64** %_3 to {}**
  %13 = load {}*, {}** %12, align 8
  %14 = icmp ule {}* %13, null
  %_6 = select i1 %14, i64 1, i64 0
  switch i64 %_6, label %bb5 [
    i64 0, label %bb11
    i64 1, label %bb6
  ]

bb4:                                              ; preds = %cleanup
  br label %bb1

bb5:                                              ; preds = %bb3
  unreachable

bb6:                                              ; preds = %bb3
; invoke <T as core::convert::From<T>>::from
  invoke void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8350beb1cc1a0fe3E"()
          to label %bb8 unwind label %cleanup

bb7:                                              ; preds = %bb13, %bb10
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %2, i32 0, i32 1
  %18 = load i64*, i64** %17, align 8
  %19 = insertvalue { i64, i64* } undef, i64 %16, 0
  %20 = insertvalue { i64, i64* } %19, i64* %18, 1
  ret { i64, i64* } %20

bb8:                                              ; preds = %bb6
; invoke <core::option::Option<T> as core::ops::try::Try>::from_error
  %21 = invoke { i64, i64* } @"_ZN69_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try..Try$GT$10from_error17he6a90d6276489fa2E"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  store { i64, i64* } %21, { i64, i64* }* %2, align 8
  br label %bb10

bb10:                                             ; preds = %bb9
  br label %bb7

bb11:                                             ; preds = %bb3
  %22 = bitcast i64** %_3 to %"alloc::string::String"**
  %val = load %"alloc::string::String"*, %"alloc::string::String"** %22, align 8, !nonnull !2
  %23 = bitcast i64** %_3 to {}**
  %24 = load {}*, {}** %23, align 8
  %25 = icmp ule {}* %24, null
  %_18 = select i1 %25, i64 1, i64 0
  %26 = icmp eq i64 %_18, 0
  br i1 %26, label %bb14, label %bb15

bb12:                                             ; preds = %cleanup1
  br label %bb1

bb13:                                             ; preds = %bb14
  %_16 = load i64, i64* %i, align 8
  %27 = bitcast { i64, i64* }* %_15 to i64*
  store i64 %_16, i64* %27, align 8
  %28 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_15, i32 0, i32 1
  %29 = bitcast i64** %28 to %"alloc::string::String"**
  store %"alloc::string::String"* %val, %"alloc::string::String"** %29, align 8
  %30 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_15, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_15, i32 0, i32 1
  %33 = load i64*, i64** %32, align 8, !nonnull !2
  %34 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %2, i32 0, i32 0
  store i64 %31, i64* %34, align 8
  %35 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %2, i32 0, i32 1
  store i64* %33, i64** %35, align 8
  br label %bb7

bb14:                                             ; preds = %bb15, %bb11
  %36 = load %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"*, %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"** %self, align 8, !nonnull !2
  %37 = getelementptr inbounds %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>", %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %36, i32 0, i32 3
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %i, align 8
  %39 = load %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"*, %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"** %self, align 8, !nonnull !2
  %_14 = getelementptr inbounds %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>", %"core::iter::adapters::Enumerate<core::slice::Iter<alloc::string::String>>"* %39, i32 0, i32 3
; invoke <usize as core::ops::arith::AddAssign>::add_assign
  invoke void @"_ZN53_$LT$usize$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17hdded4710d83715c2E"(i64* align 8 dereferenceable(8) %_14, i64 1)
          to label %bb13 unwind label %cleanup1

bb15:                                             ; preds = %bb11
  br label %bb14

cleanup:                                          ; preds = %bb8, %bb6
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb4

cleanup1:                                         ; preds = %bb14
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  %47 = extractvalue { i8*, i32 } %45, 1
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %46, i8** %48, align 8
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %47, i32* %49, align 8
  br label %bb12
}

; <core::ops::range::Range<usize> as core::slice::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint uwtable
define internal { [0 x i8]*, i64 } @"_ZN99_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hdb909e221daffdcdE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::as_mut_ptr
  %0 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h3c30ddea5112580bE"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1)
  br label %bb1

bb1:                                              ; preds = %start
; call core::ptr::<impl *mut T>::add
  %1 = call i8* @"_ZN4core3ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h53a1d84ce18af2b4E"(i8* %0, i64 %self.0)
  br label %bb2

bb2:                                              ; preds = %bb1
  %_9 = sub i64 %self.1, %self.0
; call core::slice::from_raw_parts_mut
  %2 = call { [0 x i8]*, i64 } @_ZN4core5slice18from_raw_parts_mut17hcfc009bfc8a440dbE(i8* %1, i64 %_9)
  %_3.0 = extractvalue { [0 x i8]*, i64 } %2, 0
  %_3.1 = extractvalue { [0 x i8]*, i64 } %2, 1
  br label %bb3

bb3:                                              ; preds = %bb2
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %_3.1, 1
  ret { [0 x i8]*, i64 } %4
}

; init::main
; Function Attrs: uwtable
define internal void @_ZN4init4main17h89636d63d1c929b0E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_16 = alloca i64*, align 8
  %_15 = alloca [1 x { i8*, i8* }], align 8
  %_8 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca %"core::result::Result<serde_json::value::Value, serde_json::error::Error>", align 8
  %json = alloca %"serde_json::value::Value", align 8
; call serde_json::de::from_str
  call void @_ZN10serde_json2de8from_str17h9e13a99f8f087c84E(%"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture sret dereferenceable(40) %_3, [0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [76 x i8] }>* @88 to [0 x i8]*), i64 76)
  br label %bb2

bb1:                                              ; preds = %bb5
  %1 = bitcast { i8*, i32 }* %0 to i8**
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1
  resume { i8*, i32 } %6

bb2:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hee50ea2420033f6dE"(%"serde_json::value::Value"* noalias nocapture sret dereferenceable(32) %json, %"core::result::Result<serde_json::value::Value, serde_json::error::Error>"* noalias nocapture dereferenceable(40) %_3, [0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [27 x i8] }>* @89 to [0 x i8]*), i64 27)
  br label %bb3

bb3:                                              ; preds = %bb2
; invoke serde_json::value::index::<impl core::ops::index::Index<I> for serde_json::value::Value>::index
  %_17 = invoke align 8 dereferenceable(32) %"serde_json::value::Value"* @"_ZN10serde_json5value5index87_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$serde_json..value..Value$GT$5index17ha5c06c0c762387d7E"(%"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32) %json, [0 x i8]* noalias nonnull readonly align 1 bitcast (<{ [4 x i8] }>* @93 to [0 x i8]*), i64 4)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %7 = bitcast i64** %_16 to %"serde_json::value::Value"**
  store %"serde_json::value::Value"* %_17, %"serde_json::value::Value"** %7, align 8
  %8 = bitcast i64** %_16 to %"serde_json::value::Value"**
  %arg0 = load %"serde_json::value::Value"*, %"serde_json::value::Value"** %8, align 8, !nonnull !2
; invoke core::fmt::ArgumentV1::new
  %9 = invoke { i8*, i8* } @_ZN4core3fmt10ArgumentV13new17h35f79c12d3e3a572E(%"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32) %arg0, i1 (%"serde_json::value::Value"*, %"core::fmt::Formatter"*)* nonnull @"_ZN63_$LT$serde_json..value..Value$u20$as$u20$core..fmt..Display$GT$3fmt17hbfa048b007d2550eE")
          to label %bb6 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %json) #14
  br label %bb1

bb6:                                              ; preds = %bb4
  %10 = extractvalue { i8*, i8* } %9, 0
  %11 = extractvalue { i8*, i8* } %9, 1
  %12 = bitcast [1 x { i8*, i8* }]* %_15 to { i8*, i8* }*
  %13 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %12, i32 0, i32 0
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %12, i32 0, i32 1
  store i8* %11, i8** %14, align 8
  %_12.0 = bitcast [1 x { i8*, i8* }]* %_15 to [0 x { i8*, i8* }]*
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h051a28c28e177c3eE(%"core::fmt::Arguments"* noalias nocapture sret dereferenceable(48) %_8, [0 x { [0 x i8]*, i64 }]* noalias nonnull readonly align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @92 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i8* }]* noalias nonnull readonly align 8 %_12.0, i64 1)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h4c8af15b91bc61beE(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48) %_8)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; call core::ptr::real_drop_in_place
  call void @_ZN4core3ptr18real_drop_in_place17hf41454ab830ed941E(%"serde_json::value::Value"* align 8 dereferenceable(32) %json)
  br label %bb9

bb9:                                              ; preds = %bb8
  ret void

cleanup:                                          ; preds = %bb7, %bb6, %bb4, %bb3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb5
}

; Function Attrs: nounwind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; <serde_json::read::StrRead as serde_json::read::Read>::peek_position
; Function Attrs: uwtable
declare { i64, i64 } @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$13peek_position17hedd027b1449046ecE"(%"serde_json::read::StrRead"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1

; serde_json::error::Error::syntax
; Function Attrs: cold uwtable
declare noalias align 8 dereferenceable(40) i64* @_ZN10serde_json5error5Error6syntax17h5970e7652e1e592cE(%"serde_json::error::ErrorCode"* noalias nocapture dereferenceable(24), i64, i64) unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.expect.i1(i1, i1) #7

; core::panicking::panic
; Function Attrs: cold noinline noreturn uwtable
declare void @_ZN4core9panicking5panic17h4accb85f0b6300d8E([0 x i8]* noalias nonnull readonly align 1, i64, %"core::panic::Location"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #8

; <serde_json::read::StrRead as serde_json::read::Read>::position
; Function Attrs: uwtable
declare { i64, i64 } @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$8position17h0de67cf19128ec6bE"(%"serde_json::read::StrRead"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #1

; serde_json::read::StrRead::new
; Function Attrs: uwtable
declare void @_ZN10serde_json4read7StrRead3new17h55808fc1fd2f5736E(%"serde_json::read::StrRead"* noalias nocapture sret dereferenceable(24), [0 x i8]* noalias nonnull readonly align 1, i64) unnamed_addr #1

; std::rt::lang_start_internal
; Function Attrs: uwtable
declare i64 @_ZN3std2rt19lang_start_internal17hf6b4b5e300467e14E({}* nonnull align 1, [3 x i64]* noalias readonly align 8 dereferenceable(24), i64, i8**) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h90bd9b6eeff0d48aE(%"core::fmt::Formatter"* noalias readonly align 8 dereferenceable(96)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h22354132e712f8deE"(i64* noalias readonly align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(96)) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h62a07b91be28651eE(%"core::fmt::Formatter"* noalias readonly align 8 dereferenceable(96)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h816df81b6117ada5E"(i64* noalias readonly align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(96)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h7face90fc68d4b82E"(i64* noalias readonly align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(96)) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.sadd.sat.i32(i32, i32) #9

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ssub.sat.i32(i32, i32) #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; <core::fmt::Arguments as core::fmt::Display>::fmt
; Function Attrs: uwtable
declare zeroext i1 @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h1af424902c06a4ccE"(%"core::fmt::Arguments"* noalias readonly align 8 dereferenceable(48), %"core::fmt::Formatter"* align 8 dereferenceable(96)) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn uwtable
declare void @_ZN4core9panicking9panic_fmt17hd7292ad32c8f247fE(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48), %"core::panic::Location"* noalias readonly align 8 dereferenceable(24)) unnamed_addr #8

; Function Attrs: nounwind
declare void @llvm.assume(i1) #10

; <serde_json::error::Error as core::fmt::Debug>::fmt
; Function Attrs: uwtable
declare zeroext i1 @"_ZN61_$LT$serde_json..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h12d67353ba91dfdbE"(i64** noalias readonly align 8 dereferenceable(8), %"core::fmt::Formatter"* align 8 dereferenceable(96)) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn uwtable
declare void @_ZN4core6result13unwrap_failed17h6871ea10c3403c7dE([0 x i8]* noalias nonnull readonly align 1, i64, {}* nonnull align 1, [3 x i64]* noalias readonly align 8 dereferenceable(24)) unnamed_addr #8

; <core::alloc::LayoutErr as core::fmt::Debug>::fmt
; Function Attrs: uwtable
declare zeroext i1 @"_ZN59_$LT$core..alloc..LayoutErr$u20$as$u20$core..fmt..Debug$GT$3fmt17h7f2cfe2f03b2687cE"(%"core::alloc::LayoutErr"* noalias nonnull readonly align 1, %"core::fmt::Formatter"* align 8 dereferenceable(96)) unnamed_addr #1

; <! as core::fmt::Debug>::fmt
; Function Attrs: uwtable
declare zeroext i1 @"_ZN42_$LT$$u21$$u20$as$u20$core..fmt..Debug$GT$3fmt17h2885998fd11a212fE"({ [0 x i8] }* noalias nonnull readonly align 1, %"core::fmt::Formatter"* align 8 dereferenceable(96)) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; <str as serde_json::value::index::Index>::index_into
; Function Attrs: uwtable
declare align 8 dereferenceable_or_null(32) i64* @"_ZN55_$LT$str$u20$as$u20$serde_json..value..index..Index$GT$10index_into17h71d7b8ae0e9e3d53E"([0 x i8]* noalias nonnull readonly align 1, i64, %"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind uwtable
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #5

; alloc::alloc::handle_alloc_error
; Function Attrs: noreturn nounwind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17ha9817a3b2f207634E(i64, i64) unnamed_addr #12

; Function Attrs: nounwind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #5

; Function Attrs: nounwind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #5

; Function Attrs: nounwind uwtable
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #5

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hd96c417e4217a689E() unnamed_addr #4

; Function Attrs: nounwind uwtable
declare i32 @memcmp(i8*, i8*, i64) unnamed_addr #5

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h4b238fdcc01bb5fbE(%"core::panic::Location"* noalias readonly align 8 dereferenceable(24), i64, i64) unnamed_addr #8

; <serde_json::read::StrRead as serde_json::read::Read>::parse_str
; Function Attrs: uwtable
declare void @"_ZN68_$LT$serde_json..read..StrRead$u20$as$u20$serde_json..read..Read$GT$9parse_str17h400120ae3ef9939dE"(%"core::result::Result<serde_json::read::Reference<str>, serde_json::error::Error>"* noalias nocapture sret dereferenceable(32), %"serde_json::read::StrRead"* align 8 dereferenceable(24), %"alloc::vec::Vec<u8>"* align 8 dereferenceable(24)) unnamed_addr #1

; <serde_json::value::Value as core::fmt::Display>::fmt
; Function Attrs: uwtable
declare zeroext i1 @"_ZN63_$LT$serde_json..value..Value$u20$as$u20$core..fmt..Display$GT$3fmt17hbfa048b007d2550eE"(%"serde_json::value::Value"* noalias readonly align 8 dereferenceable(32), %"core::fmt::Formatter"* align 8 dereferenceable(96)) unnamed_addr #1

; std::io::stdio::_print
; Function Attrs: uwtable
declare void @_ZN3std2io5stdio6_print17h4c8af15b91bc61beE(%"core::fmt::Arguments"* noalias nocapture dereferenceable(48)) unnamed_addr #1

define i32 @main(i32, i8**) unnamed_addr #13 {
top:
  %2 = sext i32 %0 to i64
; call std::rt::lang_start
  %3 = call i64 @_ZN3std2rt10lang_start17h13fec0213b3556eaE(void ()* @_ZN4init4main17h89636d63d1c929b0E, i64 %2, i8** %1)
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

attributes #0 = { inlinehint uwtable "no-frame-pointer-elim"="true" "probe-stack"="__rust_probestack" "target-cpu"="core2" }
attributes #1 = { uwtable "no-frame-pointer-elim"="true" "probe-stack"="__rust_probestack" "target-cpu"="core2" }
attributes #2 = { cold uwtable "no-frame-pointer-elim"="true" "probe-stack"="__rust_probestack" "target-cpu"="core2" }
attributes #3 = { cold noinline uwtable "no-frame-pointer-elim"="true" "probe-stack"="__rust_probestack" "target-cpu"="core2" }
attributes #4 = { noreturn uwtable "no-frame-pointer-elim"="true" "probe-stack"="__rust_probestack" "target-cpu"="core2" }
attributes #5 = { nounwind uwtable "no-frame-pointer-elim"="true" "probe-stack"="__rust_probestack" "target-cpu"="core2" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone }
attributes #8 = { cold noinline noreturn uwtable "no-frame-pointer-elim"="true" "probe-stack"="__rust_probestack" "target-cpu"="core2" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noreturn nounwind uwtable "no-frame-pointer-elim"="true" "probe-stack"="__rust_probestack" "target-cpu"="core2" }
attributes #13 = { "no-frame-pointer-elim"="true" "target-cpu"="core2" }
attributes #14 = { noinline }

!llvm.module.flags = !{!0}

!0 = !{i32 7, !"PIE Level", i32 2}
!1 = !{i64 0, i64 2}
!2 = !{}
!3 = !{i64 0, i64 3}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5alloc11collections5btree3map16unwrap_unchecked17h37682249b9d1d88bE: argument 0"}
!7 = distinct !{!7, !"_ZN5alloc11collections5btree3map16unwrap_unchecked17h37682249b9d1d88bE"}
!8 = !{!9}
!9 = distinct !{!9, !7, !"_ZN5alloc11collections5btree3map16unwrap_unchecked17h37682249b9d1d88bE: %val"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5alloc11collections5btree3map16unwrap_unchecked17h37682249b9d1d88bE: argument 0"}
!12 = distinct !{!12, !"_ZN5alloc11collections5btree3map16unwrap_unchecked17h37682249b9d1d88bE"}
!13 = !{!14}
!14 = distinct !{!14, !12, !"_ZN5alloc11collections5btree3map16unwrap_unchecked17h37682249b9d1d88bE: %val"}
!15 = !{i8 0, i8 7}
!16 = !{i8 -1, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hbc9cf3f82c62390eE: argument 0"}
!19 = distinct !{!19, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hbc9cf3f82c62390eE"}
!20 = !{!21}
!21 = distinct !{!21, !19, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hbc9cf3f82c62390eE: %value"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb2bdea9e6510c6c4E: %value"}
!24 = distinct !{!24, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb2bdea9e6510c6c4E"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h30037a0cd6f890a4E: %value"}
!27 = distinct !{!27, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h30037a0cd6f890a4E"}
!28 = !{i64 1, i64 0}
!29 = !{i8 0, i8 3}
!30 = !{i64 0, i64 24}
!31 = !{i8 0, i8 6}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hd69d41232e4ff72dE: argument 0"}
!34 = distinct !{!34, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hd69d41232e4ff72dE"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h78ce8d08fd2884c3E: argument 0"}
!37 = distinct !{!37, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h78ce8d08fd2884c3E"}
!38 = distinct !{!38, !37, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h78ce8d08fd2884c3E: %slot"}
!39 = !{!40}
!40 = distinct !{!40, !34, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hd69d41232e4ff72dE: %self"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h7737e9dd9d6511eaE: argument 0"}
!43 = distinct !{!43, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h7737e9dd9d6511eaE"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h275d6780087b70a2E: argument 0"}
!46 = distinct !{!46, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h275d6780087b70a2E"}
!47 = distinct !{!47, !46, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h275d6780087b70a2E: %slot"}
!48 = !{!49}
!49 = distinct !{!49, !43, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h7737e9dd9d6511eaE: %self"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h0cd5e5cc8b0b8d51E: argument 0"}
!52 = distinct !{!52, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h0cd5e5cc8b0b8d51E"}
!53 = !{!54, !56}
!54 = distinct !{!54, !55, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hf2b5fef978c365e1E: argument 0"}
!55 = distinct !{!55, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hf2b5fef978c365e1E"}
!56 = distinct !{!56, !55, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hf2b5fef978c365e1E: %slot"}
!57 = !{!58}
!58 = distinct !{!58, !52, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h0cd5e5cc8b0b8d51E: %self"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17he531bec3b78ce88bE: argument 0"}
!61 = distinct !{!61, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17he531bec3b78ce88bE"}
!62 = !{!63, !65}
!63 = distinct !{!63, !64, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17he1da0b7da8b210d4E: argument 0"}
!64 = distinct !{!64, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17he1da0b7da8b210d4E"}
!65 = distinct !{!65, !64, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17he1da0b7da8b210d4E: %slot"}
!66 = !{!67}
!67 = distinct !{!67, !61, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17he531bec3b78ce88bE: %self"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h6b8a36c33c54f9e9E: argument 0"}
!70 = distinct !{!70, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h6b8a36c33c54f9e9E"}
!71 = !{!72, !74}
!72 = distinct !{!72, !73, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h30df980f0f7d0775E: argument 0"}
!73 = distinct !{!73, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h30df980f0f7d0775E"}
!74 = distinct !{!74, !73, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h30df980f0f7d0775E: %slot"}
!75 = !{!76}
!76 = distinct !{!76, !70, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h6b8a36c33c54f9e9E: %self"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h5f23653eb42fdcf2E: argument 0"}
!79 = distinct !{!79, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h5f23653eb42fdcf2E"}
!80 = !{!81, !83}
!81 = distinct !{!81, !82, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h0c07988ec245b18cE: argument 0"}
!82 = distinct !{!82, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h0c07988ec245b18cE"}
!83 = distinct !{!83, !82, !"_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h0c07988ec245b18cE: %slot"}
!84 = !{!85}
!85 = distinct !{!85, !79, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h5f23653eb42fdcf2E: %self"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN4core5slice13Iter$LT$T$GT$10make_slice17h1dc4c61d694f63e0E: %self"}
!88 = distinct !{!88, !"_ZN4core5slice13Iter$LT$T$GT$10make_slice17h1dc4c61d694f63e0E"}
!89 = !{i64 0, i64 4}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17hfd2c1848fb123935E: %x"}
!92 = distinct !{!92, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17hfd2c1848fb123935E"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17h7ea1689dbf759837E: %x"}
!95 = distinct !{!95, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17h7ea1689dbf759837E"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h9af08f2f012a99bcE: argument 0"}
!98 = distinct !{!98, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h9af08f2f012a99bcE"}
!99 = !{!100, !97}
!100 = distinct !{!100, !101, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hebced29fbde63815E: argument 0"}
!101 = distinct !{!101, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hebced29fbde63815E"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h9af08f2f012a99bcE: argument 0"}
!104 = distinct !{!104, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h9af08f2f012a99bcE"}
!105 = !{!106, !103}
!106 = distinct !{!106, !107, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hebced29fbde63815E: argument 0"}
!107 = distinct !{!107, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hebced29fbde63815E"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17h7ea1689dbf759837E: %x"}
!110 = distinct !{!110, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17h7ea1689dbf759837E"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17hfd2c1848fb123935E: %x"}
!113 = distinct !{!113, !"_ZN5alloc5boxed12Box$LT$T$GT$3new17hfd2c1848fb123935E"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h804dd8880a62283aE: argument 0"}
!116 = distinct !{!116, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h804dd8880a62283aE"}
!117 = !{!118, !115}
!118 = distinct !{!118, !119, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9e7d838d38911296E: argument 0"}
!119 = distinct !{!119, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9e7d838d38911296E"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h804dd8880a62283aE: argument 0"}
!122 = distinct !{!122, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h804dd8880a62283aE"}
!123 = !{!124, !121}
!124 = distinct !{!124, !125, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9e7d838d38911296E: argument 0"}
!125 = distinct !{!125, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9e7d838d38911296E"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h804dd8880a62283aE: argument 0"}
!128 = distinct !{!128, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h804dd8880a62283aE"}
!129 = !{!130, !127}
!130 = distinct !{!130, !131, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9e7d838d38911296E: argument 0"}
!131 = distinct !{!131, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9e7d838d38911296E"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h804dd8880a62283aE: argument 0"}
!134 = distinct !{!134, !"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17h804dd8880a62283aE"}
!135 = !{!136, !133}
!136 = distinct !{!136, !137, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9e7d838d38911296E: argument 0"}
!137 = distinct !{!137, !"_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9e7d838d38911296E"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hc98ff07db57c4f73E: %self.0"}
!140 = distinct !{!140, !"_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17hc98ff07db57c4f73E"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E: %self"}
!143 = distinct !{!143, !"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E: %self"}
!146 = distinct !{!146, !"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E: %self"}
!149 = distinct !{!149, !"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h343bd9836d21d492E"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E: %self"}
!152 = distinct !{!152, !"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h6a27c19b161ecd37E"}
